{"version":3,"file":"90.0a655924972eff2ac940.js","mappings":"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","sources":["webpack://monvvo-app/./public/js/mortgage-calculator.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    console.log(\"DOMContentLoaded event fired\");\r\n\r\n    // Disable Google Analytics on localhost\r\n    if (window.location.hostname === \"localhost\") {\r\n        console.log(\"Running on localhost, disabling Google Analytics\");\r\n    }\r\n\r\n    // Mortgage calculation functionality\r\n    const homePriceInput = document.getElementById('home-price');\r\n    const downPaymentAmountInput = document.getElementById('down-payment-amount');\r\n    const downPaymentPercentageInput = document.getElementById('down-payment-percentage');\r\n    const loanTermInput = document.getElementById('loan-term');\r\n    const interestRateInput = document.getElementById('interest-rate');\r\n    const propertyTaxInput = document.getElementById('property-tax');\r\n    const pmiExpenseInput = document.getElementById('pmi-expense');\r\n    const hoaExpenseInput = document.getElementById('hoa-expense');\r\n    const updateBtn = document.getElementById('update-btn');\r\n    const resetBtn = document.getElementById('reset-btn');\r\n    const canvas = document.getElementById('mortgageChart');\r\n    const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n    const labelsContainer = document.getElementById('chartLabels');\r\n    const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n\r\n    const defaultValues = {\r\n        homePrice: 500000,\r\n        downPaymentAmount: 25000,\r\n        downPaymentPercentage: 5,\r\n        loanTerm: 25,\r\n        interestRate: 7.04,\r\n        propertyTax: 250,\r\n        pmiExpense: 200,\r\n        hoaExpense: 0\r\n    };\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2\r\n    });\r\n\r\n    const inputsToRestrict = [\r\n        homePriceInput,\r\n        downPaymentAmountInput,\r\n        downPaymentPercentageInput,\r\n        loanTermInput,\r\n        interestRateInput,\r\n        propertyTaxInput,\r\n        pmiExpenseInput,\r\n        hoaExpenseInput\r\n    ];\r\n\r\n    inputsToRestrict.forEach(input => {\r\n        input.addEventListener('keydown', function (event) {\r\n            if (event.key === \"-\" || event.key === \"e\") {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    });\r\n\r\n    let lastAmortizationData = null;\r\n\r\n    downPaymentAmountInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || 0;\r\n        const downPaymentPercentage = (downPaymentAmount / homePrice) * 100;\r\n        downPaymentPercentageInput.value = Number.isInteger(downPaymentPercentage)\r\n            ? downPaymentPercentage\r\n            : downPaymentPercentage.toFixed(2);\r\n    });\r\n\r\n    downPaymentPercentageInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentPercentage = parseFloat(downPaymentPercentageInput.value) || 0;\r\n        const downPaymentAmount = Math.ceil((downPaymentPercentage / 100) * homePrice);\r\n        downPaymentAmountInput.value = downPaymentAmount;\r\n    });\r\n\r\n    homePriceInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || 0;\r\n        const downPaymentPercentage = (downPaymentAmount / homePrice) * 100;\r\n        downPaymentPercentageInput.value = Number.isInteger(downPaymentPercentage)\r\n            ? downPaymentPercentage\r\n            : downPaymentPercentage.toFixed(2);\r\n    });\r\n\r\n    updateBtn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        console.log(\"Update button clicked\");\r\n        calculateAndDisplayResults();\r\n    });\r\n\r\n    resetBtn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        console.log(\"Reset button clicked\");\r\n        resetInputs();\r\n    });\r\n\r\n    const tabPaymentBreakdown = document.getElementById(\"tab-payment-breakdown\");\r\n    const tabAmortizationSchedule = document.getElementById(\"tab-amortization-schedule\");\r\n\r\n    const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n    const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n\r\n    function showTab(tabName) {\r\n        if (tabName === \"payment\") {\r\n            paymentBreakdownContent.style.display = \"block\";\r\n            amortizationScheduleContent.style.display = \"none\";\r\n            tabPaymentBreakdown.classList.add(\"tab-active\");\r\n            tabAmortizationSchedule.classList.remove(\"tab-active\");\r\n            if (lastAmortizationData) {\r\n                const { monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA } = lastAmortizationData;\r\n                updateHorizontalStackedBarChart(monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA);\r\n            }\r\n        } else if (tabName === \"amortization\") {\r\n            paymentBreakdownContent.style.display = \"none\";\r\n            amortizationScheduleContent.style.display = \"block\";\r\n            tabPaymentBreakdown.classList.remove(\"tab-active\");\r\n            tabAmortizationSchedule.classList.add(\"tab-active\");\r\n            if (lastAmortizationData) {\r\n                const { balanceData, cumulativeInterestData, cumulativePrincipalData, totalInterestPaid, totalPrincipalPaid, totalAmountPaid } = lastAmortizationData;\r\n                drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData);\r\n                updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid);\r\n            }\r\n        }\r\n    }\r\n\r\n    tabPaymentBreakdown.addEventListener(\"click\", () => showTab(\"payment\"));\r\n    tabAmortizationSchedule.addEventListener(\"click\", () => showTab(\"amortization\"));\r\n\r\n    function calculateAndDisplayResults() {\r\n        console.log(\"Calculating and displaying results\");\r\n\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value);\r\n        const downPaymentPercentage = parseFloat(downPaymentPercentageInput.value);\r\n\r\n        let downPayment;\r\n        if (!isNaN(downPaymentPercentage) && downPaymentPercentage > 0) {\r\n            downPayment = Math.ceil((downPaymentPercentage / 100) * homePrice);\r\n            downPaymentAmountInput.value = downPayment;\r\n        } else if (!isNaN(downPaymentAmount)) {\r\n            downPayment = downPaymentAmount;\r\n            const percentageValue = (downPaymentAmount / homePrice) * 100;\r\n            downPaymentPercentageInput.value = Number.isInteger(percentageValue)\r\n                ? percentageValue\r\n                : percentageValue.toFixed(2);\r\n        } else {\r\n            downPayment = defaultValues.downPaymentAmount;\r\n        }\r\n\r\n        const principal = homePrice - downPayment;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = parseFloat(interestRateInput.value) || defaultValues.interestRate;\r\n        const propertyTax = parseFloat(propertyTaxInput.value) || defaultValues.propertyTax;\r\n        const pmiExpense = parseFloat(pmiExpenseInput.value) || defaultValues.pmiExpense;\r\n        const hoaExpense = parseFloat(hoaExpenseInput.value) || defaultValues.hoaExpense;\r\n\r\n        const monthlyInterestRate = (interestRate / 100) / 12;\r\n        const numberOfPayments = loanTerm * 12;\r\n        const monthlyPrincipalAndInterest = principal * monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments) / (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\r\n\r\n        const monthlyPropertyTax = propertyTax;\r\n        const monthlyPMI = pmiExpense;\r\n        const monthlyHOA = hoaExpense;\r\n\r\n        const totalMonthlyPayment = monthlyPrincipalAndInterest + monthlyPropertyTax + monthlyPMI + monthlyHOA;\r\n\r\n        updateHorizontalStackedBarChart(monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA);\r\n        updateLabels(monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA);\r\n\r\n        const monthlyPaymentElement = document.querySelector('.monthly-payment');\r\n        monthlyPaymentElement.innerText = `$${formatter.format(totalMonthlyPayment)}`;\r\n        monthlyPaymentElement.style.fontFamily = 'Open Sans';\r\n        monthlyPaymentElement.style.fontWeight = '500';\r\n        monthlyPaymentElement.style.color = '#000';\r\n\r\n        const amortizationData = calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPrincipalAndInterest, numberOfPayments);\r\n        drawAmortizationChart(amortizationData.balanceData, amortizationData.cumulativeInterestData, amortizationData.cumulativePrincipalData);\r\n        updateAmortizationLabels(amortizationData.totalInterestPaid, amortizationData.totalPrincipalPaid, amortizationData.totalAmountPaid);\r\n\r\n        lastAmortizationData = {\r\n            balanceData: amortizationData.balanceData,\r\n            cumulativeInterestData: amortizationData.cumulativeInterestData,\r\n            cumulativePrincipalData: amortizationData.cumulativePrincipalData,\r\n            totalInterestPaid: amortizationData.totalInterestPaid,\r\n            totalPrincipalPaid: amortizationData.totalPrincipalPaid,\r\n            totalAmountPaid: amortizationData.totalAmountPaid,\r\n            monthlyPrincipalAndInterest,\r\n            monthlyPropertyTax,\r\n            monthlyPMI,\r\n            monthlyHOA\r\n        };\r\n    }\r\n\r\n    function updateHoverValues(balance, interest, principal) {\r\n        const labelValues = amortizationLabelsContainer.querySelectorAll('.label-value');\r\n        if (labelValues.length === 3) {\r\n            labelValues[0].textContent = formatter.format(interest);\r\n            labelValues[1].textContent = formatter.format(principal);\r\n            labelValues[2].textContent = formatter.format(balance);\r\n        }\r\n    }\r\n\r\n    function revertValuesToTotals() {\r\n        const { totalInterestPaid, totalPrincipalPaid, totalAmountPaid } = lastAmortizationData;\r\n        updateHoverValues(totalAmountPaid, totalInterestPaid, totalPrincipalPaid);\r\n    }\r\n\r\n    function resetInputs() {\r\n        console.log(\"Resetting inputs to default values\");\r\n\r\n        homePriceInput.value = defaultValues.homePrice;\r\n        downPaymentAmountInput.value = defaultValues.downPaymentAmount;\r\n        downPaymentPercentageInput.value = defaultValues.downPaymentPercentage;\r\n        loanTermInput.value = defaultValues.loanTerm;\r\n        interestRateInput.value = defaultValues.interestRate;\r\n        propertyTaxInput.value = defaultValues.propertyTax;\r\n        pmiExpenseInput.value = defaultValues.pmiExpense;\r\n        hoaExpenseInput.value = defaultValues.hoaExpense;\r\n\r\n        calculateAndDisplayResults();\r\n    }\r\n\r\n    function drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.clip();\r\n    }\r\n\r\n    function updateHorizontalStackedBarChart(principalAndInterest, propertyTax, pmi, hoa) {\r\n        const ctx = canvas.getContext('2d');\r\n        const parentWidth = canvas.parentElement.offsetWidth;\r\n\r\n        canvas.width = parentWidth;\r\n        canvas.height = 100;\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const data = [principalAndInterest, propertyTax, pmi, hoa];\r\n        const colors = ['#175134', '#3EB721', '#91BBA6', '#B3D4C2'];\r\n\r\n        const chartHeight = 70;\r\n        const chartWidth = canvas.width;\r\n        const total = data.reduce((a, b) => a + b, 0);\r\n        const maxTotal = Math.max(total, 1);\r\n\r\n        const xOffset = 0;\r\n        const yOffset = canvas.height / 2;\r\n        const borderRadius = 5;\r\n        const gap = 2;\r\n\r\n        ctx.save();\r\n        drawRoundedRect(ctx, xOffset, yOffset - chartHeight / 2, chartWidth, chartHeight, borderRadius);\r\n\r\n        let cumulativeWidth = 0;\r\n\r\n        data.forEach((value, index) => {\r\n            const barWidth = (value / maxTotal) * chartWidth - gap;\r\n            ctx.fillStyle = colors[index];\r\n            ctx.fillRect(xOffset + cumulativeWidth, yOffset - chartHeight / 2, barWidth, chartHeight);\r\n            cumulativeWidth += barWidth + gap;\r\n        });\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    function updateLabels(principalAndInterest, propertyTax, pmi, hoa) {\r\n        const labels = [\r\n            { label: 'Principal & Interest', value: principalAndInterest, color: '#175134' },\r\n            { label: 'Property Tax', value: propertyTax, color: '#3EB721' },\r\n            { label: 'PMI', value: pmi, color: '#91BBA6' },\r\n            { label: 'HOA', value: hoa, color: '#B3D4C2' }\r\n        ];\r\n\r\n        labelsContainer.innerHTML = ''; // Clear previous labels\r\n\r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item');\r\n            labelElement.style.fontFamily = \"'Open Sans', sans-serif\";\r\n            labelElement.style.fontWeight = '550';\r\n            labelElement.style.color = \"#101010\";\r\n            \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n\r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name');\r\n            labelText.textContent = item.label;\r\n\r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = `${formatter.format(item.value)}`;\r\n\r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n\r\n            labelsContainer.appendChild(labelElement);\r\n        });\r\n    }\r\n\r\n    function calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPrincipalAndInterest, numberOfPayments) {\r\n        const balanceData = [];\r\n        const cumulativeInterestData = [];\r\n        const cumulativePrincipalData = [];\r\n        \r\n        let balance = principal;\r\n        let cumulativeInterest = 0;\r\n        let cumulativePrincipal = 0;\r\n\r\n        for (let month = 1; month <= numberOfPayments; month++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = monthlyPrincipalAndInterest - interestPayment;\r\n            balance -= principalPayment;\r\n\r\n            cumulativeInterest += interestPayment;\r\n            cumulativePrincipal += principalPayment;\r\n\r\n            balanceData.push(balance > 0 ? balance : 0);\r\n            cumulativeInterestData.push(cumulativeInterest);\r\n            cumulativePrincipalData.push(cumulativePrincipal);\r\n        }\r\n\r\n        const totalInterestPaid = cumulativeInterest;\r\n        const totalPrincipalPaid = cumulativePrincipal;\r\n        const totalAmountPaid = monthlyPrincipalAndInterest * numberOfPayments;\r\n\r\n        return { balanceData, cumulativeInterestData, cumulativePrincipalData, totalInterestPaid, totalPrincipalPaid, totalAmountPaid };\r\n    }\r\n\r\n    function drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData) {\r\n        const ctx = amortizationChartCanvas.getContext('2d');\r\n        const dpr = window.devicePixelRatio || 1;\r\n    \r\n        // Adjust height dynamically based on screen width\r\n        let height;\r\n        if (window.innerWidth < 500) {\r\n            height = 200; // Set a smaller height for smaller screens\r\n        } else {\r\n            height = 300; // Default height\r\n        }\r\n    \r\n        amortizationChartCanvas.style.width = '100%';\r\n        amortizationChartCanvas.style.height = `${height}px`;\r\n    \r\n        const width = amortizationChartCanvas.offsetWidth;\r\n        amortizationChartCanvas.width = width * dpr;\r\n        amortizationChartCanvas.height = height * dpr;\r\n    \r\n        if (dpr > 1) {\r\n            ctx.scale(dpr, dpr);\r\n        }\r\n    \r\n        ctx.clearRect(0, 0, width * dpr, height * dpr);\r\n    \r\n        const months = balanceData.length;\r\n        const maxBalance = Math.max(...balanceData);\r\n        const maxCumulative = Math.max(...cumulativeInterestData, ...cumulativePrincipalData);\r\n    \r\n        const yAxisMax = Math.max(maxBalance, maxCumulative);\r\n    \r\n        const intervalMonths = 5 * 12;\r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 };\r\n    \r\n        const gridColor = '#d0d0d0';\r\n        const labelColor = '#505050';\r\n        const labelFont = '14px Open Sans';\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        if (window.innerWidth < 500) {\r\n            labelfont = '10px'; // Set a smaller font for smaller screens\r\n        } else {\r\n            height = '14px'; // Default height\r\n        }\r\n    \r\n        ctx.font = labelFont;\r\n        ctx.textAlign = 'right';\r\n    \r\n        function getY(value) {\r\n            return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n        }\r\n    \r\n        function getX(index) {\r\n            return padding.left + (index / months) * (width - padding.left - padding.right);\r\n        }\r\n        window.addEventListener('resize', () => {\r\n            drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData);\r\n        });\r\n        \r\n        // Draw horizontal grid lines only, avoiding the line at the bottom (y-axis line)\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.lineWidth = 1;\r\n        \r\n        const yLabelInterval = 100000;\r\n        for (let yValue = yLabelInterval; yValue < yAxisMax; yValue += yLabelInterval) {\r\n            const y = getY(yValue);\r\n            ctx.beginPath();\r\n            ctx.moveTo(padding.left, y);\r\n            ctx.lineTo(width - padding.right, y);\r\n            ctx.stroke();\r\n            \r\n            ctx.fillStyle = labelColor;\r\n            ctx.fillText(`$${(yValue / 1000).toFixed(0)}K`, padding.left - 10, y + 4);\r\n        }\r\n        \r\n        // Draw vertical grid lines only, avoiding the line on the left (x-axis line)\r\n        ctx.textAlign = 'center';\r\n        \r\n        for (let i = intervalMonths; i < months; i += intervalMonths) {\r\n            const x = getX(i);\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, padding.top);\r\n            ctx.lineTo(x, height - padding.bottom);\r\n            ctx.stroke();\r\n            \r\n            const yearLabel = currentYear + (i / 12 / 5) * 5;\r\n            ctx.fillStyle = labelColor;\r\n            ctx.fillText(yearLabel, x, height - 5);\r\n        }\r\n    \r\n        // Plot balance line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = '#175134';\r\n        ctx.lineWidth = 2;\r\n        ctx.moveTo(getX(0), getY(balanceData[0]));\r\n        for (let i = 1; i < months; i++) {\r\n            ctx.lineTo(getX(i), getY(balanceData[i]));\r\n        }\r\n        ctx.stroke();\r\n        \r\n        // Plot cumulative interest line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = '#3EB721';\r\n        ctx.lineWidth = 2.5;\r\n        ctx.moveTo(getX(0), getY(cumulativeInterestData[0]));\r\n        for (let i = 1; i < months; i++) {\r\n            ctx.lineTo(getX(i), getY(cumulativeInterestData[i]));\r\n        }\r\n        ctx.stroke();\r\n        \r\n        // Plot cumulative principal line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = '#91BBA6';\r\n        ctx.lineWidth = 2.5;\r\n        ctx.moveTo(getX(0), getY(cumulativePrincipalData[0]));\r\n        for (let i = 1; i < months; i++) {\r\n            ctx.lineTo(getX(i), getY(cumulativePrincipalData[i]));\r\n        }\r\n        ctx.stroke();\r\n    \r\n        // Draw border around the chart with 3px internal padding\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(padding.left - 3, padding.top - 3, width - padding.left - padding.right + 6, height - padding.top - padding.bottom + 6);\r\n    }\r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const ctx = amortizationChartCanvas.getContext('2d');\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n    \r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 }; // Match this with your chart's padding\r\n    \r\n        // Ensure x is within the horizontal bounds of the chart\r\n        if (x >= padding.left && x <= amortizationChartCanvas.width - padding.right) {\r\n            const chartWidth = amortizationChartCanvas.width - padding.left - padding.right;\r\n            const chartHeight = amortizationChartCanvas.height - padding.top - padding.bottom;\r\n    \r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) *\r\n                (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                // Clear the canvas and redraw the chart\r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData\r\n                );\r\n    \r\n                // Draw the vertical line strictly within the chart area\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, padding.top + 1); // +1 to avoid touching the border\r\n                ctx.lineTo(x, padding.top + chartHeight - 1); // -1 to avoid touching the border\r\n                ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\r\n                ctx.lineWidth = 1;\r\n                ctx.stroke();\r\n    \r\n                // Update the labels with hover values\r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n            }\r\n        }\r\n    });\r\n    \r\n    \r\n    \r\n\r\n    amortizationChartCanvas.addEventListener('mouseout', () => {\r\n        // Clear the canvas and redraw the chart without the vertical line\r\n        drawAmortizationChart(lastAmortizationData.balanceData, lastAmortizationData.cumulativeInterestData, lastAmortizationData.cumulativePrincipalData);\r\n        revertValuesToTotals();\r\n    });\r\n\r\n    function updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n        const labels = [\r\n            { label: 'Total Interest Paid', value: totalInterestPaid, color: '#3EB721' },\r\n            { label: 'Total Principal Paid', value: totalPrincipalPaid, color: '#91BBA6' },\r\n            { label: 'Balance (Total Paid)', value: totalAmountPaid, color: '#175134' }\r\n        ];\r\n    \r\n        amortizationLabelsContainer.innerHTML = ''; // Clear previous labels\r\n    \r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item');\r\n            labelElement.style.fontFamily = \"'Open Sans', sans-serif\";\r\n            labelElement.style.fontWeight = '550';\r\n            labelElement.style.color = \"#101010\";\r\n            \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n    \r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name');\r\n            labelText.textContent = item.label;\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = formatter.format(item.value).replace('$', '');\r\n    \r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n    \r\n            amortizationLabelsContainer.appendChild(labelElement);\r\n        });\r\n    }\r\n    \r\n    window.addEventListener('resize', () => {\r\n        calculateAndDisplayResults();\r\n    });\r\n\r\n    calculateAndDisplayResults();\r\n    console.log(\"End of script reached\");\r\n});\r\n"],"names":["document","addEventListener","console","log","window","location","hostname","homePriceInput","getElementById","downPaymentAmountInput","downPaymentPercentageInput","loanTermInput","interestRateInput","propertyTaxInput","pmiExpenseInput","hoaExpenseInput","updateBtn","resetBtn","canvas","amortizationChartCanvas","labelsContainer","amortizationLabelsContainer","defaultValues","homePrice","downPaymentAmount","downPaymentPercentage","loanTerm","interestRate","propertyTax","pmiExpense","hoaExpense","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","inputsToRestrict","forEach","input","event","key","preventDefault","lastAmortizationData","parseFloat","value","Number","isInteger","toFixed","Math","ceil","calculateAndDisplayResults","resetInputs","tabPaymentBreakdown","tabAmortizationSchedule","paymentBreakdownContent","amortizationScheduleContent","showTab","tabName","style","display","classList","add","remove","_lastAmortizationData","monthlyPrincipalAndInterest","monthlyPropertyTax","monthlyPMI","monthlyHOA","updateHorizontalStackedBarChart","_lastAmortizationData2","balanceData","cumulativeInterestData","cumulativePrincipalData","totalInterestPaid","totalPrincipalPaid","totalAmountPaid","drawAmortizationChart","updateAmortizationLabels","downPayment","isNaN","percentageValue","principal","parseInt","monthlyInterestRate","numberOfPayments","pow","totalMonthlyPayment","updateLabels","monthlyPaymentElement","querySelector","innerText","concat","format","fontFamily","fontWeight","color","amortizationData","calculateAmortizationSchedule","updateHoverValues","balance","interest","labelValues","querySelectorAll","length","textContent","revertValuesToTotals","_lastAmortizationData3","drawRoundedRect","ctx","x","y","width","height","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","principalAndInterest","pmi","hoa","getContext","parentWidth","parentElement","offsetWidth","clearRect","data","colors","chartHeight","chartWidth","total","reduce","a","b","maxTotal","max","xOffset","yOffset","borderRadius","gap","save","cumulativeWidth","index","barWidth","fillStyle","fillRect","restore","labels","label","innerHTML","item","labelElement","createElement","colorCircle","backgroundColor","labelText","labelValue","appendChild","cumulativeInterest","cumulativePrincipal","month","interestPayment","principalPayment","push","dpr","devicePixelRatio","innerWidth","scale","months","maxBalance","apply","_toConsumableArray","maxCumulative","yAxisMax","intervalMonths","padding","top","right","bottom","left","gridColor","labelColor","labelFont","currentYear","Date","getFullYear","labelfont","font","textAlign","getY","getX","strokeStyle","lineWidth","yLabelInterval","yValue","stroke","fillText","i","yearLabel","strokeRect","rect","getBoundingClientRect","clientX","round","replace"],"sourceRoot":""}