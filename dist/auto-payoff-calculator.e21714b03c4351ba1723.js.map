{"version":3,"file":"auto-payoff-calculator.e21714b03c4351ba1723.js","mappings":"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rC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EACnE;AAIA,CAAC,CAAC;;;;;;UCvhCF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://monvvo-app/./public/js/auto-payoff-calculator.js","webpack://monvvo-app/webpack/bootstrap","webpack://monvvo-app/webpack/runtime/chunk loaded","webpack://monvvo-app/webpack/runtime/hasOwnProperty shorthand","webpack://monvvo-app/webpack/runtime/jsonp chunk loading","webpack://monvvo-app/webpack/before-startup","webpack://monvvo-app/webpack/startup","webpack://monvvo-app/webpack/after-startup"],"sourcesContent":["import '../css/auto-payoff-calculator.css';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    console.log(\"DOMContentLoaded event fired\");\r\n// Inputs for Auto Loan Payoff Calculator\r\nconst loanBalanceInput = document.getElementById('loan-balance'); // Current loan balance\r\nconst termRemainingInput = document.getElementById('term-remaining'); // Remaining loan term in months\r\nconst interestRateInput = document.getElementById('interest-rate'); // Annual interest rate\r\nconst monthlyPaymentInput = document.getElementById('monthly-payment'); // Required monthly payment\r\nconst extraPaymentInput = document.getElementById('extra-payment'); // Extra monthly payment\r\nconst lumpSumInput = document.getElementById('lump-sum'); // One-time lump sum payment\r\nconst lumpDateInput = document.getElementById('lump-date'); // Lump sum payment date\r\nconst updateBtn = document.getElementById('update-btn'); // Update button\r\nconst resetBtn = document.getElementById('reset-btn'); // Reset button\r\nconst autoChartCanvas = document.getElementById('autoChart'); // Chart for visualization\r\n\r\n// Default values\r\nconst defaultValues = {\r\n    loanBalance: 17000, // Default current loan balance\r\n    termRemaining: 46, // Default remaining term in months\r\n    interestRate: 5.5, // Interest rate in percentage\r\n    monthlyPayment: 496.23, // Default required monthly payment\r\n    extraPayment: 150, // Default extra monthly payment\r\n    lumpSum: 0, // Default lump sum payment\r\n    lumpDate: \"\", // Default lump sum date (empty)\r\n};\r\n\r\n// Apply default values to input fields\r\nloanBalanceInput.value = defaultValues.loanBalance;\r\ntermRemainingInput.value = defaultValues.termRemaining;\r\ninterestRateInput.value = defaultValues.interestRate;\r\nmonthlyPaymentInput.value = defaultValues.monthlyPayment;\r\nextraPaymentInput.value = defaultValues.extraPayment;\r\nlumpSumInput.value = defaultValues.lumpSum;\r\nlumpDateInput.value = defaultValues.lumpDate;\r\n\r\n// Helper: Format currency\r\nconst formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n});\r\n\r\n// Disable the lump sum date if lump sum is 0\r\nfunction toggleLumpSumDateState() {\r\n    const lumpSum = parseFloat(lumpSumInput.value) || 0;\r\n\r\n    if (lumpSum > 0) {\r\n        lumpDateInput.style.opacity = \"1\";  // Full opacity when enabled\r\n        lumpDateInput.style.pointerEvents = \"auto\"; // Allow interactions\r\n        lumpDateInput.disabled = false;\r\n    } else {\r\n        lumpDateInput.style.opacity = \"0.3\";  // Reduce opacity when disabled\r\n        lumpDateInput.style.pointerEvents = \"none\"; // Prevent interactions\r\n        lumpDateInput.disabled = true;\r\n        lumpDateInput.value = \"\"; // Reset value if not being used\r\n    }\r\n}\r\n\r\n// Event listener to trigger when lump sum input changes\r\nlumpSumInput.addEventListener(\"input\", toggleLumpSumDateState);\r\n\r\n// Initialize state on page load\r\ntoggleLumpSumDateState();\r\n\r\n\r\n// Declare lastAmortizationData globally\r\nlet lastAmortizationData = {\r\n    schedule: [],\r\n    totalInterestPaid: 0,\r\n    totalPrincipalPaid: 0,\r\n};\r\n\r\n// ✅ Calculate and Display Results\r\nfunction calculateAndDisplayResults() {\r\n    // Extract input values\r\n    const loanBalance = parseFloat(loanBalanceInput.value) || parseFloat(loanBalanceInput.placeholder) || defaultValues.loanBalance;\r\n    const termRemaining = parseFloat(termRemainingInput.value) || parseFloat(termRemainingInput.placeholder) || defaultValues.termRemaining;\r\n    const interestRate = (parseFloat(interestRateInput.value) || parseFloat(interestRateInput.placeholder) || defaultValues.interestRate) / 100;\r\n    const monthlyPayment = parseFloat(monthlyPaymentInput.value) || parseFloat(monthlyPaymentInput.placeholder) || defaultValues.monthlyPayment;\r\n    let extraPayment = parseFloat(extraPaymentInput.value) || 0;\r\n    const lumpSum = parseFloat(lumpSumInput.value) || 0;\r\n    const lumpDate = lumpDateInput.value;\r\n\r\n    console.log(\"Calculation Triggered with Values:\", { \r\n        loanBalance, termRemaining, interestRate, monthlyPayment, extraPayment, lumpSum, lumpDate \r\n    });\r\n\r\n    const monthlyInterestRate = interestRate / 12;\r\n    let remainingBalance = loanBalance;\r\n    let totalInterestPaid = 0;\r\n    let totalPrincipalPaid = 0;\r\n    let monthsElapsed = 0;\r\n    let amortizationSchedule = [];\r\n\r\n    let cumulativeInterest = 0;\r\n    let cumulativePrincipal = 0;\r\n    let cumulativeInterestData = [];\r\n    let cumulativePrincipalData = [];\r\n\r\n    // ✅ Ensure Lump Sum is Applied at the Correct Month\r\n    let lumpSumMonthIndex = -1;\r\n    if (lumpDate) {\r\n        const today = new Date();\r\n        const startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n        const selectedDate = new Date(lumpDate);\r\n        const monthsDifference = (selectedDate.getFullYear() - startDate.getFullYear()) * 12 + (selectedDate.getMonth() - startDate.getMonth());\r\n\r\n        if (monthsDifference >= 0 && monthsDifference < termRemaining) {\r\n            lumpSumMonthIndex = monthsDifference + 1;\r\n        } else {\r\n            console.warn(\"Lump sum date is outside the loan term.\");\r\n        }\r\n    }\r\n\r\n    // ✅ Loop through each month until the loan is paid off\r\n    while (remainingBalance > 0 && monthsElapsed < termRemaining) {\r\n        let interestPayment = remainingBalance * monthlyInterestRate;\r\n        let principalPayment = Math.min(monthlyPayment + extraPayment - interestPayment, remainingBalance);\r\n\r\n        if (principalPayment <= 0 || isNaN(principalPayment)) {\r\n            console.warn(\"Invalid principal payment detected. Stopping calculations.\");\r\n            break;\r\n        }\r\n\r\n        remainingBalance -= principalPayment;\r\n        totalInterestPaid += interestPayment;\r\n        totalPrincipalPaid += principalPayment;\r\n        monthsElapsed++;\r\n\r\n        // ✅ Update cumulative values\r\n        cumulativeInterest += interestPayment;\r\n        cumulativePrincipal += principalPayment;\r\n\r\n        cumulativeInterestData.push(cumulativeInterest);\r\n        cumulativePrincipalData.push(cumulativePrincipal);\r\n\r\n        // ✅ Apply Lump Sum at the Correct Month\r\n        if (lumpSum > 0 && monthsElapsed === lumpSumMonthIndex) {\r\n            remainingBalance -= lumpSum;\r\n            if (remainingBalance < 0) remainingBalance = 0;\r\n            console.log(`Applied Lump Sum of ${formatter.format(lumpSum)} on Month ${lumpSumMonthIndex}, New Balance: ${formatter.format(remainingBalance)}`);\r\n        }\r\n\r\n        amortizationSchedule.push({\r\n            month: monthsElapsed,\r\n            principal: principalPayment,\r\n            interest: interestPayment,\r\n            balance: remainingBalance > 0 ? remainingBalance : 0\r\n        });\r\n    }\r\n\r\n    let newPayoffTime = monthsElapsed;\r\n\r\n    console.log(\"Total Interest Paid:\", totalInterestPaid);\r\n    console.log(\"Total Principal Paid:\", totalPrincipalPaid);\r\n    console.log(\"New Payoff Time (Months):\", newPayoffTime);\r\n\r\n    // ✅ Update Doughnut Chart\r\n    updateDoughnutChart(\r\n        autoChartCanvas,\r\n        monthlyPayment + extraPayment,\r\n        monthlyPayment,\r\n        extraPayment\r\n    );\r\n\r\n    // ✅ Update Labels\r\n    updateChartLabels(\r\n        monthlyPayment,\r\n        extraPayment\r\n    );\r\n\r\n    // ✅ Store and Update Amortization Schedule\r\n    lastAmortizationData = {\r\n        schedule: amortizationSchedule,\r\n        totalInterestPaid,\r\n        totalPrincipalPaid,\r\n        balanceData: amortizationSchedule.map(row => row.balance),\r\n        cumulativeInterestData: cumulativeInterestData,\r\n        cumulativePrincipalData: cumulativePrincipalData\r\n    };\r\n\r\n    // ✅ Ensure Chart Updates Immediately\r\n    if (lastAmortizationData.schedule.length > 0) {\r\n        populateAmortizationTable(lastAmortizationData);\r\n\r\n        const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n        if (amortizationChartCanvas) {\r\n            const ctx = amortizationChartCanvas.getContext('2d');\r\n            ctx.clearRect(0, 0, amortizationChartCanvas.width, amortizationChartCanvas.height);\r\n        }\r\n\r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n\r\n        updateAmortizationLabels(\r\n            lastAmortizationData.totalInterestPaid,\r\n            lastAmortizationData.totalPrincipalPaid,\r\n            loanBalance\r\n        );\r\n    } else {\r\n        console.error(\"Failed to generate amortization schedule.\");\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Trigger calculation on page load\r\ncalculateAndDisplayResults();\r\n\r\n\r\n// Update Chart Labels\r\nfunction updateChartLabels(principalAndInterest, extraPayment) {\r\n    document.getElementById('value-principal-interest').textContent = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2,\r\n    }).format(principalAndInterest);\r\n\r\n    document.getElementById('value-extra-payment').textContent = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2,\r\n    }).format(extraPayment);\r\n}\r\n\r\n\r\n\r\n\r\n// Doughnut Chart Update Function\r\nfunction updateDoughnutChart(autoChartCanvas, totalMonthlyPayment, principalAndInterest, extraPayment) {\r\n    if (!autoChartCanvas) {\r\n        console.error(\"Canvas element not found.\");\r\n        return;\r\n    }\r\n\r\n    const ctx = autoChartCanvas.getContext('2d');\r\n    const size = 300; // Match the expected size\r\n\r\n    // Set canvas size\r\n    autoChartCanvas.width = size;\r\n    autoChartCanvas.height = size;\r\n\r\n    // Ensure valid values for chart data\r\n    const sanitizedData = [\r\n        Math.max(0, principalAndInterest),  // ✅ Ensure it's never negative\r\n        Math.max(0, extraPayment)  // ✅ Ensure Extra Payment is valid\r\n    ];\r\n\r\n    console.log(\"Doughnut Chart Data:\", sanitizedData);\r\n\r\n    // Prevent errors if all values are 0\r\n    if (sanitizedData.every(value => value === 0)) {\r\n        console.error(\"Chart cannot be displayed because all values are zero.\");\r\n        return;\r\n    }\r\n\r\n    // Colors for segments\r\n    const colors = ['#175134', '#3EB721']; // Dark Green for Principal & Interest, Bright Green for Extra Payment\r\n\r\n    // Get total sum\r\n    const total = sanitizedData.reduce((a, b) => a + b, 0);\r\n    if (total <= 0) {\r\n        console.error(\"Total value for chart is zero or negative.\");\r\n        return;\r\n    }\r\n\r\n    // Format total payment for center display\r\n    const formattedTotal = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2,\r\n    }).format(totalMonthlyPayment);\r\n\r\n    // Clear the canvas before drawing\r\n    ctx.clearRect(0, 0, size, size);\r\n\r\n    const outerRadius = size / 2;\r\n    const innerRadius = outerRadius - 50;\r\n    const centerX = size / 2;\r\n    const centerY = size / 2;\r\n    const gapWidth = 5;\r\n\r\n    let startAngle = -Math.PI / 2;\r\n\r\n    sanitizedData.forEach((value, index) => {\r\n        if (value <= 0) return; // Skip zero values\r\n\r\n        const segmentAngle = (value / total) * Math.PI * 2;\r\n        const endAngle = startAngle + segmentAngle;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, outerRadius, startAngle, endAngle);\r\n        ctx.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = colors[index];\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = 'white';\r\n        ctx.lineWidth = gapWidth;\r\n        ctx.stroke();\r\n\r\n        startAngle = endAngle;\r\n    });\r\n\r\n    // Center text\r\n    ctx.font = `bold ${size / 7}px Roboto`;\r\n    ctx.fillStyle = '#232525';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    ctx.fillText(formattedTotal, centerX, centerY);\r\n\r\n    console.log(\"Doughnut chart updated successfully.\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex = 0) {\r\n    if (!Array.isArray(balanceData) || balanceData.length === 0 ||\r\n        !Array.isArray(cumulativeInterestData) || cumulativeInterestData.length === 0 ||\r\n        !Array.isArray(cumulativePrincipalData) || cumulativePrincipalData.length === 0) {\r\n        console.error(\"Invalid amortization chart data: Some arrays are missing or empty.\");\r\n        return;\r\n    }\r\n\r\n    const canvas = document.getElementById('amortizationChart');\r\n    if (!canvas) {\r\n        console.error(\"Amortization chart canvas not found.\");\r\n        return;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    // Responsive canvas size\r\n    const isSmallScreen = window.innerWidth < 700;\r\n    const canvasHeight = isSmallScreen ? 220 : 320;\r\n\r\n    // ✅ Adjust width dynamically\r\n    canvas.width = Math.floor(canvas.parentElement.clientWidth * dpr);\r\n    canvas.height = canvasHeight * dpr;\r\n    ctx.scale(dpr, dpr);\r\n\r\n    const width = canvas.width / dpr;\r\n    const height = canvas.height / dpr;\r\n\r\n    // Padding adjustments\r\n    const padding = { top: 10, right: 15, bottom: 50, left: 55 };\r\n\r\n    const gridColor = '#d0d0d0';\r\n    const labelColor = '#505050';\r\n\r\n    // Get max Y value for scaling (round to nearest 10K)\r\n    const yAxisMax = Math.ceil(\r\n        Math.max(...balanceData, ...cumulativeInterestData, ...cumulativePrincipalData) / 10000\r\n    ) * 10000;\r\n\r\n    function getY(value) {\r\n        return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n    }\r\n\r\n    function getX(index) {\r\n        return padding.left + (index / (balanceData.length - 1)) * (width - padding.left - padding.right);\r\n    }\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw Y-axis grid lines & labels\r\n    ctx.font = '14px Roboto';\r\n    ctx.textAlign = 'right';\r\n    ctx.fillStyle = labelColor;\r\n    ctx.strokeStyle = gridColor;\r\n\r\n    for (let i = 0; i <= yAxisMax; i += 10000) {\r\n        const y = getY(i);\r\n\r\n        // Grid line\r\n        ctx.beginPath();\r\n        ctx.moveTo(padding.left, y);\r\n        ctx.lineTo(width - padding.right, y);\r\n        ctx.stroke();\r\n\r\n        // Y-axis labels\r\n        ctx.fillText(`$${(i / 1000).toFixed(0)}K`, padding.left - 10, y + 5);\r\n    }\r\n\r\n    // Draw X-axis grid (Months & Years)\r\n    ctx.textAlign = 'center';\r\n    const months = balanceData.length;\r\n    const years = Math.floor(months / 12);\r\n\r\n    for (let i = 0; i <= years; i++) {\r\n        const monthIndex = i * 12;\r\n        let x = getX(monthIndex);\r\n\r\n        // ✅ Adjust last label to prevent overflow\r\n        if (i === years) x = width - padding.right - 2;\r\n\r\n        const yearLabel = new Date().getFullYear() + i;\r\n\r\n        // Grid line\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, padding.top);\r\n        ctx.lineTo(x, height - padding.bottom);\r\n        ctx.stroke();\r\n\r\n        // X-axis labels\r\n        ctx.fillText(yearLabel, x, height - 10);\r\n    }\r\n\r\n    // Draw amortization lines\r\n    function drawLine(data, color) {\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        for (let i = 0; i < data.length; i++) {\r\n            const x = getX(i);\r\n            const y = getY(Math.max(0, data[i])); // No negative values\r\n            if (i === 0) ctx.moveTo(x, y);\r\n            else ctx.lineTo(x, y);\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    drawLine(balanceData, '#175134'); // Loan Balance\r\n    drawLine(cumulativePrincipalData, '#3EB721'); // Principal Paid\r\n    drawLine(cumulativeInterestData, '#91BBA6'); // Interest Paid\r\n\r\n    // ✅ Draw Vertical Hover Line\r\n    function drawHoverLine(ctx, hoverIndex, width, height, padding, balanceData) {\r\n        if (hoverIndex < 0 || hoverIndex >= balanceData.length) return;\r\n\r\n        const x = getX(hoverIndex);\r\n\r\n        ctx.strokeStyle = \"rgba(0, 0, 0, 0.4)\";  // Gray transparent line\r\n        ctx.lineWidth = 1.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, padding.top);\r\n        ctx.lineTo(x, height - padding.bottom);\r\n        ctx.stroke();\r\n    }\r\n\r\n    // ✅ Draw hover effects\r\n    const hoverX = getX(hoverIndex);\r\n    const balanceY = getY(balanceData[hoverIndex]);\r\n    const principalY = getY(cumulativePrincipalData[hoverIndex]);\r\n    const interestY = getY(cumulativeInterestData[hoverIndex]);\r\n\r\n    drawHoverLine(ctx, hoverIndex, width, height, padding, balanceData);\r\n\r\n    // ✅ Draw hover dots\r\n    const dotRadius = 6;\r\n\r\n    ctx.fillStyle = '#175134'; // Balance dot\r\n    ctx.beginPath();\r\n    ctx.arc(hoverX, balanceY, dotRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = '#3EB721'; // Principal dot\r\n    ctx.beginPath();\r\n    ctx.arc(hoverX, principalY, dotRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = '#91BBA6'; // Interest dot\r\n    ctx.beginPath();\r\n    ctx.arc(hoverX, interestY, dotRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    console.log(\"Amortization chart updated successfully.\");\r\n}\r\n\r\n\r\n\r\n\r\nfunction updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n    const labelsContainer = document.getElementById('amortizationLabels');\r\n    if (!labelsContainer) {\r\n        console.error(\"Amortization labels container not found.\");\r\n        return;\r\n    }\r\n\r\n    if (!lastAmortizationData || !lastAmortizationData.schedule || lastAmortizationData.schedule.length === 0) {\r\n        console.error(\"No amortization data available for labels.\");\r\n        return;\r\n    }\r\n\r\n    // Use the first month's balance as the default remaining balance\r\n    const initialBalance = lastAmortizationData?.schedule[0]?.balance || totalAmountPaid || 0;\r\n\r\n    totalInterestPaid = isNaN(totalInterestPaid) ? 0 : Math.ceil(totalInterestPaid);\r\n    totalPrincipalPaid = isNaN(totalPrincipalPaid) ? 0 : Math.ceil(totalPrincipalPaid);\r\n    totalAmountPaid = isNaN(totalAmountPaid) ? 0 : Math.ceil(totalAmountPaid);\r\n\r\n    labelsContainer.innerHTML = `\r\n        <div class=\"label-item\">\r\n            <span class=\"color-circle\" style=\"background-color: #175134;\"></span>\r\n            <span class=\"label-name\">Remaining Balance</span>\r\n            <span class=\"label-value\" id=\"label-balance\">$${formatter.format(initialBalance)}</span>\r\n        </div>\r\n        <div class=\"label-item\">\r\n            <span class=\"color-circle\" style=\"background-color: #91BBA6;\"></span>\r\n            <span class=\"label-name\">Total Interest Paid</span>\r\n            <span class=\"label-value\" id=\"label-interest\">$${formatter.format(totalInterestPaid)}</span>\r\n        </div>\r\n        <div class=\"label-item\">\r\n            <span class=\"color-circle\" style=\"background-color: #3EB721;\"></span>\r\n            <span class=\"label-name\">Total Principal Paid</span>\r\n            <span class=\"label-value\" id=\"label-principal\">$${formatter.format(totalPrincipalPaid)}</span>\r\n        </div>\r\n    `;\r\n\r\n    console.log(\"Amortization labels updated:\", {\r\n        initialBalance,\r\n        totalInterestPaid,\r\n        totalPrincipalPaid,\r\n        totalAmountPaid,\r\n    });\r\n}\r\n\r\n\r\n    // ShowTab Function\r\n    function showTab(tabName) {\r\n        const tabs = document.querySelectorAll('.results-content > div');\r\n        const navButtons = document.querySelectorAll('.results-tab');\r\n    \r\n        tabs.forEach(tab => (tab.style.display = 'none'));\r\n        navButtons.forEach(button => button.classList.remove('tab-active'));\r\n    \r\n        const selectedTab = document.getElementById(`${tabName}-content`);\r\n        if (selectedTab) {\r\n            selectedTab.style.display = 'block';\r\n            document.querySelector(`#tab-${tabName}`).classList.add('tab-active');\r\n        }\r\n    \r\n        if (tabName === 'amortization-schedule') {\r\n            console.log(\"Switching to Amortization Schedule tab\");\r\n    \r\n            if (!lastAmortizationData || !lastAmortizationData.schedule || lastAmortizationData.schedule.length === 0) {\r\n                console.log(\"Amortization data missing. Recalculating...\");\r\n                calculateAndDisplayResults();\r\n            }\r\n    \r\n            if (lastAmortizationData.balanceData.length > 0) {\r\n                console.log(\"Updating amortization chart and table.\");\r\n                populateAmortizationTable(lastAmortizationData);\r\n                initializeExpandCollapseLogic();\r\n    \r\n                // ✅ Ensure chart is fully redrawn on tab switch\r\n                setTimeout(() => {\r\n                    drawAmortizationChart(\r\n                        lastAmortizationData.balanceData,\r\n                        lastAmortizationData.cumulativeInterestData,\r\n                        lastAmortizationData.cumulativePrincipalData\r\n                    );\r\n                }, 50);\r\n    \r\n                updateAmortizationLabels(\r\n                    lastAmortizationData.totalInterestPaid,\r\n                    lastAmortizationData.totalPrincipalPaid,\r\n                    lastAmortizationData.schedule.reduce((sum, row) => sum + row.principal + row.interest, 0)\r\n                );\r\n            } else {\r\n                console.error(\"Failed to generate amortization schedule.\");\r\n            }\r\n        } else if (tabName === 'payment-breakdown') {\r\n            console.log(\"Switching to Payment Breakdown tab\");\r\n            calculateAndDisplayResults();\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n    const paymentBreakdownTab = document.getElementById('tab-payment-breakdown');\r\n    const amortizationScheduleTab = document.getElementById('tab-amortization-schedule');\r\n\r\n    // Add event listeners for tab switches\r\n    paymentBreakdownTab.addEventListener('click', () => {\r\n        console.log(\"Switching to Payment Breakdown tab\");\r\n        calculateAndDisplayResults(); // Always recalculate\r\n        showTab('payment-breakdown'); // Show the Payment Breakdown tab\r\n    });\r\n\r\n    amortizationScheduleTab.addEventListener('click', () => {\r\n        console.log(\"Switching to Amortization Schedule tab\");\r\n        calculateAndDisplayResults(); // Always recalculate\r\n        showTab('amortization-schedule'); // Show the Amortization Schedule tab\r\n    });\r\n\r\n    showTab('payment-breakdown'); \r\n\r\n\r\n\r\n\r\n// ✅ Add hover effect for interactive chart\r\ndocument.getElementById('amortizationChart').addEventListener('mousemove', function (event) {\r\n    const rect = this.getBoundingClientRect();\r\n    const x = event.clientX - rect.left;\r\n    const width = this.clientWidth;\r\n    const months = lastAmortizationData.schedule.length;\r\n    const hoverIndex = Math.round((x / width) * months);\r\n\r\n    if (hoverIndex >= 0 && hoverIndex < months) {\r\n        drawAmortizationChart(\r\n        lastAmortizationData.balanceData,\r\n        lastAmortizationData.cumulativeInterestData,  // ✅ Use cumulative data\r\n        lastAmortizationData.cumulativePrincipalData, // ✅ Use cumulative data\r\n        hoverIndex\r\n);\r\n\r\n    }\r\n});\r\n\r\n\r\n    // Calculate Amortization Schedule\r\n    function calculateAmortizationSchedule(loanBalance, termRemaining, interestRate, monthlyPayment, extraPayment, lumpSum, lumpDate) {\r\n        console.log(\"Calculating Amortization Schedule...\");\r\n    \r\n        const monthlyInterestRate = interestRate / 12;\r\n        let remainingBalance = loanBalance;\r\n        let totalInterestPaid = 0;\r\n        let totalPrincipalPaid = 0;\r\n        let monthsElapsed = 0;\r\n        let amortizationSchedule = [];\r\n    \r\n        let lumpSumMonthIndex = termRemaining + 1; // Default to outside range\r\n        if (lumpDate) {\r\n            const today = new Date();\r\n            const startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n            const selectedDate = new Date(lumpDate);\r\n            const monthsDifference = (selectedDate.getFullYear() - startDate.getFullYear()) * 12 + (selectedDate.getMonth() - startDate.getMonth());\r\n    \r\n            if (monthsDifference >= 0 && monthsDifference < termRemaining) {\r\n                lumpSumMonthIndex = monthsDifference + 1;\r\n            }\r\n        }\r\n    \r\n        while (remainingBalance > 0 && monthsElapsed < termRemaining) {\r\n            let interestPayment = remainingBalance * monthlyInterestRate;\r\n            let principalPayment = Math.min(Math.max(0, (monthlyPayment - interestPayment) + extraPayment), remainingBalance);\r\n    \r\n            if (principalPayment <= 0) {\r\n                console.warn(\"Invalid principal payment detected. Stopping calculations.\");\r\n                break;\r\n            }\r\n    \r\n            remainingBalance -= principalPayment;\r\n            totalInterestPaid += interestPayment;\r\n            totalPrincipalPaid += principalPayment;\r\n            monthsElapsed++;\r\n    \r\n            if (lumpSum > 0 && monthsElapsed === lumpSumMonthIndex) {\r\n                remainingBalance -= lumpSum;\r\n                if (remainingBalance < 0) remainingBalance = 0;\r\n            }\r\n    \r\n            amortizationSchedule.push({\r\n                month: monthsElapsed,\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: remainingBalance > 0 ? remainingBalance : 0\r\n            });\r\n        }\r\n    \r\n        if (amortizationSchedule.length === 0) {\r\n            console.error(\"No amortization data was generated.\");\r\n            return {\r\n                schedule: [],\r\n                totalInterestPaid: 0,\r\n                totalPrincipalPaid: 0\r\n            };\r\n        }\r\n    \r\n        return {\r\n            schedule: amortizationSchedule,\r\n            totalInterestPaid,\r\n            totalPrincipalPaid\r\n        };\r\n    }\r\n    \r\n\r\n\r\n    // Populate Amortization Table\r\n    function populateAmortizationTable(amortizationData) {\r\n        const tableBody = document.getElementById('amortization-table-body');\r\n        if (!tableBody) {\r\n            console.error(\"Amortization table body element not found.\");\r\n            return;\r\n        }\r\n    \r\n        tableBody.innerHTML = ''; // Clear existing rows\r\n    \r\n        const startDate = new Date(); // Get current date\r\n        startDate.setMonth(startDate.getMonth() + 1); // Set first payment to next month\r\n    \r\n        amortizationData.schedule.forEach((row, index) => {\r\n            const tr = document.createElement('tr');\r\n    \r\n            // Format the date for each payment\r\n            const dateCell = document.createElement('td');\r\n            const paymentDate = new Date(startDate);\r\n            paymentDate.setMonth(paymentDate.getMonth() + index);\r\n            dateCell.textContent = paymentDate.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n            tr.appendChild(dateCell);\r\n    \r\n            // Principal Payment Cell\r\n            const principalCell = document.createElement('td');\r\n            principalCell.textContent = `$${formatter.format(row.principal)}`;\r\n            tr.appendChild(principalCell);\r\n    \r\n            // Interest Payment Cell\r\n            const interestCell = document.createElement('td');\r\n            interestCell.textContent = `$${formatter.format(row.interest)}`;\r\n            tr.appendChild(interestCell);\r\n    \r\n            // Remaining Balance Cell (Prevents negative values)\r\n            const balanceCell = document.createElement('td');\r\n            balanceCell.textContent = `$${formatter.format(Math.max(row.balance, 0))}`;\r\n            tr.appendChild(balanceCell);\r\n    \r\n            tableBody.appendChild(tr);\r\n        });\r\n    \r\n        // Display the amortization schedule container\r\n        document.getElementById('amortization-schedule').style.display = 'block';\r\n    \r\n        // Initialize expand/collapse logic\r\n        initializeExpandCollapseLogic(); // Reinitialize after populating table\r\n    }\r\n\r\n    // Initialize Expand Collapse Logic\r\n    function initializeExpandCollapseLogic() {\r\n        const expandBox = document.querySelector(\".expand-box\");\r\n        const expandText = document.querySelector(\".expand-text\");\r\n        const expandIcon = document.querySelector(\".expand-icon\");\r\n        const tableBody = document.getElementById(\"amortization-table-body\");\r\n        const scrollableTbody = document.querySelector(\".scrollable-tbody\");\r\n    \r\n        if (!expandBox || !expandText || !tableBody || !scrollableTbody) {\r\n            console.error(\"Expand/Collapse elements not found.\");\r\n            return;\r\n        }\r\n    \r\n        console.log(\"Initializing Expand/Collapse Logic\");\r\n    \r\n        const collapsedRows = 5; // Show only the first 5 rows when collapsed\r\n        let isExpanded = false;\r\n    \r\n        function updateTableView() {\r\n            if (isExpanded) {\r\n                scrollableTbody.classList.add(\"expanded\"); // Enable scrolling\r\n                expandText.textContent = \"Collapse\";\r\n                expandIcon.style.transform = \"rotate(180deg)\";\r\n            } else {\r\n                scrollableTbody.classList.remove(\"expanded\"); // Hide extra rows\r\n                expandText.textContent = \"Expand\";\r\n                expandIcon.style.transform = \"rotate(0deg)\";\r\n            }\r\n        }\r\n    \r\n        // Click event to toggle expand/collapse\r\n        expandBox.addEventListener(\"click\", function () {\r\n            isExpanded = !isExpanded;\r\n            updateTableView();\r\n        });\r\n    \r\n        // Ensure only the first `collapsedRows` are shown initially\r\n        updateTableView();\r\n    }\r\n    \r\n    \r\n    function calculateAmortizationSchedule(loanBalance, termRemaining, interestRate, monthlyPayment, extraPayment, lumpSum, lumpDate) {\r\n        console.log(\"Calculating Amortization Schedule...\");\r\n    \r\n        const monthlyInterestRate = interestRate / 12;\r\n        let remainingBalance = loanBalance;\r\n        let totalInterestPaid = 0;\r\n        let totalPrincipalPaid = 0;\r\n        let monthsElapsed = 0;\r\n        let amortizationSchedule = [];\r\n    \r\n        let lumpSumMonthIndex = termRemaining + 1; // Default to outside range\r\n        if (lumpDate) {\r\n            const today = new Date();\r\n            const startDate = new Date(today.getFullYear(), today.getMonth(), 1);\r\n            const selectedDate = new Date(lumpDate);\r\n            const monthsDifference = (selectedDate.getFullYear() - startDate.getFullYear()) * 12 + (selectedDate.getMonth() - startDate.getMonth());\r\n    \r\n            if (monthsDifference >= 0 && monthsDifference < termRemaining) {\r\n                lumpSumMonthIndex = monthsDifference + 1;\r\n            }\r\n        }\r\n    \r\n        while (remainingBalance > 0 && monthsElapsed < termRemaining) {\r\n            let interestPayment = remainingBalance * monthlyInterestRate;\r\n            let principalPayment = Math.min(Math.max(0, (monthlyPayment - interestPayment) + extraPayment), remainingBalance);\r\n    \r\n            if (principalPayment <= 0) {\r\n                console.warn(\"Invalid principal payment detected. Stopping calculations.\");\r\n                break;\r\n            }\r\n    \r\n            remainingBalance -= principalPayment;\r\n            totalInterestPaid += interestPayment;\r\n            totalPrincipalPaid += principalPayment;\r\n            monthsElapsed++;\r\n    \r\n            if (lumpSum > 0 && monthsElapsed === lumpSumMonthIndex) {\r\n                remainingBalance -= lumpSum;\r\n                if (remainingBalance < 0) remainingBalance = 0;\r\n                console.log(`Applied Lump Sum of ${formatter.format(lumpSum)} on Month ${lumpSumMonthIndex}, New Balance: ${formatter.format(remainingBalance)}`);\r\n            }\r\n    \r\n            amortizationSchedule.push({\r\n                month: monthsElapsed,\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: remainingBalance > 0 ? remainingBalance : 0\r\n            });\r\n        }\r\n    \r\n        return {\r\n            schedule: amortizationSchedule,\r\n            totalInterestPaid,\r\n            totalPrincipalPaid\r\n        };\r\n    }\r\n    \r\n\r\n\r\n    const amortizationData = calculateAmortizationSchedule(\r\n        parseFloat(loanBalanceInput.value) || parseFloat(loanBalanceInput.placeholder) || defaultValues.loanBalance,\r\n        parseFloat(termRemainingInput.value) || parseFloat(termRemainingInput.placeholder) || defaultValues.termRemaining,\r\n        (parseFloat(interestRateInput.value) || parseFloat(interestRateInput.placeholder) || defaultValues.interestRate) / 100,\r\n        parseFloat(monthlyPaymentInput.value) || parseFloat(monthlyPaymentInput.placeholder) || defaultValues.monthlyPayment,\r\n        parseFloat(extraPaymentInput.value) || parseFloat(extraPaymentInput.placeholder) || defaultValues.extraPayment,\r\n        parseFloat(lumpSumInput.value) || parseFloat(lumpSumInput.placeholder) || defaultValues.lumpSum,\r\n        lumpDateInput.value\r\n    );\r\n        if (amortizationData) {\r\n        populateAmortizationTable(amortizationData);\r\n        initializeExpandCollapseLogic(); // Ensure it runs after the table is filled\r\n    } else {\r\n        console.error(\"Failed to generate amortization schedule.\");\r\n    }\r\n\r\n    \r\n    \r\n      const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n\r\n      // Update Hover Values\r\n      function updateHoverValues(balance, interest, principal) {\r\n        const balanceLabel = document.getElementById('label-balance');\r\n        const interestLabel = document.getElementById('label-interest');\r\n        const principalLabel = document.getElementById('label-principal');\r\n    \r\n        if (balanceLabel) balanceLabel.textContent = `$${formatter.format(Math.ceil(balance))}`;\r\n        if (interestLabel) interestLabel.textContent = `$${formatter.format(Math.ceil(interest))}`;\r\n        if (principalLabel) principalLabel.textContent = `$${formatter.format(Math.ceil(principal))}`;\r\n    \r\n        console.log(\"Hover values updated with rounded values:\", {\r\n            balance: Math.ceil(balance),\r\n            interest: Math.ceil(interest),\r\n            principal: Math.ceil(principal),\r\n        });\r\n    }\r\n    \r\n        \r\n    let currentHoverIndex = 0; // Default to the first month\r\n\r\n    function calculateHoverIndex(x, chartWidth, padding, dataLength) {\r\n        const rawIndex = ((x - padding.left) / chartWidth) * (dataLength - 1);\r\n    \r\n        // Ensure rounding bias towards edges for better coverage\r\n        const adjustedIndex = Math.round(rawIndex);\r\n        if (adjustedIndex >= dataLength - 1) {\r\n            return dataLength - 1; // Snap to last index\r\n        }\r\n        return Math.min(Math.max(adjustedIndex, 0), dataLength - 1);\r\n    }\r\n \r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        \r\n        const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n        const buffer = 10;\r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n        if (x >= padding.left - buffer && x <= amortizationChartCanvas.offsetWidth - padding.right + buffer) {\r\n            const index = calculateHoverIndex(x, chartWidth, padding, lastAmortizationData.balanceData.length);\r\n            updateHoverEffects(index);\r\n        }\r\n    });\r\n    \r\n    // ✅ Prevent touchmove from redrawing the chart\r\n    amortizationChartCanvas.addEventListener('touchmove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0] || event.changedTouches[0];\r\n        const x = touch.clientX - rect.left;\r\n    \r\n        const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n        const buffer = 10;\r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n        if (x >= padding.left - buffer && x <= amortizationChartCanvas.offsetWidth - padding.right + buffer) {\r\n            const index = calculateHoverIndex(x, chartWidth, padding, lastAmortizationData.balanceData.length);\r\n            updateHoverEffects(index);\r\n        }\r\n    });\r\n    \r\n\r\n    // Update Hover Effects\r\n    function updateHoverEffects(index) {\r\n        if (!lastAmortizationData || !lastAmortizationData.balanceData || index >= lastAmortizationData.balanceData.length) {\r\n            console.error(\"Invalid hover index or amortization data missing.\");\r\n            return;\r\n        }\r\n    \r\n        // ✅ Only update label values, NOT the chart\r\n        updateHoverValues(\r\n            lastAmortizationData.balanceData[index],\r\n            lastAmortizationData.cumulativeInterestData[index],\r\n            lastAmortizationData.cumulativePrincipalData[index]\r\n        );\r\n    \r\n        const startDate = new Date();\r\n        const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n        displayHoverDate(hoverDate);\r\n    \r\n        // ❌ REMOVE: Prevent chart redraw on hover\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n    amortizationChartCanvas.addEventListener('touchmove', handleTouchEvent, { passive: true });\r\n    amortizationChartCanvas.addEventListener('touchstart', handleTouchEvent, { passive: true });\r\n\r\n\r\n\r\n    \r\n    function handleTouchEvent(event) {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0] || event.changedTouches[0];\r\n        const x = touch.clientX - rect.left;\r\n        const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n    \r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n        // Calculate index with better coverage across the full chart\r\n        const rawIndex = ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1);\r\n        const index = Math.min(Math.max(Math.round(rawIndex), 0), lastAmortizationData.balanceData.length - 1);\r\n    \r\n        if (x >= padding.left && x <= amortizationChartCanvas.offsetWidth - padding.right) {\r\n            currentHoverIndex = index; // Save the current hover index\r\n    \r\n            updateHoverValues(\r\n                lastAmortizationData.balanceData[index],\r\n                lastAmortizationData.cumulativeInterestData[index],\r\n                lastAmortizationData.cumulativePrincipalData[index]\r\n            );\r\n    \r\n            const startDate = new Date();\r\n            const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n            displayHoverDate(hoverDate);\r\n    \r\n            drawAmortizationChart(\r\n                lastAmortizationData.balanceData,\r\n                lastAmortizationData.cumulativeInterestData,\r\n                lastAmortizationData.cumulativePrincipalData,\r\n                index\r\n            );\r\n        } else {\r\n            // Handle touch/mouse events outside the chart bounds if necessary\r\n            drawAmortizationChart(\r\n                lastAmortizationData.balanceData,\r\n                lastAmortizationData.cumulativeInterestData,\r\n                lastAmortizationData.cumulativePrincipalData,\r\n                currentHoverIndex // Retain the last valid hover index\r\n            );\r\n        }\r\n    \r\n        event.preventDefault(); // Prevent default scrolling\r\n    }\r\n    \r\n   \r\n   \r\n\r\n\r\n\r\n    function displayHoverDate(date) {\r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        if (!hoverDateContainer) {\r\n            console.error(\"Hover date container not found.\");\r\n            return;\r\n        }\r\n    \r\n        const month = date.toLocaleString('default', { month: 'long' }); // Full month name\r\n        const year = date.getFullYear();\r\n        hoverDateContainer.textContent = `${month} ${year}`;\r\n    }\r\n\r\n    // Event listeners\r\nupdateBtn.addEventListener('click', function () {\r\n    // Track the Google Ads conversion event (commented out)\r\n    // gtag('event', 'conversion', {\r\n    //     'send_to': 'AW-11495710624/WkaLCNPA6_kZEKC_yukq'\r\n    // });\r\n\r\n    // Call the existing calculation function\r\n    calculateAndDisplayResults();\r\n});\r\n\r\nresetBtn.addEventListener('click', resetInputs);\r\n\r\nfunction resetInputs() {\r\n    // Reset fields to default values from the `defaultValues` object\r\n    loanBalanceInput.value = defaultValues.loanBalance.toFixed(0);\r\n    termRemainingInput.value = defaultValues.termRemaining.toString();\r\n    interestRateInput.value = defaultValues.interestRate.toFixed(2);\r\n    monthlyPaymentInput.value = defaultValues.monthlyPayment.toFixed(2);\r\n    extraPaymentInput.value = defaultValues.extraPayment.toFixed(2);\r\n    lumpSumInput.value = defaultValues.lumpSum.toFixed(0);\r\n    lumpDateInput.value = ''; // Clear lump sum date\r\n\r\n    // Recalculate results instead of clearing the chart\r\n    calculateAndDisplayResults();\r\n\r\n    console.log(\"Inputs reset to default values and recalculated.\");\r\n}\r\n\r\n\r\n\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t559: 0,\n\t43: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmonvvo_app\"] = self[\"webpackChunkmonvvo_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [43], () => (__webpack_require__(1899)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["document","addEventListener","console","log","loanBalanceInput","getElementById","termRemainingInput","interestRateInput","monthlyPaymentInput","extraPaymentInput","lumpSumInput","lumpDateInput","updateBtn","resetBtn","autoChartCanvas","defaultValues","loanBalance","termRemaining","interestRate","monthlyPayment","extraPayment","lumpSum","lumpDate","value","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","toggleLumpSumDateState","parseFloat","style","opacity","pointerEvents","disabled","lastAmortizationData","schedule","totalInterestPaid","totalPrincipalPaid","calculateAndDisplayResults","placeholder","monthlyInterestRate","remainingBalance","monthsElapsed","amortizationSchedule","cumulativeInterest","cumulativePrincipal","cumulativeInterestData","cumulativePrincipalData","lumpSumMonthIndex","today","Date","startDate","getFullYear","getMonth","selectedDate","monthsDifference","warn","interestPayment","principalPayment","Math","min","isNaN","push","concat","format","month","principal","interest","balance","newPayoffTime","updateDoughnutChart","updateChartLabels","balanceData","map","row","length","populateAmortizationTable","amortizationChartCanvas","ctx","getContext","clearRect","width","height","drawAmortizationChart","updateAmortizationLabels","error","principalAndInterest","textContent","currency","totalMonthlyPayment","size","sanitizedData","max","every","colors","total","reduce","a","b","formattedTotal","outerRadius","innerRadius","centerX","centerY","gapWidth","startAngle","PI","forEach","index","segmentAngle","endAngle","beginPath","arc","closePath","fillStyle","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","hoverIndex","arguments","undefined","Array","isArray","canvas","dpr","window","devicePixelRatio","isSmallScreen","innerWidth","canvasHeight","floor","parentElement","clientWidth","scale","padding","top","right","bottom","left","gridColor","labelColor","yAxisMax","ceil","apply","_toConsumableArray","getY","getX","i","y","moveTo","lineTo","toFixed","months","years","monthIndex","x","yearLabel","drawLine","data","color","drawHoverLine","hoverX","balanceY","principalY","interestY","dotRadius","totalAmountPaid","_lastAmortizationData","labelsContainer","initialBalance","innerHTML","showTab","tabName","tabs","querySelectorAll","navButtons","tab","display","button","classList","remove","selectedTab","querySelector","add","initializeExpandCollapseLogic","setTimeout","sum","paymentBreakdownTab","amortizationScheduleTab","event","rect","getBoundingClientRect","clientX","round","calculateAmortizationSchedule","amortizationData","tableBody","setMonth","tr","createElement","dateCell","paymentDate","toLocaleDateString","year","appendChild","principalCell","interestCell","balanceCell","expandBox","expandText","expandIcon","scrollableTbody","collapsedRows","isExpanded","updateTableView","transform","updateHoverValues","balanceLabel","interestLabel","principalLabel","currentHoverIndex","calculateHoverIndex","chartWidth","dataLength","rawIndex","adjustedIndex","buffer","offsetWidth","updateHoverEffects","touch","touches","changedTouches","hoverDate","displayHoverDate","handleTouchEvent","passive","preventDefault","date","hoverDateContainer","toLocaleString","resetInputs","toString"],"sourceRoot":""}