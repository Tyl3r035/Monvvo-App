{"version":3,"file":"generalCalcs.8a5ba22016b6c040d0db.js","mappings":";AAGA;AACA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,YAAY,CAAC;;AAEzD;AACA,IAAIC,aAAa,GAAG,IAAI;AAExBH,SAAS,CAACI,OAAO,CAAC,UAACC,IAAI,EAAK;EACxB,IAAMC,WAAW,GAAGD,IAAI,CAACE,YAAY,CAAC,cAAc,CAAC;EACrD,IAAID,WAAW,EAAE;IACb,IAAME,OAAO,GAAGP,QAAQ,CAACQ,aAAa,CAAC,KAAK,CAAC;IAC7CD,OAAO,CAACE,SAAS,GAAG,eAAe;IACnCF,OAAO,CAACG,WAAW,GAAGL,WAAW;IACjCL,QAAQ,CAACW,IAAI,CAACC,WAAW,CAACL,OAAO,CAAC,CAAC,CAAC;;IAEpC;IACAH,IAAI,CAACS,gBAAgB,CAAC,OAAO,EAAE,UAACC,KAAK,EAAK;MACtCA,KAAK,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;MACzB,IAAIb,aAAa,KAAKK,OAAO,EAAE;QAC3B;QACAS,WAAW,CAACT,OAAO,CAAC;QACpBL,aAAa,GAAG,IAAI;MACxB,CAAC,MAAM;QACH;QACAe,eAAe,CAAC,CAAC;QACjBC,WAAW,CAACd,IAAI,EAAEG,OAAO,CAAC;QAC1BL,aAAa,GAAGK,OAAO;MAC3B;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACa,gBAAgB,CAAC,OAAO,EAAE,YAAM;EACrCI,eAAe,CAAC,CAAC;EACjBf,aAAa,GAAG,IAAI;AACxB,CAAC,CAAC;AAIF,SAASgB,WAAWA,CAACd,IAAI,EAAEG,OAAO,EAAE;EAChC,IAAMY,QAAQ,GAAGf,IAAI,CAACgB,qBAAqB,CAAC,CAAC;EAC7C,IAAMC,YAAY,GAAGd,OAAO,CAACe,WAAW,CAAC,CAAC;EAC1C,IAAMC,aAAa,GAAGhB,OAAO,CAACiB,YAAY,CAAC,CAAC;;EAE5C;EACA,IAAMC,QAAQ,GAAGC,MAAM,CAACC,OAAO,GAAGR,QAAQ,CAACS,IAAI,GAAGP,YAAY,GAAG,CAAC;EAClE;EACA,IAAMQ,QAAQ,GAAGH,MAAM,CAACI,OAAO,GAAGX,QAAQ,CAACY,GAAG,GAAGR,aAAa,GAAG,CAAC;EAElEhB,OAAO,CAACyB,KAAK,CAACJ,IAAI,MAAAK,MAAA,CAAMR,QAAQ,OAAI;EACpClB,OAAO,CAACyB,KAAK,CAACD,GAAG,MAAAE,MAAA,CAAMJ,QAAQ,OAAI;EAEnCtB,OAAO,CAAC2B,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;AACpC;AAMA,SAASnB,WAAWA,CAACT,OAAO,EAAE;EAC1BA,OAAO,CAAC2B,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;AACvC;AAEA,SAASnB,eAAeA,CAAA,EAAG;EACvBjB,QAAQ,CAACC,gBAAgB,CAAC,wBAAwB,CAAC,CAACE,OAAO,CAAC,UAACI,OAAO,EAAK;IACrEA,OAAO,CAAC2B,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;EACvC,CAAC,CAAC;AACN,C","sources":["webpack://monvvo-app/./public/js/generalCalcs.js"],"sourcesContent":["\n\n\n// Tooltip Info Icon JS\nconst infoIcons = document.querySelectorAll(\".info-icon\");\n\n// Track currently visible tooltip\nlet activeTooltip = null;\n\ninfoIcons.forEach((icon) => {\n    const tooltipText = icon.getAttribute(\"data-tooltip\");\n    if (tooltipText) {\n        const tooltip = document.createElement(\"div\");\n        tooltip.className = \"info-tooltips\";\n        tooltip.textContent = tooltipText;\n        document.body.appendChild(tooltip); // Append to body for consistent positioning\n\n        // Show tooltip on click (toggle)\n        icon.addEventListener(\"click\", (event) => {\n            event.stopPropagation(); // Prevent event bubbling\n            if (activeTooltip === tooltip) {\n                // Hide tooltip if already active\n                hideTooltip(tooltip);\n                activeTooltip = null;\n            } else {\n                // Hide any active tooltip and show the clicked one\n                hideAllTooltips();\n                showTooltip(icon, tooltip);\n                activeTooltip = tooltip;\n            }\n        });\n    }\n});\n\n// Hide tooltip when clicking outside\ndocument.addEventListener(\"click\", () => {\n    hideAllTooltips();\n    activeTooltip = null;\n});\n\n\n\nfunction showTooltip(icon, tooltip) {\n    const iconRect = icon.getBoundingClientRect();\n    const tooltipWidth = tooltip.offsetWidth; // Dynamically calculate width\n    const tooltipHeight = tooltip.offsetHeight; // Dynamically calculate height\n\n    // Align the tooltip's right edge with the left edge of the icon\n    const tooltipX = window.scrollX + iconRect.left - tooltipWidth - 5;\n    // Position tooltip directly above the icon with a 5px gap\n    const tooltipY = window.scrollY + iconRect.top - tooltipHeight - 5;\n\n    tooltip.style.left = `${tooltipX}px`;\n    tooltip.style.top = `${tooltipY}px`;\n\n    tooltip.classList.add(\"visible\");\n}\n\n\n\n\n\nfunction hideTooltip(tooltip) {\n    tooltip.classList.remove(\"visible\");\n}\n\nfunction hideAllTooltips() {\n    document.querySelectorAll(\".info-tooltips.visible\").forEach((tooltip) => {\n        tooltip.classList.remove(\"visible\");\n    });\n}\n"],"names":["infoIcons","document","querySelectorAll","activeTooltip","forEach","icon","tooltipText","getAttribute","tooltip","createElement","className","textContent","body","appendChild","addEventListener","event","stopPropagation","hideTooltip","hideAllTooltips","showTooltip","iconRect","getBoundingClientRect","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","tooltipX","window","scrollX","left","tooltipY","scrollY","top","style","concat","classList","add","remove"],"sourceRoot":""}