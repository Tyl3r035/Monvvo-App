{"version":3,"file":"426.dd6a226d2b4491033814.js","mappings":"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","sources":["webpack://monvvo-app/./public/js/pdf/mortgage-pdf.js","webpack://monvvo-app/./public/js/mortgage-calculator.js"],"sourcesContent":["import jsPDF from \"jspdf\"; // Add this at the top\r\nimport \"jspdf-autotable\"; // Ensure this is also imported for table generation\r\n\r\nexport function generateMortgagePdf(paymentData, amortizationData) {\r\n    const doc = new jsPDF();\r\n\r\n    // Styles\r\n    const colors = {\r\n        navyBlue: \"#1C2939\",\r\n        forestGreen: \"#175134\",\r\n        lightGreen2: \"#91BBA6\",\r\n        white: \"#FFFFFF\",\r\n        black: \"#232525\",\r\n    };\r\n\r\n    try {\r\n        // Add Logo with Responsive Height\r\n        const logoPath = \"./img/logos/monvvo-logo.png\"; // Relative path to your logo\r\n        const logoX = 14; // X position\r\n        const logoY = 10; // Y position\r\n        const logoWidth = 40; // Desired width in mm\r\n        const logoAspectRatio = 6.625; // Aspect ratio (width/height)\r\n\r\n        if (logoAspectRatio <= 0) throw new Error(\"Invalid aspect ratio\");\r\n\r\n        const logoHeight = logoWidth / logoAspectRatio;\r\n\r\n        // Add the logo to the PDF\r\n        doc.addImage(logoPath, \"PNG\", logoX, logoY, logoWidth, logoHeight);\r\n    } catch (error) {\r\n        console.error(\"Error adding logo to PDF:\", error);\r\n    }\r\n\r\n    // Adjust Title Section Position\r\n    const titleY = 10 + (40 / 6.625) + 15; // Adjust dynamically based on logo height\r\n    doc.setFont(\"serif\", \"bold\");\r\n    doc.setTextColor(colors.black); // Ensure the title text is black\r\n    doc.setFontSize(20);\r\n    doc.text(\"Monvvo Mortgage Calculation Report\", 14, titleY);\r\n\r\n    // Subheader Section\r\n    doc.setFontSize(12);\r\n    doc.setFont(\"sans-serif\", \"normal\");\r\n    doc.setTextColor(colors.forestGreen); // Subheader remains green\r\n    const subheaderY = titleY + 8;\r\n    doc.text(\"Your Trusted Tool in Precision Calculation\", 14, subheaderY);\r\n\r\n    // Disclaimer Section\r\n    const disclaimerText = \"Actual mortgage amount may vary. This is only an estimate.\";\r\n    const disclaimerY = subheaderY + 10;\r\n\r\n    doc.setFontSize(10);\r\n    doc.setFont(\"sans-serif\", \"italic\");\r\n    doc.setTextColor(colors.black);\r\n\r\n    // Add disclaimer text as regular text (not a link)\r\n    doc.text(disclaimerText, 14, disclaimerY);\r\n    // Payment Details Section\r\n    doc.setTextColor(colors.black);\r\n    doc.setFontSize(14);\r\n    doc.setFont(\"serif\", \"bold\");\r\n    const paymentDetailsY = disclaimerY + 10;\r\n    doc.text(\"Payment Details\", 14, paymentDetailsY);\r\n\r\n    const paymentDetails = paymentData.map(item => [item.label, `${item.value.toLocaleString()}`]);\r\n    doc.autoTable({\r\n        startY: paymentDetailsY + 5,\r\n        head: [\r\n            [\r\n                { content: \"Detail\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } },\r\n                { content: \"Value\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } }\r\n            ]\r\n        ],\r\n        body: paymentDetails,\r\n        styles: { fontStyle: \"sans-serif\" },\r\n    });\r\n\r\n    // Amortization Schedule Section\r\n    doc.setFontSize(14);\r\n    doc.setFont(\"serif\", \"bold\");\r\n    doc.setTextColor(colors.black);\r\n    const amortizationY = doc.lastAutoTable.finalY + 10;\r\n    doc.text(\"Amortization Schedule\", 14, amortizationY);\r\n\r\n    const amortizationDetails = amortizationData.map((row, index) => [\r\n        index + 1,\r\n        row.date,\r\n        `$${row.principal.toFixed(2)}`,\r\n        `$${row.interest.toFixed(2)}`,\r\n        `$${row.balance.toFixed(2)}`\r\n    ]);\r\n\r\n    doc.autoTable({\r\n        startY: amortizationY + 5,\r\n        head: [\r\n            [\r\n                { content: \"Month\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } },\r\n                { content: \"Date\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } },\r\n                { content: \"Principal\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } },\r\n                { content: \"Interest\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } },\r\n                { content: \"Remaining Balance\", styles: { fillColor: colors.forestGreen, textColor: colors.white, fontStyle: \"sans-serif\" } }\r\n            ]\r\n        ],\r\n        body: amortizationDetails,\r\n        styles: { fontStyle: \"sans-serif\" },\r\n    });\r\n\r\n    // Footer\r\n    const pageHeight = doc.internal.pageSize.height;\r\n    doc.setFillColor(colors.navyBlue);\r\n    doc.rect(0, pageHeight - 20, doc.internal.pageSize.width, 20, \"F\");\r\n    doc.setTextColor(colors.white);\r\n    doc.setFontSize(10);\r\n    doc.setFont(\"sans-serif\", \"normal\");\r\n    doc.text(\"2024, Monvvo | Trusted Tool in Precision Calculation\", 14, pageHeight - 8);\r\n\r\n    // Save the PDF\r\n    doc.save(\"Monvvo_Mortgage_Report.pdf\");\r\n}\r\n","import { generateMortgagePdf } from \"./pdf/mortgage-pdf.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    console.log(\"DOMContentLoaded event fired\");\r\n\r\n    \r\n\r\n    // Disable Google Analytics on localhost\r\n    if (window.location.hostname === \"localhost\") {\r\n        console.log(\"Running on localhost, disabling Google Analytics\");\r\n    }\r\n\r\n    // Mortgage calculation functionality\r\n    const homePriceInput = document.getElementById('home-price');\r\n    const downPaymentAmountInput = document.getElementById('down-payment-amount');\r\n    const downPaymentPercentageInput = document.getElementById('down-payment-percentage');\r\n    const loanTermInput = document.getElementById('loan-term');\r\n    const interestRateInput = document.getElementById('interest-rate');\r\n    const paymentFrequencyInput = document.getElementById('payment-frequency');\r\n    const propertyTaxInput = document.getElementById('property-tax');\r\n    const pmiExpenseInput = document.getElementById('pmi-expense');\r\n    const hoaExpenseInput = document.getElementById('hoa-expense');\r\n    const updateBtn = document.getElementById('update-btn');\r\n    const resetBtn = document.getElementById('reset-btn');\r\n    const canvas = document.getElementById('mortgageChart');\r\n    const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n    const labelsContainer = document.getElementById('chartLabels');\r\n    const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n\r\n\r\n\r\n    const defaultValues = {\r\n        homePrice: 500000,\r\n        downPaymentAmount: 25000,\r\n        downPaymentPercentage: 5,\r\n        loanTerm: 25,\r\n        interestRate: 7.04,\r\n        propertyTax: 250,\r\n        pmiExpense: 200,\r\n        hoaExpense: 0\r\n    };\r\n\r\n\r\n    homePriceInput.placeholder = defaultValues.homePrice;\r\n    downPaymentAmountInput.placeholder = defaultValues.downPaymentAmount;\r\n    downPaymentPercentageInput.placeholder = defaultValues.downPaymentPercentage;\r\n    loanTermInput.value = defaultValues.loanTerm; // Keep loan term as value since it is a dropdown\r\n    interestRateInput.placeholder = defaultValues.interestRate;\r\n    propertyTaxInput.placeholder = defaultValues.propertyTax;\r\n    pmiExpenseInput.placeholder = defaultValues.pmiExpense;\r\n    hoaExpenseInput.placeholder = defaultValues.hoaExpense;\r\n\r\n    // Set payment frequency to default\r\n    paymentFrequencyInput.value = \"monthly\";\r\n\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2\r\n    });\r\n\r\n    const inputsToRestrict = [\r\n        homePriceInput,\r\n        downPaymentAmountInput,\r\n        downPaymentPercentageInput,\r\n        loanTermInput,\r\n        interestRateInput,\r\n        propertyTaxInput,\r\n        pmiExpenseInput,\r\n        hoaExpenseInput\r\n    ];\r\n\r\n    inputsToRestrict.forEach(input => {\r\n        input.addEventListener('keydown', function (event) {\r\n            if (event.key === \"-\" || event.key === \"e\") {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    });\r\n\r\n    let lastAmortizationData = null;\r\n\r\n    downPaymentAmountInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || 0;\r\n        const downPaymentPercentage = (downPaymentAmount / homePrice) * 100;\r\n        downPaymentPercentageInput.value = Number.isInteger(downPaymentPercentage)\r\n            ? downPaymentPercentage\r\n            : downPaymentPercentage.toFixed(2);\r\n    });\r\n\r\n    downPaymentPercentageInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentPercentage = parseFloat(downPaymentPercentageInput.value) || 0;\r\n        const downPaymentAmount = Math.ceil((downPaymentPercentage / 100) * homePrice);\r\n        downPaymentAmountInput.value = downPaymentAmount;\r\n    });\r\n\r\n    homePriceInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || 0;\r\n        const downPaymentPercentage = (downPaymentAmount / homePrice) * 100;\r\n        downPaymentPercentageInput.value = Number.isInteger(downPaymentPercentage)\r\n            ? downPaymentPercentage\r\n            : downPaymentPercentage.toFixed(2);\r\n    });\r\n\r\n    updateBtn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        console.log(\"Update button clicked\");\r\n        calculateAndDisplayResults();\r\n    });\r\n\r\n    resetBtn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        console.log(\"Reset button clicked\");\r\n        resetInputs();\r\n    });\r\n\r\n    const tabPaymentBreakdown = document.getElementById(\"tab-payment-breakdown\");\r\n    const tabAmortizationSchedule = document.getElementById(\"tab-amortization-schedule\");\r\n\r\n    const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n    const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function showTab(tabName) {\r\n//     if (tabName === \"payment\") {\r\n//         paymentBreakdownContent.style.display = \"block\";\r\n//         amortizationScheduleContent.style.display = \"none\";\r\n//         tabPaymentBreakdown.classList.add(\"tab-active\");\r\n//         tabAmortizationSchedule.classList.remove(\"tab-active\");\r\n\r\n//         if (lastAmortizationData) {\r\n//             const {\r\n//                 periodicPrincipalAndInterest,\r\n//                 periodicPropertyTax,\r\n//                 periodicPMI,\r\n//                 periodicHOA,\r\n//             } = lastAmortizationData;\r\n\r\n//             // Redraw the stacked bar chart\r\n//             updateHorizontalStackedBarChart(\r\n//                 periodicPrincipalAndInterest,\r\n//                 periodicPropertyTax,\r\n//                 periodicPMI,\r\n//                 periodicHOA\r\n//             );\r\n//         }\r\n//     } else if (tabName === \"amortization\") {\r\n//         paymentBreakdownContent.style.display = \"none\";\r\n//         amortizationScheduleContent.style.display = \"block\";\r\n//         tabPaymentBreakdown.classList.remove(\"tab-active\");\r\n//         tabAmortizationSchedule.classList.add(\"tab-active\");\r\n\r\n//         if (lastAmortizationData) {\r\n//             const {\r\n//                 balanceData,\r\n//                 cumulativeInterestData,\r\n//                 cumulativePrincipalData,\r\n//                 totalInterestPaid,\r\n//                 totalPrincipalPaid,\r\n//                 totalAmountPaid,\r\n//             } = lastAmortizationData;\r\n\r\n//             drawAmortizationChart(\r\n//                 balanceData,\r\n//                 cumulativeInterestData,\r\n//                 cumulativePrincipalData\r\n//             );\r\n//             updateAmortizationLabels(\r\n//                 totalInterestPaid,\r\n//                 totalPrincipalPaid,\r\n//                 totalAmountPaid\r\n//             );\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nfunction showTab(tabName) {\r\n    if (tabName === \"payment\") {\r\n        // Show Payment Breakdown tab\r\n        paymentBreakdownContent.style.display = \"block\";\r\n        amortizationScheduleContent.style.display = \"none\";\r\n        tabPaymentBreakdown.classList.add(\"tab-active\");\r\n        tabAmortizationSchedule.classList.remove(\"tab-active\");\r\n\r\n        if (lastAmortizationData) {\r\n            const {\r\n                periodicPrincipalAndInterest,\r\n                periodicPropertyTax,\r\n                periodicPMI,\r\n                periodicHOA,\r\n            } = lastAmortizationData;\r\n\r\n            console.log(\"Redrawing Payment Breakdown tab:\", {\r\n                periodicPrincipalAndInterest,\r\n                periodicPropertyTax,\r\n                periodicPMI,\r\n                periodicHOA,\r\n            });\r\n\r\n            // Redraw the stacked bar chart\r\n            updateHorizontalStackedBarChart(\r\n                periodicPrincipalAndInterest,\r\n                periodicPropertyTax,\r\n                periodicPMI,\r\n                periodicHOA\r\n            );\r\n        } else {\r\n            console.error(\"No data available for Payment Breakdown tab.\");\r\n        }\r\n    } else if (tabName === \"amortization\") {\r\n        // Show Amortization tab\r\n        paymentBreakdownContent.style.display = \"none\";\r\n        amortizationScheduleContent.style.display = \"block\";\r\n        tabPaymentBreakdown.classList.remove(\"tab-active\");\r\n        tabAmortizationSchedule.classList.add(\"tab-active\");\r\n\r\n        if (lastAmortizationData) {\r\n            const {\r\n                balanceData,\r\n                cumulativeInterestData,\r\n                cumulativePrincipalData,\r\n                totalInterestPaid,\r\n                totalPrincipalPaid,\r\n                totalAmountPaid,\r\n            } = lastAmortizationData;\r\n\r\n            console.log(\"Switching to Amortization tab:\", {\r\n                balanceData,\r\n                cumulativeInterestData,\r\n                cumulativePrincipalData,\r\n                totalInterestPaid,\r\n                totalPrincipalPaid,\r\n                totalAmountPaid,\r\n            });\r\n\r\n            // Draw amortization chart\r\n            drawAmortizationChart(\r\n                balanceData,\r\n                cumulativeInterestData,\r\n                cumulativePrincipalData\r\n            );\r\n\r\n            // Update amortization chart labels\r\n            updateAmortizationLabels(\r\n                totalInterestPaid,\r\n                totalPrincipalPaid,\r\n                totalAmountPaid\r\n            );\r\n        } else {\r\n            console.error(\"No data available for Amortization tab.\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    tabPaymentBreakdown.addEventListener(\"click\", () => showTab(\"payment\"));\r\n    tabAmortizationSchedule.addEventListener(\"click\", () => showTab(\"amortization\"));\r\n    \r\n\r\n\r\n    function calculateAndDisplayResults() {\r\n        console.log(\"Calculating and displaying results\");\r\n    \r\n        // Retrieve inputs with fallback to default values\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || defaultValues.downPaymentAmount;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = parseFloat(interestRateInput.value) || defaultValues.interestRate;\r\n        const propertyTax = parseFloat(propertyTaxInput.value) || defaultValues.propertyTax;\r\n        const pmiExpense = parseFloat(pmiExpenseInput.value) || defaultValues.pmiExpense;\r\n        const hoaExpense = parseFloat(hoaExpenseInput.value) || defaultValues.hoaExpense;\r\n    \r\n        // Calculations for principal, interest rate, and number of payments\r\n        const principal = homePrice - downPaymentAmount;\r\n        const monthlyInterestRate = (interestRate / 100) / 12;\r\n        const numberOfPayments = loanTerm * 12;\r\n    \r\n        // Calculate monthly principal and interest payment\r\n        const periodicPrincipalAndInterest = principal * monthlyInterestRate *\r\n            Math.pow(1 + monthlyInterestRate, numberOfPayments) /\r\n            (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\r\n    \r\n        // Keep additional inputs as monthly values\r\n        const periodicPropertyTax = propertyTax;\r\n        const periodicPMI = pmiExpense;\r\n        const periodicHOA = hoaExpense;\r\n    \r\n        // Adjustments for payment frequency\r\n        const selectedFrequency = paymentFrequencyInput.value;\r\n        let paymentFactor = 1; // Default to monthly\r\n        if (selectedFrequency === 'biweekly') {\r\n            paymentFactor = 12 / 26;\r\n        } else if (selectedFrequency === 'weekly') {\r\n            paymentFactor = 12 / 52;\r\n        } else if (selectedFrequency === 'accelerated-biweekly') {\r\n            paymentFactor = 1 / 26;\r\n        } else if (selectedFrequency === 'accelerated-weekly') {\r\n            paymentFactor = 1 / 52;\r\n        }\r\n    \r\n        // Adjust only principal and interest for frequency\r\n        const adjustedPrincipalAndInterest = periodicPrincipalAndInterest * paymentFactor;\r\n    \r\n        // Keep additional inputs unadjusted\r\n        const adjustedPropertyTax = periodicPropertyTax; // Unchanged\r\n        const adjustedPMI = periodicPMI; // Unchanged\r\n        const adjustedHOA = periodicHOA; // Unchanged\r\n    \r\n        // Update Payment Breakdown\r\n        updateLabels(adjustedPrincipalAndInterest, adjustedPropertyTax, adjustedPMI, adjustedHOA);\r\n        updateHorizontalStackedBarChart(\r\n            adjustedPrincipalAndInterest,\r\n            adjustedPropertyTax,\r\n            adjustedPMI,\r\n            adjustedHOA\r\n        );\r\n    \r\n        const amortizationData = calculateAmortizationSchedule(\r\n            principal,\r\n            monthlyInterestRate,\r\n            periodicPrincipalAndInterest,\r\n            numberOfPayments\r\n        );\r\n    \r\n        populateAmortizationTable(amortizationData); // Pass entire data object\r\n    \r\n        // Render Amortization Chart\r\n        drawAmortizationChart(\r\n            amortizationData.balanceData,\r\n            amortizationData.cumulativeInterestData,\r\n            amortizationData.cumulativePrincipalData\r\n        );\r\n    \r\n        // Update Amortization Chart Labels\r\n        updateAmortizationLabels(\r\n            amortizationData.totalInterestPaid,\r\n            amortizationData.totalPrincipalPaid,\r\n            amortizationData.totalAmountPaid\r\n        );\r\n    \r\n        // Store data for later use\r\n        lastAmortizationData = {\r\n            ...amortizationData, // Include amortization data\r\n            periodicPrincipalAndInterest: adjustedPrincipalAndInterest,\r\n            periodicPropertyTax: adjustedPropertyTax,\r\n            periodicPMI: adjustedPMI,\r\n            periodicHOA: adjustedHOA,\r\n        };\r\n\r\n        // initializeExpandCollapseLogic();\r\n\r\n    \r\n        console.log(\"Updated lastAmortizationData:\", {\r\n            principal,\r\n            monthlyInterestRate,\r\n            numberOfPayments,\r\n            periodicPrincipalAndInterest,\r\n            totalPayment: adjustedPrincipalAndInterest + adjustedPropertyTax + adjustedPMI + adjustedHOA,\r\n            lastAmortizationData,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction updateHoverValues(balance, interest, principal) {\r\n    const labelValues = amortizationLabelsContainer.querySelectorAll('.label-value');\r\n    if (labelValues.length === 3) {\r\n        labelValues[0].textContent = formatter.format(interest);   // Update interest label\r\n        labelValues[1].textContent = formatter.format(principal); // Update principal label\r\n        labelValues[2].textContent = formatter.format(balance);   // Update balance label\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    \r\n    function resetInputs() {\r\n        console.log(\"Resetting inputs to default values\");\r\n    \r\n        // Clear inputs without populating default values\r\n        homePriceInput.value = \"\";\r\n        downPaymentAmountInput.value = \"\";\r\n        downPaymentPercentageInput.value = \"\";\r\n        loanTermInput.value = \"25\";\r\n        interestRateInput.value = \"\";\r\n        propertyTaxInput.value = \"\";\r\n        pmiExpenseInput.value = \"\";\r\n        hoaExpenseInput.value = \"\";\r\n    \r\n        // Reset payment frequency to monthly\r\n        paymentFrequencyInput.value = \"monthly\";\r\n    \r\n        // Recalculate using default values (inputs remain blank)\r\n        calculateAndDisplayResults();\r\n    }\r\n    \r\n\r\n\r\n\r\n    function drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.clip();\r\n    }\r\n\r\n\r\n\r\n    function updateHorizontalStackedBarChart(principalAndInterest, propertyTax, pmi, hoa) {\r\n        console.log(\"Chart Data - Principal & Interest:\", principalAndInterest);\r\n        console.log(\"Chart Data - Property Tax:\", propertyTax);\r\n        console.log(\"Chart Data - PMI:\", pmi);\r\n        console.log(\"Chart Data - HOA:\", hoa);\r\n        const canvas = document.getElementById('mortgageChart');\r\n        const ctx = canvas.getContext('2d');\r\n        const parentWidth = canvas.parentElement.offsetWidth;\r\n    \r\n        // Set canvas dimensions\r\n        canvas.width = parentWidth;\r\n        canvas.height = 100; // Standard height for the bar chart\r\n    \r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n        // Data and colors\r\n        const data = [principalAndInterest, propertyTax, pmi, hoa];\r\n        const labels = ['Principal & Interest', 'Property Tax', 'PMI', 'HOA'];\r\n        const colors = ['#175134', '#3EB721', '#91BBA6', '#B3D4C2'];\r\n    \r\n        // Chart dimensions\r\n        const chartHeight = 60;\r\n        const chartWidth = canvas.width;\r\n        const total = data.reduce((a, b) => a + b, 0);\r\n        const maxTotal = Math.max(total, 1); // Avoid division by zero\r\n        const gap = 2; // Gap between segments\r\n        const yOffset = canvas.height / 2 - chartHeight / 2;\r\n    \r\n        let cumulativeWidth = 0;\r\n    \r\n        // Draw each segment\r\n        data.forEach((value, index) => {\r\n            let segmentWidth = (value / maxTotal) * chartWidth - gap;\r\n    \r\n            // Ensure the last segment fills the remaining width\r\n            if (index === data.length - 1) {\r\n                segmentWidth = chartWidth - cumulativeWidth; // Adjust last segment to fill remaining space\r\n            }\r\n    \r\n            ctx.fillStyle = colors[index];\r\n    \r\n            // Apply border radius to the first and last segments only\r\n            const isFirstSegment = index === 0;\r\n            const isLastSegment = index === data.length - 1;\r\n    \r\n            drawOuterRoundedRect(\r\n                ctx,\r\n                cumulativeWidth, // X position\r\n                yOffset, // Y position\r\n                segmentWidth, // Width\r\n                chartHeight, // Height\r\n                5, // Border radius for outer edges\r\n                isFirstSegment,\r\n                isLastSegment\r\n            );\r\n    \r\n            cumulativeWidth += segmentWidth + gap; // Increment for next bar\r\n        });\r\n    \r\n        // Update the labels below the chart\r\n        updateStackedBarLabels(principalAndInterest, propertyTax, pmi, hoa, labels, colors);\r\n    }\r\n    \r\n    /**\r\n     * Update the labels below the stacked bar chart.\r\n     */\r\n    function updateStackedBarLabels(principalAndInterest, propertyTax, pmi, hoa, labels, colors) {\r\n        const labelsContainer = document.getElementById('chartLabels');\r\n        labelsContainer.innerHTML = ''; // Clear any existing labels\r\n    \r\n        const data = [principalAndInterest, propertyTax, pmi, hoa];\r\n    \r\n        data.forEach((value, index) => {\r\n            const labelItem = document.createElement('div');\r\n            labelItem.classList.add('label-item');\r\n    \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = colors[index];\r\n    \r\n            const labelName = document.createElement('span');\r\n            labelName.classList.add('label-name');\r\n            labelName.textContent = labels[index];\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = `${formatter.format(value)}`;\r\n    \r\n            labelItem.appendChild(colorCircle);\r\n            labelItem.appendChild(labelName);\r\n            labelItem.appendChild(labelValue);\r\n    \r\n            labelsContainer.appendChild(labelItem);\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Helper function to draw rounded rectangles only on outer edges.\r\n     */\r\n    function drawOuterRoundedRect(ctx, x, y, width, height, radius, isFirst, isLast) {\r\n        ctx.beginPath();\r\n    \r\n        // Top-left corner\r\n        if (isFirst) {\r\n            ctx.moveTo(x + radius, y);\r\n            ctx.lineTo(x + width, y); // Top edge\r\n        } else {\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x + width, y); // Top edge\r\n        }\r\n    \r\n        // Top-right corner\r\n        if (isLast) {\r\n            ctx.lineTo(x + width, y + radius);\r\n            ctx.quadraticCurveTo(x + width, y, x + width - radius, y);\r\n        } else {\r\n            ctx.lineTo(x + width, y); // Top-right edge (no rounding)\r\n        }\r\n    \r\n        // Bottom-right corner\r\n        if (isLast) {\r\n            ctx.lineTo(x + width - radius, y + height);\r\n            ctx.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\r\n        } else {\r\n            ctx.lineTo(x + width, y + height); // Bottom-right edge (no rounding)\r\n        }\r\n    \r\n        // Bottom-left corner\r\n        if (isFirst) {\r\n            ctx.lineTo(x + radius, y + height);\r\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n            ctx.lineTo(x, y + radius);\r\n            ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        } else {\r\n            ctx.lineTo(x, y + height); // Bottom-left edge (no rounding)\r\n            ctx.lineTo(x, y); // Close the rectangle\r\n        }\r\n    \r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    \r\n\r\n    function updateLabels(principalAndInterest, propertyTax, pmi, hoa) {\r\n        const periodicPaymentElement = document.getElementById('monthly-payment-value');\r\n        const selectedFrequency = paymentFrequencyInput.value;\r\n    \r\n        let frequencyLabel = \"Month\";\r\n        if (selectedFrequency === \"biweekly\") {\r\n            frequencyLabel = \"Bi-Week\";\r\n        } else if (selectedFrequency === \"weekly\") {\r\n            frequencyLabel = \"Week\";\r\n        } else if (selectedFrequency === \"accelerated-biweekly\") {\r\n            frequencyLabel = \"Accelerated Bi-Week\";\r\n        } else if (selectedFrequency === \"accelerated-weekly\") {\r\n            frequencyLabel = \"Accelerated Week\";\r\n        }\r\n    \r\n        // Calculate total periodic payment\r\n        const totalPeriodicPayment = principalAndInterest + propertyTax + pmi + hoa;\r\n    \r\n        // Update the payment element\r\n        periodicPaymentElement.innerHTML = `\r\n            <span class=\"payment-amount\">$${formatter.format(totalPeriodicPayment)}</span>\r\n            <span class=\"payment-frequency\"> / ${frequencyLabel}</span>\r\n        `;\r\n        \r\n    }\r\n    \r\n    \r\n    function calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPrincipalAndInterest, numberOfPayments) {\r\n        const amortizationData = []; // Array to hold each period's data\r\n        let balance = principal;\r\n        let totalInterestPaid = 0;\r\n        let totalPrincipalPaid = 0;\r\n    \r\n        for (let i = 0; i < numberOfPayments; i++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = monthlyPrincipalAndInterest - interestPayment;\r\n            balance = Math.max(balance - principalPayment, 0);\r\n    \r\n            totalInterestPaid += interestPayment;\r\n            totalPrincipalPaid += principalPayment;\r\n    \r\n            amortizationData.push({\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: balance\r\n            });\r\n    \r\n            if (balance <= 0) break; // Stop if fully paid\r\n        }\r\n    \r\n        return {\r\n            schedule: amortizationData, // Array for the table\r\n            balanceData: amortizationData.map(row => row.balance),\r\n            cumulativeInterestData: amortizationData.map((row, index) =>\r\n                amortizationData.slice(0, index + 1).reduce((sum, r) => sum + r.interest, 0)\r\n            ),\r\n            cumulativePrincipalData: amortizationData.map((row, index) =>\r\n                amortizationData.slice(0, index + 1).reduce((sum, r) => sum + r.principal, 0)\r\n            ),\r\n            totalInterestPaid,\r\n            totalPrincipalPaid,\r\n            totalAmountPaid: totalInterestPaid + totalPrincipalPaid,\r\n        };\r\n    }\r\n    \r\n    function populateAmortizationTable(amortizationData) {\r\n        const tableBody = document.getElementById('amortization-table-body');\r\n        tableBody.innerHTML = ''; // Clear existing rows\r\n    \r\n        amortizationData.schedule.forEach((row, index) => {\r\n            const tr = document.createElement('tr');\r\n    \r\n            const dateCell = document.createElement('td');\r\n            const date = new Date();\r\n            date.setMonth(date.getMonth() + index); // Increment month\r\n            dateCell.textContent = date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n            tr.appendChild(dateCell);\r\n    \r\n            const principalCell = document.createElement('td');\r\n            principalCell.textContent = `$${formatter.format(row.principal)}`;\r\n            tr.appendChild(principalCell);\r\n    \r\n            const interestCell = document.createElement('td');\r\n            interestCell.textContent = `$${formatter.format(row.interest)}`;\r\n            tr.appendChild(interestCell);\r\n    \r\n            const balanceCell = document.createElement('td');\r\n            balanceCell.textContent = `$${formatter.format(row.balance)}`;\r\n            tr.appendChild(balanceCell);\r\n    \r\n            tableBody.appendChild(tr);\r\n        });\r\n    \r\n        document.getElementById('amortization-schedule').style.display = 'block'; // Show table\r\n    \r\n        // Ensure toggle functionality works with the new rows\r\n        initializeExpandCollapseLogic(); // Call the toggle initialization\r\n    }\r\n    \r\n    \r\n  \r\n    function initializeExpandCollapseLogic() {\r\n        const expandBox = document.querySelector(\".expand-box\");\r\n        const amortizationTableBody = document.getElementById(\"amortization-table-body\");\r\n        const expandText = document.querySelector(\".expand-text\");\r\n    \r\n        // Ensure the elements exist\r\n        if (!expandBox || !amortizationTableBody || !expandText) {\r\n            console.error(\"Expand/Collapse elements not found.\");\r\n            return;\r\n        }\r\n    \r\n        console.log(\"Expand/Collapse Logic Initialized\");\r\n    \r\n        // Initial state: show only the first three rows\r\n        const rows = Array.from(amortizationTableBody.rows);\r\n        rows.forEach((row, index) => {\r\n            row.style.display = index < 3 ? \"table-row\" : \"none\";\r\n        });\r\n    \r\n        // Add click event for toggling\r\n        expandBox.addEventListener(\"click\", function () {\r\n            const isExpanded = expandText.textContent === \"Expand\";\r\n    \r\n            console.log(`Expand box clicked. Current state: ${isExpanded ? \"Expanding\" : \"Collapsing\"}`);\r\n    \r\n            // Toggle row visibility\r\n            rows.forEach((row, index) => {\r\n                row.style.display = isExpanded || index < 3 ? \"table-row\" : \"none\";\r\n            });\r\n    \r\n            // Update the expand/collapse text\r\n            expandText.textContent = isExpanded ? \"Collapse\" : \"Expand\";\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n\r\n    function drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex = null) {\r\n        const ctx = amortizationChartCanvas.getContext('2d');\r\n        const dpr = window.devicePixelRatio || 1;\r\n    \r\n        // Adjust height dynamically based on screen width\r\n        let height = window.innerWidth < 500 ? 200 : 300;\r\n    \r\n        amortizationChartCanvas.style.width = '100%';\r\n        amortizationChartCanvas.style.height = `${height}px`;\r\n    \r\n        const width = amortizationChartCanvas.offsetWidth;\r\n        amortizationChartCanvas.width = width * dpr;\r\n        amortizationChartCanvas.height = height * dpr;\r\n    \r\n        if (dpr > 1) {\r\n            ctx.scale(dpr, dpr);\r\n        }\r\n    \r\n        ctx.clearRect(0, 0, width * dpr, height * dpr);\r\n    \r\n        const months = balanceData.length;\r\n        const maxBalance = Math.max(...balanceData);\r\n        const maxCumulative = Math.max(...cumulativeInterestData, ...cumulativePrincipalData);\r\n    \r\n        const yAxisMax = Math.ceil(Math.max(maxBalance, maxCumulative) / 100000) * 100000;\r\n    \r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 };\r\n        const gridColor = '#d0d0d0';\r\n        const labelColor = '#505050';\r\n        const labelFont = '14px Open Sans';\r\n    \r\n        ctx.font = labelFont;\r\n        ctx.textAlign = 'right';\r\n    \r\n        function getY(value) {\r\n            return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n        }\r\n    \r\n        function getX(index) {\r\n            return padding.left + (index / months) * (width - padding.left - padding.right);\r\n        }\r\n    \r\n        // Draw horizontal grid lines (excluding top and bottom)\r\n        for (let i = 1; i <= 2; i++) { // Only draw inner lines\r\n            const yValue = i * (yAxisMax / 3);\r\n            const y = getY(yValue);\r\n    \r\n            ctx.strokeStyle = gridColor;\r\n            ctx.lineWidth = 1;\r\n            ctx.beginPath();\r\n            ctx.moveTo(padding.left, y);\r\n            ctx.lineTo(width - padding.right, y);\r\n            ctx.stroke();\r\n    \r\n            ctx.fillStyle = labelColor;\r\n            ctx.fillText(`$${(yValue / 1000).toFixed(0)}K`, padding.left - 10, y + 4);\r\n        }\r\n    \r\n        // Draw vertical grid lines and labels for every 5 years\r\n        ctx.textAlign = 'center';\r\n        const intervalMonths = 12 * 5; // Every 5 years\r\n        const currentYear = new Date().getFullYear();\r\n    \r\n        for (let i = intervalMonths; i < months; i += intervalMonths) {\r\n            const x = getX(i);\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, padding.top);\r\n            ctx.lineTo(x, height - padding.bottom);\r\n            ctx.strokeStyle = gridColor;\r\n            ctx.stroke();\r\n    \r\n            const yearLabel = currentYear + Math.floor(i / 12);\r\n            ctx.fillStyle = labelColor;\r\n            ctx.fillText(yearLabel, x, height - 5);\r\n        }\r\n    \r\n        // Draw hover vertical line first (underneath everything else)\r\n        if (hoverIndex !== null) {\r\n            const hoverX = getX(hoverIndex);\r\n    \r\n            ctx.beginPath();\r\n            ctx.moveTo(hoverX, padding.top);\r\n            ctx.lineTo(hoverX, height - padding.bottom);\r\n            ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)'; // Subtle line\r\n            ctx.lineWidth = 1;\r\n            ctx.stroke();\r\n        }\r\n    \r\n        // Draw chart lines\r\n        const drawLine = (data, color, lineWidth) => {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = color; // Ensure this is fully opaque\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.moveTo(getX(0), getY(data[0]));\r\n            for (let i = 1; i < months; i++) {\r\n                ctx.lineTo(getX(i), getY(data[i]));\r\n            }\r\n            ctx.stroke();\r\n        };\r\n    \r\n        drawLine(balanceData, '#175134', 2); // Balance line\r\n        drawLine(cumulativeInterestData, '#3EB721', 2.5); // Cumulative Interest\r\n        drawLine(cumulativePrincipalData, '#91BBA6', 2.5); // Cumulative Principal\r\n    \r\n        // Draw hover dots on top (above lines and vertical line)\r\n        if (hoverIndex !== null) {\r\n            const hoverX = getX(hoverIndex);\r\n    \r\n            const dotData = [\r\n                { y: getY(balanceData[hoverIndex]), color: '#175134' },\r\n                { y: getY(cumulativeInterestData[hoverIndex]), color: '#3EB721' },\r\n                { y: getY(cumulativePrincipalData[hoverIndex]), color: '#91BBA6' },\r\n            ];\r\n    \r\n            dotData.forEach(({ y, color }) => {\r\n                ctx.beginPath();\r\n                ctx.arc(hoverX, y, 5, 0, 2 * Math.PI);\r\n                ctx.fillStyle = color; // Ensure this is fully opaque\r\n                ctx.fill();\r\n            });\r\n        }\r\n    \r\n        // Draw border around the chart\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(\r\n            padding.left - 3,\r\n            padding.top - 3,\r\n            width - padding.left - padding.right + 6,\r\n            height - padding.top - padding.bottom + 6\r\n        );\r\n    }\r\n    \r\n  \r\n\r\n\r\n\r\n\r\n    \r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n    \r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 };\r\n    \r\n        if (x >= padding.left && x <= amortizationChartCanvas.offsetWidth - padding.right) {\r\n            const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n    \r\n                const startDate = new Date();\r\n                const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n                displayHoverDate(hoverDate);\r\n    \r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData,\r\n                    index\r\n                );\r\n            }\r\n        }\r\n    });\r\n    \r\n    // Add support for touchmove\r\n    amortizationChartCanvas.addEventListener('touchmove', handleTouchEvent);\r\n    amortizationChartCanvas.addEventListener('touchstart', handleTouchEvent);\r\n    \r\n    function handleTouchEvent(event) {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0] || event.changedTouches[0];\r\n        const x = touch.clientX - rect.left;\r\n    \r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 };\r\n    \r\n        if (x >= padding.left && x <= amortizationChartCanvas.offsetWidth - padding.right) {\r\n            const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n    \r\n                const startDate = new Date();\r\n                const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n                displayHoverDate(hoverDate);\r\n    \r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData,\r\n                    index\r\n                );\r\n            }\r\n        }\r\n        event.preventDefault(); // Prevent default scrolling\r\n    }\r\n    \r\n   \r\n   \r\n   \r\n    function displayHoverDate(date) {\r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        const month = date.toLocaleString('default', { month: 'long' }); // Full month name\r\n        const year = date.getFullYear();\r\n        hoverDateContainer.textContent = `${month} ${year}`;\r\n    }\r\n    \r\n\r\n\r\n   \r\n    amortizationChartCanvas.addEventListener('mouseout', () => {\r\n        revertValuesToTotals();\r\n    \r\n        // Clear the hover date\r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        hoverDateContainer.textContent = '';\r\n    \r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    });\r\n    \r\n\r\n/* PDF Generation Logic */\r\n    function revertValuesToTotals() {\r\n        const { totalInterestPaid, totalPrincipalPaid, totalAmountPaid } = lastAmortizationData;\r\n        updateHoverValues(totalAmountPaid, totalInterestPaid, totalPrincipalPaid);\r\n    }\r\n    \r\n    function updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n        const labels = [\r\n            { label: 'Total Interest Paid', value: totalInterestPaid, color: '#3EB721' },\r\n            { label: 'Total Principal Paid', value: totalPrincipalPaid, color: '#91BBA6' },\r\n            { label: 'Balance (Total Paid)', value: totalAmountPaid, color: '#175134' }\r\n        ];\r\n        \r\n        amortizationLabelsContainer.innerHTML = ''; // Clear previous labels\r\n        \r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item'); // Use CSS class instead of inline styles\r\n            \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n            \r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name'); // Apply consistent class\r\n            labelText.textContent = item.label;\r\n            \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value'); // Apply consistent class\r\n            labelValue.textContent = formatter.format(item.value).replace('$', '');\r\n            \r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n            \r\n            amortizationLabelsContainer.appendChild(labelElement);\r\n        });\r\n    }\r\n    \r\n\r\n    calculateAndDisplayResults();\r\n\r\n    function calculateAmortizationData(homePrice, downPaymentAmount, interestRate, loanTerm) {\r\n        const principal = homePrice - downPaymentAmount;\r\n        const monthlyInterestRate = interestRate / 100 / 12;\r\n        const numberOfPayments = loanTerm * 12;\r\n    \r\n        const amortizationData = [];\r\n        let balance = principal;\r\n    \r\n        for (let i = 0; i < numberOfPayments; i++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = (principal * monthlyInterestRate) / (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments)) - interestPayment;\r\n            balance = Math.max(balance - principalPayment, 0);\r\n    \r\n            amortizationData.push({\r\n                date: new Date(new Date().setMonth(new Date().getMonth() + i)).toLocaleDateString(\"en-US\", {\r\n                    month: \"short\",\r\n                    year: \"numeric\",\r\n                }),\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: balance,\r\n            });\r\n    \r\n            if (balance <= 0) break;\r\n        }\r\n    \r\n        return amortizationData;\r\n    }\r\n    \r\n// Get the export button\r\nconst exportButton = document.querySelector(\".btn-icon-fluid\");\r\n\r\n// Remove existing listeners\r\nexportButton.replaceWith(exportButton.cloneNode(true));\r\n\r\n// Add the event listener\r\ndocument.querySelector(\".btn-icon-fluid\").addEventListener(\"click\", () => {\r\n    const homePrice = parseFloat(document.getElementById(\"home-price\").value) || 500000;\r\n    const downPaymentAmount = parseFloat(document.getElementById(\"down-payment-amount\").value) || 25000;\r\n    const interestRate = parseFloat(document.getElementById(\"interest-rate\").value) || 7.04;\r\n    const loanTerm = parseInt(document.getElementById(\"loan-term\").value) || 25;\r\n\r\n    const paymentData = [\r\n        { label: \"Home Price\", value: homePrice },\r\n        { label: \"Down Payment\", value: downPaymentAmount },\r\n        { label: \"Loan Term (Years)\", value: loanTerm },\r\n        { label: \"Interest Rate (%)\", value: interestRate },\r\n    ];\r\n\r\n    const amortizationData = calculateAmortizationData(homePrice, downPaymentAmount, interestRate, loanTerm);\r\n\r\n    // Generate the PDF\r\n    generateMortgagePdf(paymentData, amortizationData);\r\n});\r\n\r\n\r\n\r\n\r\n    console.log(\"End of script reached\");    \r\n\r\n});\r\n"],"names":["jsPDF","generateMortgagePdf","paymentData","amortizationData","doc","colors","navyBlue","forestGreen","lightGreen2","white","black","logoPath","logoX","logoY","logoWidth","logoAspectRatio","Error","logoHeight","addImage","error","console","titleY","setFont","setTextColor","setFontSize","text","subheaderY","disclaimerText","disclaimerY","paymentDetailsY","paymentDetails","map","item","label","concat","value","toLocaleString","autoTable","startY","head","content","styles","fillColor","textColor","fontStyle","body","amortizationY","lastAutoTable","finalY","amortizationDetails","row","index","date","principal","toFixed","interest","balance","pageHeight","internal","pageSize","height","setFillColor","rect","width","save","document","addEventListener","log","window","location","hostname","homePriceInput","getElementById","downPaymentAmountInput","downPaymentPercentageInput","loanTermInput","interestRateInput","paymentFrequencyInput","propertyTaxInput","pmiExpenseInput","hoaExpenseInput","updateBtn","resetBtn","canvas","amortizationChartCanvas","labelsContainer","amortizationLabelsContainer","defaultValues","homePrice","downPaymentAmount","downPaymentPercentage","loanTerm","interestRate","propertyTax","pmiExpense","hoaExpense","placeholder","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","inputsToRestrict","forEach","input","event","key","preventDefault","lastAmortizationData","parseFloat","Number","isInteger","Math","ceil","calculateAndDisplayResults","resetInputs","tabPaymentBreakdown","tabAmortizationSchedule","paymentBreakdownContent","amortizationScheduleContent","showTab","tabName","style","display","classList","add","remove","_lastAmortizationData","periodicPrincipalAndInterest","periodicPropertyTax","periodicPMI","periodicHOA","updateHorizontalStackedBarChart","_lastAmortizationData2","balanceData","cumulativeInterestData","cumulativePrincipalData","totalInterestPaid","totalPrincipalPaid","totalAmountPaid","drawAmortizationChart","updateAmortizationLabels","parseInt","monthlyInterestRate","numberOfPayments","pow","selectedFrequency","paymentFactor","adjustedPrincipalAndInterest","adjustedPropertyTax","adjustedPMI","adjustedHOA","updateLabels","calculateAmortizationSchedule","populateAmortizationTable","_objectSpread","totalPayment","updateHoverValues","labelValues","querySelectorAll","length","textContent","format","drawRoundedRect","ctx","x","y","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","principalAndInterest","pmi","hoa","getContext","parentWidth","parentElement","offsetWidth","clearRect","data","labels","chartHeight","chartWidth","total","reduce","a","b","maxTotal","max","gap","yOffset","cumulativeWidth","segmentWidth","fillStyle","isFirstSegment","isLastSegment","drawOuterRoundedRect","updateStackedBarLabels","innerHTML","labelItem","createElement","colorCircle","backgroundColor","labelName","labelValue","appendChild","isFirst","isLast","fill","periodicPaymentElement","frequencyLabel","totalPeriodicPayment","monthlyPrincipalAndInterest","i","interestPayment","principalPayment","push","schedule","slice","sum","r","tableBody","tr","dateCell","Date","setMonth","getMonth","toLocaleDateString","month","year","principalCell","interestCell","balanceCell","initializeExpandCollapseLogic","expandBox","querySelector","amortizationTableBody","expandText","rows","Array","from","isExpanded","hoverIndex","arguments","undefined","dpr","devicePixelRatio","innerWidth","scale","months","maxBalance","apply","_toConsumableArray","maxCumulative","yAxisMax","padding","top","right","bottom","left","gridColor","labelColor","labelFont","font","textAlign","getY","getX","yValue","strokeStyle","lineWidth","stroke","fillText","intervalMonths","currentYear","getFullYear","yearLabel","floor","hoverX","drawLine","color","dotData","_ref","arc","PI","strokeRect","getBoundingClientRect","clientX","round","startDate","hoverDate","displayHoverDate","handleTouchEvent","touch","touches","changedTouches","hoverDateContainer","revertValuesToTotals","_lastAmortizationData3","labelElement","labelText","replace","calculateAmortizationData","exportButton","replaceWith","cloneNode"],"sourceRoot":""}