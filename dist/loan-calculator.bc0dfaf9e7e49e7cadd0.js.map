{"version":3,"file":"loan-calculator.bc0dfaf9e7e49e7cadd0.js","mappings":"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","sources":["webpack://monvvo-app/./public/js/loan-calculator.js"],"sourcesContent":["// import { generateMortgagePdf } from \"./pdf/mortgage-pdf.js\";\r\n    \r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        console.log(\"DOMContentLoaded event fired\");\r\n    \r\n        // Define default values\r\n        const defaultValues = {\r\n            loanAmount: 20000, // Default loan amount\r\n            loanTerm: 60, // Loan term in months\r\n            interestRate: 7.04, // Annual interest rate\r\n            originationFees: 0, // Default origination fees\r\n            extraPayment: 0, // Default extra payment\r\n            paymentFrequency: \"monthly\", // Default payment frequency\r\n        };\r\n    \r\n        // Input elements\r\n        const loanAmountInput = document.getElementById('loan-amount');\r\n        const loanTermInput = document.getElementById('loan-term');\r\n        const interestRateInput = document.getElementById('interest-rate');\r\n        const originationFeesInput = document.getElementById('origination-fees');\r\n        const extraPaymentInput = document.getElementById('extra-payment');\r\n        const paymentFrequencyInput = document.getElementById('payment-frequency');\r\n        const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n        const updateBtn = document.getElementById('update-btn');\r\n        const resetBtn = document.getElementById('reset-btn');\r\n        const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n    \r\n        // Set placeholders and default values\r\n        loanAmountInput.placeholder = defaultValues.loanAmount;\r\n        loanTermInput.value = defaultValues.loanTerm;\r\n        interestRateInput.placeholder = defaultValues.interestRate;\r\n        originationFeesInput.placeholder = defaultValues.originationFees;\r\n        extraPaymentInput.placeholder = defaultValues.extraPayment;\r\n        paymentFrequencyInput.value = defaultValues.paymentFrequency;\r\n    \r\n        // Formatter for currency values\r\n        const formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        });\r\n    \r\n        // Restrict invalid inputs\r\n        [loanAmountInput, loanTermInput, interestRateInput, originationFeesInput, extraPaymentInput].forEach(input => {\r\n            input.addEventListener('keydown', function (event) {\r\n                if (event.key === \"-\" || event.key === \"e\") {\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        let lastAmortizationData = null;\r\n        \r\n\r\n\r\n\r\n \r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n// function updateHorizontalStackedBarChart(principalAndInterest, extraPayment, frequency) {\r\n//     console.log(\"Updating Horizontal Stacked Bar Chart with:\", {\r\n//         principalAndInterest,\r\n//         extraPayment,\r\n//         frequency\r\n//     });\r\n\r\n//     const canvas = document.getElementById('loanChart');\r\n//     if (!canvas) {\r\n//         console.error(\"Canvas element for loan chart not found.\");\r\n//         return;\r\n//     }\r\n\r\n//     const ctx = canvas.getContext('2d');\r\n//     const parentWidth = canvas.parentElement.offsetWidth;\r\n\r\n//     // Resize canvas\r\n//     canvas.width = parentWidth;\r\n//     canvas.height = 100;\r\n\r\n//     // Clear the canvas\r\n//     ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//     // Adjust data for frequency\r\n//     const adjustedPrincipalAndInterest = adjustPaymentForFrequency(principalAndInterest, frequency);\r\n//     const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n\r\n//     const data = [adjustedPrincipalAndInterest, adjustedExtraPayment];\r\n//     const colors = ['#175134', '#91BBA6'];\r\n//     const total = data.reduce((a, b) => a + b, 0);\r\n\r\n//     if (total === 0) {\r\n//         console.warn(\"Total data for stacked bar chart is 0. Skipping rendering.\");\r\n//         return;\r\n//     }\r\n\r\n//     let cumulativeWidth = 0;\r\n\r\n//     data.forEach((value, index) => {\r\n//         if (value > 0) {\r\n//             const segmentWidth = (value / total) * canvas.width;\r\n\r\n//             ctx.fillStyle = colors[index];\r\n//             ctx.fillRect(cumulativeWidth, 0, segmentWidth, canvas.height);\r\n\r\n//             cumulativeWidth += segmentWidth;\r\n//         }\r\n//     });\r\n\r\n//     console.log(\"Stacked bar chart updated successfully.\");\r\n// }\r\n\r\n\r\n\r\nfunction updateHorizontalStackedBarChart(principalAndInterest, extraPayment, frequency) {\r\n    console.log(\"Updating Horizontal Stacked Bar Chart with:\", {\r\n        principalAndInterest,\r\n        extraPayment,\r\n        frequency\r\n    });\r\n\r\n    const canvas = document.getElementById('loanChart');\r\n    if (!canvas) {\r\n        console.error(\"Canvas element for loan chart not found.\");\r\n        return;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const parentWidth = canvas.parentElement.offsetWidth;\r\n\r\n    // Resize canvas\r\n    canvas.width = parentWidth;\r\n    canvas.height = 100;\r\n\r\n    // Clear the canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Adjust data for frequency\r\n    const adjustedPrincipalAndInterest = adjustPaymentForFrequency(principalAndInterest, frequency);\r\n    const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n\r\n    const data = [adjustedPrincipalAndInterest, adjustedExtraPayment];\r\n    const colors = ['#175134', '#91BBA6'];\r\n    const total = data.reduce((a, b) => a + b, 0);\r\n\r\n    if (total === 0) {\r\n        console.warn(\"Total data for stacked bar chart is 0. Skipping rendering.\");\r\n        return;\r\n    }\r\n\r\n    const chartHeight = 60; // Set a fixed chart height\r\n    const yOffset = canvas.height / 2 - chartHeight / 2; // Center the bar vertically\r\n    const borderRadius = 10; // Radius for rounded corners\r\n    let cumulativeWidth = 0;\r\n\r\n    // Determine how many active segments are present\r\n    const activeSegments = data.filter(value => value > 0).length;\r\n\r\n    data.forEach((value, index) => {\r\n        if (value > 0) {\r\n            const segmentWidth = (value / total) * canvas.width;\r\n\r\n            ctx.fillStyle = colors[index];\r\n\r\n            // Apply rounded corners for the first and last segment\r\n            const isFirst = activeSegments === 1 || index === 0;\r\n            const isLast = activeSegments === 1 || index === data.length - 1;\r\n\r\n            drawOuterRoundedRect(\r\n                ctx,\r\n                cumulativeWidth,\r\n                yOffset,\r\n                segmentWidth,\r\n                chartHeight,\r\n                borderRadius,\r\n                isFirst,\r\n                isLast\r\n            );\r\n\r\n            cumulativeWidth += segmentWidth;\r\n        }\r\n    });\r\n\r\n    console.log(\"Stacked bar chart updated successfully.\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n        \r\n    function updateChartLabels(principalAndInterest, extraPayment, frequency) {\r\n        const labelsContainer = document.getElementById('chartLabels');\r\n        if (!labelsContainer) {\r\n            console.error(\"Labels container element not found.\");\r\n            return;\r\n        }\r\n    \r\n        labelsContainer.innerHTML = ''; // Clear existing labels\r\n    \r\n        // Adjust payments for frequency\r\n        const adjustedPrincipalAndInterest = adjustPaymentForFrequency(principalAndInterest, frequency);\r\n        const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n    \r\n        const labels = [\r\n            { label: 'Principal & Interest', value: adjustedPrincipalAndInterest, color: '#175134' },\r\n            { label: 'Extra Payment', value: adjustedExtraPayment, color: '#91BBA6' },\r\n        ];\r\n    \r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item');\r\n    \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n    \r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name');\r\n            labelText.textContent = item.label;\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = item.value.toLocaleString(undefined, {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2,\r\n            });\r\n    \r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n    \r\n            labelsContainer.appendChild(labelElement);\r\n        });\r\n    \r\n        console.log(\"Chart labels updated successfully.\");\r\n    }\r\n        \r\n        \r\n        \r\n  \r\n\r\n\r\n\r\n\r\n\r\n    let adjustedPrincipalAndInterest = 0;\r\n    let adjustedExtraPayment = 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    function calculateAndDisplayResults() {\r\n        console.log(\"Calculating loan results...\");\r\n    \r\n        const loanAmount = parseFloat(loanAmountInput.value) || defaultValues.loanAmount;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = parseFloat(interestRateInput.value) || defaultValues.interestRate;\r\n        const originationFees = parseFloat(originationFeesInput.value) || defaultValues.originationFees;\r\n        const extraPayment = parseFloat(extraPaymentInput.value) || defaultValues.extraPayment;\r\n    \r\n        console.log(\"Inputs:\", { loanAmount, loanTerm, interestRate, originationFees, extraPayment });\r\n    \r\n        const netLoanAmount = loanAmount - originationFees;\r\n        if (netLoanAmount <= 0) {\r\n            console.error(\"Loan amount is insufficient to cover origination fees.\");\r\n            return;\r\n        }\r\n    \r\n        lastAmortizationData = calculateAmortizationData(\r\n            netLoanAmount,\r\n            interestRate,\r\n            loanTerm,\r\n            extraPayment\r\n        );\r\n    \r\n        if (!lastAmortizationData) {\r\n            console.error(\"Failed to calculate amortization data.\");\r\n            return;\r\n        }\r\n    \r\n        console.log(\"Amortization Data:\", lastAmortizationData);\r\n    \r\n        const frequency = paymentFrequencyInput.value || defaultValues.paymentFrequency;\r\n    \r\n        // Adjust payments for frequency\r\n        const monthlyInterestRate = interestRate / 100 / 12;\r\n        const monthlyPayment =\r\n            netLoanAmount * monthlyInterestRate /\r\n            (1 - Math.pow(1 + monthlyInterestRate, -loanTerm));\r\n    \r\n        // Update global values for use in other functions\r\n        adjustedPrincipalAndInterest = adjustPaymentForFrequency(monthlyPayment, frequency);\r\n        adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n    \r\n        // Update payment breakdown\r\n        updatePaymentBreakdown(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    \r\n        // Update horizontal stacked bar chart\r\n        updateHorizontalStackedBarChart(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    \r\n        // Update chart labels\r\n        updateChartLabels(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    \r\n        // Redraw amortization chart\r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    \r\n        console.log(\"Results displayed successfully.\");\r\n    }\r\n    \r\n\r\n\r\n   \r\n    \r\n\r\n    \r\n\r\n    function updatePaymentBreakdown(principalAndInterest, extraPayment, frequency) {\r\n        const paymentElement = document.getElementById('monthly-payment-value');\r\n        const frequencyLabel = paymentFrequencyInput.options[paymentFrequencyInput.selectedIndex].text;\r\n    \r\n        const totalPayment = principalAndInterest + extraPayment;\r\n    \r\n        paymentElement.innerHTML = `\r\n            <span class=\"payment-amount\">${formatter.format(totalPayment)}</span>\r\n            <span class=\"payment-frequency\"> / ${frequencyLabel}</span>\r\n        `;\r\n    \r\n        console.log(\"Payment breakdown updated with per-frequency amounts:\", {\r\n            principalAndInterest,\r\n            extraPayment,\r\n            totalPayment,\r\n            frequencyLabel,\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function updatePaymentBreakdown(principalAndInterest, extraPayment, frequency) {\r\n        const paymentElement = document.getElementById('monthly-payment-value');\r\n        const frequencyLabel = paymentFrequencyInput.options[paymentFrequencyInput.selectedIndex].text;\r\n    \r\n        const totalPayment = principalAndInterest + extraPayment;\r\n    \r\n        // Adjust the label for display\r\n        const adjustedFrequencyLabel = frequencyLabel.toLowerCase();\r\n        const displayFrequencyLabel =\r\n            adjustedFrequencyLabel === \"monthly\" ? \"month\" :\r\n            adjustedFrequencyLabel === \"weekly\" ? \"week\" :\r\n            adjustedFrequencyLabel; // Use as-is for other frequencies\r\n    \r\n        paymentElement.innerHTML = `\r\n            <span class=\"payment-amount\">${formatter.format(totalPayment)}</span>\r\n            <span class=\"payment-frequency\"> / ${displayFrequencyLabel}</span>\r\n        `;\r\n    \r\n        console.log(\"Payment breakdown updated with per-frequency amounts:\", {\r\n            principalAndInterest,\r\n            extraPayment,\r\n            totalPayment,\r\n            displayFrequencyLabel,\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n\r\n        \r\n        \r\n\r\n        \r\n        \r\n \r\n\r\n        function updateHoverValues(balance, interest, principal) {\r\n            const labelValues = document.querySelectorAll('#amortizationLabels .label-value');\r\n            if (labelValues.length === 3) {\r\n                labelValues[0].textContent = principal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }); // Principal\r\n                labelValues[1].textContent = interest.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });  // Interest\r\n                labelValues[2].textContent = balance.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });  // Balance\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n    \r\n        // Adjust payment based on frequency\r\n        function adjustPaymentForFrequency(totalPayment, frequency) {\r\n            const frequencyFactors = {\r\n                monthly: 1,\r\n                biweekly: 12 / 26,\r\n                weekly: 12 / 52,\r\n                \"semi-monthly\": 0.5,\r\n            };\r\n            return totalPayment * (frequencyFactors[frequency] || 1);\r\n        }\r\n        \r\n    \r\n        // Update labels\r\n        function updateLabels(totalPayment, originationFees) {\r\n            const paymentElement = document.getElementById('monthly-payment-value');\r\n            const frequencyLabel = paymentFrequencyInput.options[paymentFrequencyInput.selectedIndex].text;\r\n    \r\n            paymentElement.innerHTML = `\r\n                <span class=\"payment-amount\">${formatter.format(totalPayment)}</span>\r\n                <span class=\"payment-frequency\"> / ${frequencyLabel}</span>\r\n            `;\r\n        }\r\n    \r\n        // Reset inputs to default values\r\n        function resetInputs() {\r\n            console.log(\"Resetting inputs...\");\r\n            loanAmountInput.value = \"\";\r\n            loanTermInput.value = defaultValues.loanTerm;\r\n            interestRateInput.value = \"\";\r\n            originationFeesInput.value = \"\";\r\n            extraPaymentInput.value = \"\";\r\n            paymentFrequencyInput.value = defaultValues.paymentFrequency;\r\n            calculateAndDisplayResults();\r\n        }\r\n    \r\n        // Event listeners\r\n        updateBtn.addEventListener('click', calculateAndDisplayResults);\r\n        resetBtn.addEventListener('click', resetInputs);\r\n    \r\n        // Initialize with default results\r\n        calculateAndDisplayResults();\r\n    \r\n\r\n    const tabPaymentBreakdown = document.getElementById(\"tab-payment-breakdown\");\r\n    const tabAmortizationSchedule = document.getElementById(\"tab-amortization-schedule\");\r\n\r\n    const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n    const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // function showTab(tabName) {\r\n    //     const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n    //     const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n    \r\n    //     if (tabName === \"payment\") {\r\n    //         paymentBreakdownContent.style.display = \"block\";\r\n    //         amortizationScheduleContent.style.display = \"none\";\r\n    \r\n    //         if (adjustedPrincipalAndInterest && adjustedExtraPayment) {\r\n    //             updateHorizontalStackedBarChart(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    //         }\r\n    //     } else if (tabName === \"amortization\") {\r\n    //         paymentBreakdownContent.style.display = \"none\";\r\n    //         amortizationScheduleContent.style.display = \"block\";\r\n    \r\n    //         if (lastAmortizationData) {\r\n    //             drawAmortizationChart(\r\n    //                 lastAmortizationData.balanceData,\r\n    //                 lastAmortizationData.cumulativeInterestData,\r\n    //                 lastAmortizationData.cumulativePrincipalData\r\n    //             );\r\n    //             populateAmortizationTable(lastAmortizationData);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    function showTab(tabName) {\r\n        const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n        const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n    \r\n        if (tabName === \"payment\") {\r\n            paymentBreakdownContent.style.display = \"block\";\r\n            amortizationScheduleContent.style.display = \"none\";\r\n    \r\n            if (adjustedPrincipalAndInterest && adjustedExtraPayment) {\r\n                updateHorizontalStackedBarChart(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n            }\r\n        } else if (tabName === \"amortization\") {\r\n            paymentBreakdownContent.style.display = \"none\";\r\n            amortizationScheduleContent.style.display = \"block\";\r\n    \r\n            if (lastAmortizationData) {\r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData\r\n                );\r\n                populateAmortizationTable(lastAmortizationData);\r\n            } else {\r\n                console.error(\"No amortization data available.\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    function calculateAndDisplayResults() {\r\n        console.log(\"Calculating loan results...\");\r\n    \r\n        const loanAmount = parseFloat(loanAmountInput.value) || defaultValues.loanAmount;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = parseFloat(interestRateInput.value) || defaultValues.interestRate;\r\n        const originationFees = parseFloat(originationFeesInput.value) || defaultValues.originationFees;\r\n        const extraPayment = parseFloat(extraPaymentInput.value) || defaultValues.extraPayment;\r\n    \r\n        const netLoanAmount = loanAmount - originationFees;\r\n        if (netLoanAmount <= 0) {\r\n            console.error(\"Loan amount is insufficient to cover origination fees.\");\r\n            return;\r\n        }\r\n    \r\n        lastAmortizationData = calculateAmortizationData(\r\n            netLoanAmount,\r\n            interestRate,\r\n            loanTerm,\r\n            extraPayment\r\n        );\r\n    \r\n        const frequency = paymentFrequencyInput.value || defaultValues.paymentFrequency;\r\n    \r\n        // Adjust payments for frequency\r\n        const monthlyInterestRate = interestRate / 100 / 12;\r\n        const monthlyPayment =\r\n            netLoanAmount * monthlyInterestRate /\r\n            (1 - Math.pow(1 + monthlyInterestRate, -loanTerm));\r\n    \r\n        // Update global variables\r\n        adjustedPrincipalAndInterest = adjustPaymentForFrequency(monthlyPayment, frequency);\r\n        adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n    \r\n        // Update payment breakdown\r\n        updatePaymentBreakdown(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    \r\n        // Update horizontal stacked bar chart\r\n        updateHorizontalStackedBarChart(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    \r\n        // Update chart labels\r\n        updateChartLabels(adjustedPrincipalAndInterest, adjustedExtraPayment, frequency);\r\n    \r\n        // Redraw amortization chart\r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    \r\n        console.log(\"Results displayed successfully.\");\r\n    }\r\n    \r\n  \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    tabPaymentBreakdown.addEventListener(\"click\", () => showTab(\"payment\"));\r\n    tabAmortizationSchedule.addEventListener(\"click\", () => showTab(\"amortization\"));\r\n    \r\n\r\n    \r\n    /**\r\n     * Adjust payment based on the frequency selected.\r\n     */\r\n    function adjustPaymentForFrequency(totalPayment, frequency) {\r\n        let paymentFactor = 1; // Default: monthly\r\n        if (frequency === 'biweekly') {\r\n            paymentFactor = 12 / 26;\r\n        } else if (frequency === 'weekly') {\r\n            paymentFactor = 12 / 52;\r\n        } else if (frequency === 'semi-monthly') {\r\n            paymentFactor = 0.5;\r\n        }\r\n    \r\n        console.log(`Adjusting payment for frequency: ${frequency}`);\r\n        return totalPayment * paymentFactor;\r\n    }\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\nfunction resetInputs() {\r\n    console.log(\"Resetting inputs to default values\");\r\n\r\n    // Clear loan-related inputs and set them to default values\r\n    loanAmountInput.value = \"\"; // Leave blank for user to fill\r\n    loanTermInput.value = defaultValues.loanTerm; // Reset to default loan term\r\n    interestRateInput.value = \"\"; // Leave blank for user to fill\r\n    originationFeesInput.value = \"\"; // Leave blank for user to fill\r\n    extraPaymentInput.value = \"\"; // Leave blank for user to fill\r\n\r\n    // Reset payment frequency to default\r\n    paymentFrequencyInput.value = defaultValues.paymentFrequency;\r\n\r\n    // Recalculate using default values (with inputs cleared)\r\n    calculateAndDisplayResults();\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    /**\r\n     * Update the labels below the stacked bar chart.\r\n     */\r\n    function updateStackedBarLabels(principalAndInterest, originationFees, extraPayment, labels, colors) {\r\n        const labelsContainer = document.getElementById('chartLabels');\r\n        labelsContainer.innerHTML = ''; // Clear any existing labels\r\n    \r\n        // Updated data array to match the simplified components\r\n        const data = [principalAndInterest, originationFees, extraPayment];\r\n    \r\n        // Iterate through the data and dynamically create label items\r\n        data.forEach((value, index) => {\r\n            const labelItem = document.createElement('div');\r\n            labelItem.classList.add('label-item');\r\n    \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = colors[index];\r\n    \r\n            const labelName = document.createElement('span');\r\n            labelName.classList.add('label-name');\r\n            labelName.textContent = labels[index];\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = `${formatter.format(value)}`;\r\n    \r\n            labelItem.appendChild(colorCircle);\r\n            labelItem.appendChild(labelName);\r\n            labelItem.appendChild(labelValue);\r\n    \r\n            labelsContainer.appendChild(labelItem);\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    /**\r\n     * Helper function to draw rounded rectangles only on outer edges.\r\n     */\r\n    function drawOuterRoundedRect(ctx, x, y, width, height, radius, isFirst, isLast) {\r\n        ctx.beginPath();\r\n    \r\n        // Top-left corner\r\n        if (isFirst) {\r\n            ctx.moveTo(x + radius, y);\r\n        } else {\r\n            ctx.moveTo(x, y);\r\n        }\r\n    \r\n        // Top edge\r\n        ctx.lineTo(x + width - (isLast ? radius : 0), y);\r\n    \r\n        // Top-right corner\r\n        if (isLast) {\r\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        }\r\n    \r\n        // Right edge\r\n        ctx.lineTo(x + width, y + height - (isLast ? radius : 0));\r\n    \r\n        // Bottom-right corner\r\n        if (isLast) {\r\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        }\r\n    \r\n        // Bottom edge\r\n        ctx.lineTo(x + (isFirst ? radius : 0), y + height);\r\n    \r\n        // Bottom-left corner\r\n        if (isFirst) {\r\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        }\r\n    \r\n        // Left edge\r\n        ctx.lineTo(x, y + (isFirst ? radius : 0));\r\n    \r\n        // Top-left corner\r\n        if (isFirst) {\r\n            ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        }\r\n    \r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    // function calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPayment, numberOfPayments) {\r\n    //     const amortizationData = []; // Array to store each period's data\r\n    //     let balance = principal;\r\n    //     let totalInterestPaid = 0;\r\n    //     let totalPrincipalPaid = 0;\r\n    \r\n    //     for (let i = 0; i < numberOfPayments; i++) {\r\n    //         const interestPayment = balance * monthlyInterestRate;\r\n    //         const principalPayment = Math.min(monthlyPayment - interestPayment, balance); // Avoid overpayment\r\n    //         balance = Math.max(balance - principalPayment, 0); // Ensure no negative balance\r\n    \r\n    //         totalInterestPaid += interestPayment;\r\n    //         totalPrincipalPaid += principalPayment;\r\n    \r\n    //         amortizationData.push({\r\n    //             period: i + 1, // Start periods from 1\r\n    //             principal: principalPayment,\r\n    //             interest: interestPayment,\r\n    //             balance: balance,\r\n    //         });\r\n    \r\n    //         if (balance <= 0) break; // Stop if the loan is fully paid\r\n    //     }\r\n    \r\n    //     return {\r\n    //         schedule: amortizationData,\r\n    //         balanceData: amortizationData.map(row => row.balance),\r\n    //         cumulativeInterestData: amortizationData.map((_, index) =>\r\n    //             amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.interest, 0)\r\n    //         ),\r\n    //         cumulativePrincipalData: amortizationData.map((_, index) =>\r\n    //             amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.principal, 0)\r\n    //         ),\r\n    //         totalInterestPaid,\r\n    //         totalPrincipalPaid,\r\n    //         totalAmountPaid: totalInterestPaid + totalPrincipalPaid,\r\n    //     };\r\n    // }\r\n    \r\n\r\n\r\n    function calculateAmortizationSchedule(loanAmount, monthlyInterestRate, monthlyPayment, numberOfPayments, extraPayment = 0) {\r\n        const amortizationData = [];\r\n        let balance = loanAmount;\r\n        let totalInterestPaid = 0;\r\n        let totalPrincipalPaid = 0;\r\n    \r\n        for (let i = 0; i < numberOfPayments; i++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = Math.min(monthlyPayment - interestPayment + extraPayment, balance);\r\n            balance = Math.max(balance - principalPayment, 0);\r\n    \r\n            totalInterestPaid += interestPayment;\r\n            totalPrincipalPaid += principalPayment;\r\n    \r\n            amortizationData.push({\r\n                period: i + 1,\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: balance,\r\n            });\r\n    \r\n            if (balance <= 0) break; // Stop when the loan is paid off\r\n        }\r\n    \r\n        return {\r\n            schedule: amortizationData,\r\n            balanceData: amortizationData.map(row => row.balance),\r\n            cumulativeInterestData: amortizationData.map((_, index) =>\r\n                amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.interest, 0)\r\n            ),\r\n            cumulativePrincipalData: amortizationData.map((_, index) =>\r\n                amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.principal, 0)\r\n            ),\r\n            totalInterestPaid,\r\n            totalPrincipalPaid,\r\n        };\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n// Example amortization data\r\nconst amortizationData = {\r\n    schedule: [\r\n        { principal: 200, interest: 50, balance: 19800 },\r\n        { principal: 201, interest: 49, balance: 19599 },\r\n        // Additional rows...\r\n    ],\r\n};\r\n\r\n// Populate the table\r\npopulateAmortizationTable(amortizationData);\r\n\r\n    \r\n\r\n    \r\n    \r\n    \r\n\r\n  \r\n\r\n\r\n// Draw Amortization Chart\r\n// function drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex = null) {\r\n//     const canvas = document.getElementById('amortizationChart');\r\n//     const ctx = canvas.getContext('2d');\r\n//     const dpr = window.devicePixelRatio || 1;\r\n\r\n//     // Adjust canvas dimensions dynamically\r\n//     const isSmallScreen = window.innerWidth < 700;\r\n//     const canvasHeight = isSmallScreen ? 200 : 300;\r\n\r\n//     canvas.width = canvas.parentElement.offsetWidth * dpr;\r\n//     canvas.height = canvasHeight * dpr;\r\n//     ctx.scale(dpr, dpr);\r\n\r\n//     const width = canvas.width / dpr;\r\n//     const height = canvas.height / dpr;\r\n\r\n//     const padding = { top: 10, right: 20, bottom: 50, left: 50 };\r\n//     const gridColor = '#d0d0d0';\r\n//     const labelColor = '#505050';\r\n//     const labelFont = 'normal 12px Arial';\r\n\r\n//     const maxValue = Math.max(...balanceData, ...cumulativeInterestData, ...cumulativePrincipalData);\r\n//     const yAxisMax = Math.ceil(maxValue / 5000) * 5000;\r\n\r\n//     function getY(value) {\r\n//         return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n//     }\r\n\r\n//     function getX(index) {\r\n//         return padding.left + (index / (months - 1)) * (width - padding.left - padding.right);\r\n//     }\r\n\r\n//     const months = balanceData.length; // Dynamically set the length of the chart\r\n\r\n//     ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//     // Y-axis labels and grid lines\r\n//     ctx.font = labelFont;\r\n//     ctx.textAlign = 'right';\r\n//     ctx.fillStyle = labelColor;\r\n//     ctx.strokeStyle = gridColor;\r\n\r\n//     for (let i = 0; i <= yAxisMax; i += 5000) {\r\n//         const y = getY(i);\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(padding.left, y);\r\n//         ctx.lineTo(width - padding.right, y);\r\n//         ctx.stroke();\r\n//         ctx.fillText(`$${i / 1000}K`, padding.left - 10, y + 5);\r\n//     }\r\n\r\n//     ctx.textAlign = 'center';\r\n\r\n//     // X-axis labels and grid lines\r\n//     for (let i = 0; i < months; i += 12) {\r\n//         const x = getX(i);\r\n//         const monthLabel = `${i} mo`;\r\n\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(x, padding.top);\r\n//         ctx.lineTo(x, height - padding.bottom);\r\n//         ctx.stroke();\r\n\r\n//         ctx.font = labelFont;\r\n//         ctx.fillText(monthLabel, x, height - 10);\r\n//     }\r\n\r\n//     const xLast = getX(months - 1);\r\n//     const lastMonthLabel = `${months} mo`;\r\n//     ctx.fillText(lastMonthLabel, xLast, height - 10);\r\n\r\n//     // Draw the chart lines\r\n//     ctx.save();\r\n//     ctx.beginPath();\r\n//     ctx.rect(padding.left, padding.top, width - padding.left - padding.right, height - padding.top - padding.bottom);\r\n//     ctx.clip();\r\n\r\n//     // Draw Balance Line\r\n//     ctx.strokeStyle = '#175134';\r\n//     ctx.lineWidth = 2;\r\n//     ctx.beginPath();\r\n//     for (let i = 0; i < balanceData.length; i++) {\r\n//         const x = getX(i);\r\n//         const y = getY(balanceData[i]);\r\n//         if (i === 0) ctx.moveTo(x, y);\r\n//         else ctx.lineTo(x, y);\r\n//     }\r\n//     ctx.stroke();\r\n\r\n//     // Draw Principal Line\r\n//     ctx.strokeStyle = '#3EB721';\r\n//     ctx.beginPath();\r\n//     for (let i = 0; i < cumulativePrincipalData.length; i++) {\r\n//         const x = getX(i);\r\n//         const y = getY(cumulativePrincipalData[i]);\r\n//         if (i === 0) ctx.moveTo(x, y);\r\n//         else ctx.lineTo(x, y);\r\n//     }\r\n//     ctx.stroke();\r\n\r\n//     // Draw Interest Line\r\n//     ctx.strokeStyle = '#91BBA6';\r\n//     ctx.beginPath();\r\n//     for (let i = 0; i < cumulativeInterestData.length; i++) {\r\n//         const x = getX(i);\r\n//         const y = getY(cumulativeInterestData[i]);\r\n//         if (i === 0) ctx.moveTo(x, y);\r\n//         else ctx.lineTo(x, y);\r\n//     }\r\n//     ctx.stroke();\r\n\r\n//     ctx.restore();\r\n\r\n//     // Draw the right Y-axis line (final grid line)\r\n//     ctx.strokeStyle = gridColor;\r\n//     ctx.lineWidth = 1;\r\n//     ctx.beginPath();\r\n//     ctx.moveTo(width - padding.right, padding.top);\r\n//     ctx.lineTo(width - padding.right, height - padding.bottom);\r\n//     ctx.stroke();\r\n\r\n//     // Draw hover effects if hoverIndex is provided\r\n//     if (hoverIndex !== null) {\r\n//         const x = getX(hoverIndex);\r\n//         const balanceY = getY(balanceData[hoverIndex]);\r\n//         const principalY = getY(cumulativePrincipalData[hoverIndex]);\r\n//         const interestY = getY(cumulativeInterestData[hoverIndex]);\r\n\r\n//         // Draw vertical hover line\r\n//         ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\r\n//         ctx.lineWidth = 1;\r\n//         ctx.beginPath();\r\n//         ctx.moveTo(x, padding.top);\r\n//         ctx.lineTo(x, height - padding.bottom);\r\n//         ctx.stroke();\r\n\r\n//         // Draw hover dots\r\n//         const dotRadius = 4;\r\n//         ctx.fillStyle = '#175134'; // Balance dot color\r\n//         ctx.beginPath();\r\n//         ctx.arc(x, balanceY, dotRadius, 0, Math.PI * 2);\r\n//         ctx.fill();\r\n\r\n//         ctx.fillStyle = '#3EB721'; // Principal dot color\r\n//         ctx.beginPath();\r\n//         ctx.arc(x, principalY, dotRadius, 0, Math.PI * 2);\r\n//         ctx.fill();\r\n\r\n//         ctx.fillStyle = '#91BBA6'; // Interest dot color\r\n//         ctx.beginPath();\r\n//         ctx.arc(x, interestY, dotRadius, 0, Math.PI * 2);\r\n//         ctx.fill();\r\n\r\n//         // Update labels with hover values\r\n//         const hoverPrincipal = cumulativePrincipalData[hoverIndex];\r\n//         const hoverInterest = cumulativeInterestData[hoverIndex];\r\n//         const hoverBalance = balanceData[hoverIndex];\r\n\r\n//         updateHoverValues(hoverBalance, hoverInterest, hoverPrincipal);\r\n//     }\r\n// }\r\n\r\n\r\nfunction drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex = null) {\r\n    const canvas = document.getElementById('amortizationChart');\r\n    const ctx = canvas.getContext('2d');\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    canvas.width = canvas.parentElement.offsetWidth * dpr;\r\n    canvas.height = 300 * dpr; // Adjust height as needed\r\n    ctx.scale(dpr, dpr);\r\n\r\n    // Implement chart rendering logic, similar to the mortgage calculator\r\n}\r\n\r\n\r\n\r\nfunction updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n    const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n    amortizationLabelsContainer.innerHTML = ''; // Clear existing labels\r\n\r\n    const labels = [\r\n        { label: 'Total Principal Paid', value: totalPrincipalPaid, color: '#3EB721' },\r\n        { label: 'Total Interest Paid', value: totalInterestPaid, color: '#91BBA6' },\r\n        { label: 'Balance (Total Paid)', value: totalAmountPaid, color: '#175134' }\r\n    ];\r\n\r\n    labels.forEach(item => {\r\n        const labelElement = document.createElement('div');\r\n        labelElement.classList.add('label-item');\r\n\r\n        const colorCircle = document.createElement('span');\r\n        colorCircle.classList.add('color-circle');\r\n        colorCircle.style.backgroundColor = item.color;\r\n\r\n        const labelText = document.createElement('span');\r\n        labelText.classList.add('label-name');\r\n        labelText.textContent = item.label;\r\n\r\n        const labelValue = document.createElement('span');\r\n        labelValue.classList.add('label-value');\r\n        labelValue.textContent = item.value.toLocaleString(undefined, {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        });\r\n\r\n        labelElement.appendChild(colorCircle);\r\n        labelElement.appendChild(labelText);\r\n        labelElement.appendChild(labelValue);\r\n\r\n        amortizationLabelsContainer.appendChild(labelElement);\r\n    });\r\n\r\n    console.log(\"Amortization labels updated successfully.\");\r\n}\r\n\r\n    \r\n    // Add event listeners directly within the function\r\n    const canvas = document.getElementById('amortizationChart');\r\n    \r\n    canvas.addEventListener('mousemove', function(event) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const hoverIndex = Math.floor((x - padding.left) / (width - padding.left - padding.right) * (months - 1));\r\n        drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex);\r\n    });\r\n    \r\n    canvas.addEventListener('touchstart', function(event) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.touches[0].clientX - rect.left;\r\n        const hoverIndex = Math.floor((x - padding.left) / (width - padding.left - padding.right) * (months - 1));\r\n        drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex);\r\n    });\r\n    \r\n    canvas.addEventListener('touchmove', function(event) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.touches[0].clientX - rect.left;\r\n        const hoverIndex = Math.floor((x - padding.left) / (width - padding.left - padding.right) * (months - 1));\r\n        drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex);\r\n    });\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n    \r\n        const padding = { top: 30, right: 25, bottom: 30, left: 70 };\r\n    \r\n        if (x >= padding.left && x <= amortizationChartCanvas.offsetWidth - padding.right) {\r\n            const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n    \r\n                const startDate = new Date();\r\n                const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n                displayHoverDate(hoverDate);\r\n    \r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData,\r\n                    index\r\n                );\r\n            }\r\n        }\r\n    });\r\n    \r\n    // Add support for touchmove\r\n    amortizationChartCanvas.addEventListener('touchmove', handleTouchEvent);\r\n    amortizationChartCanvas.addEventListener('touchstart', handleTouchEvent);\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n    let activeHoverIndex = null; // Global variable to track the active hover index\r\n\r\n    function handleTouchEvent(event) {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0] || event.changedTouches[0];\r\n        const x = touch.clientX - rect.left;\r\n        const padding = { top: 30, right: 25, bottom: 30, left: 70 };\r\n    \r\n        if (x < padding.left || x > amortizationChartCanvas.offsetWidth - padding.right) {\r\n            // If touch is outside the chart, reset hover\r\n            resetHover();\r\n        } else {\r\n            const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                activeHoverIndex = index; // Track the active hover index\r\n    \r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n    \r\n                const startDate = new Date();\r\n                const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n                displayHoverDate(hoverDate);\r\n    \r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData,\r\n                    index\r\n                );\r\n            }\r\n        }\r\n    \r\n        event.preventDefault(); // Prevent default scrolling\r\n    }\r\n    \r\n    function resetHover() {\r\n        activeHoverIndex = null; // Clear the active hover index\r\n        revertValuesToTotals();\r\n    \r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        hoverDateContainer.textContent = ''; // Clear the hover date\r\n    \r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    }\r\n    \r\n    amortizationChartCanvas.addEventListener('touchmove', handleTouchEvent);\r\n    amortizationChartCanvas.addEventListener('touchstart', handleTouchEvent);\r\n    \r\n    // Prevent resetting immediately after touch ends\r\n    amortizationChartCanvas.addEventListener('touchend', (event) => {\r\n        event.preventDefault(); // Ensure no scrolling or immediate reset\r\n    });\r\n    \r\n    // Add global touchstart listener to reset hover when touching outside the chart\r\n    document.addEventListener('touchstart', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0];\r\n        if (!touch || (touch.clientX < rect.left || touch.clientX > rect.right || touch.clientY < rect.top || touch.clientY > rect.bottom)) {\r\n            resetHover(); // Reset only when touching outside the chart\r\n        }\r\n    });\r\n    \r\n\r\n    \r\n   \r\n   \r\n   \r\n    function displayHoverDate(date) {\r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        const month = date.toLocaleString('default', { month: 'long' }); // Full month name\r\n        const year = date.getFullYear();\r\n        hoverDateContainer.textContent = `${month} ${year}`;\r\n    }\r\n    \r\n\r\n\r\n  \r\n    amortizationChartCanvas.addEventListener('mouseout', () => {\r\n        revertValuesToTotals();\r\n    \r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        hoverDateContainer.textContent = ''; // Clear the hover date\r\n    \r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    });\r\n    \r\n    // Add touchend for mobile devices\r\n    amortizationChartCanvas.addEventListener('touchend', () => {\r\n        revertValuesToTotals();\r\n    \r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        hoverDateContainer.textContent = ''; // Clear the hover date\r\n    \r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    });\r\n    \r\n\r\n\r\n\r\n    \r\n    function revertValuesToTotals() {\r\n        if (!lastAmortizationData) {\r\n            console.warn(\"No amortization data available to revert to totals.\");\r\n            return;\r\n        }\r\n    \r\n        console.log(\"Reverting to totals:\", {\r\n            totalInterestPaid: lastAmortizationData.totalInterestPaid,\r\n            totalPrincipalPaid: lastAmortizationData.totalPrincipalPaid\r\n        });\r\n    \r\n        const totalInterestPaid = lastAmortizationData.totalInterestPaid || 0;\r\n        const totalPrincipalPaid = lastAmortizationData.totalPrincipalPaid || 0;\r\n        const totalAmountPaid = totalInterestPaid + totalPrincipalPaid;\r\n    \r\n        updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid);\r\n    }\r\n    \r\n    \r\n  \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction calculateAmortizationData(loanAmount, interestRate, loanTerm, extraPayment = 0, paymentFrequency = \"monthly\") {\r\n    const monthlyInterestRate = interestRate / 100 / 12;\r\n    const numberOfPayments = loanTerm;\r\n\r\n    const amortizationData = [];\r\n    let balance = loanAmount; // Start with the loan amount\r\n\r\n    // Calculate the fixed monthly payment\r\n    const monthlyPayment =\r\n        loanAmount * monthlyInterestRate /\r\n        (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments));\r\n\r\n    // Determine the actual extra payment based on frequency\r\n    const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, paymentFrequency);\r\n\r\n    for (let i = 0; i < numberOfPayments; i++) {\r\n        const interestPayment = balance * monthlyInterestRate;\r\n        const principalPayment = Math.min(monthlyPayment - interestPayment, balance); // Avoid overpayment\r\n        let totalPrincipalPayment = principalPayment;\r\n\r\n        // Apply recurring extra payment directly to the principal\r\n        if (balance > 0) {\r\n            totalPrincipalPayment = Math.min(principalPayment + adjustedExtraPayment, balance);\r\n        }\r\n\r\n        balance = Math.max(balance - totalPrincipalPayment, 0); // Ensure no negative balance\r\n\r\n        amortizationData.push({\r\n            period: i + 1, // Start periods from 1\r\n            principal: totalPrincipalPayment,\r\n            interest: interestPayment,\r\n            balance: balance,\r\n        });\r\n\r\n        if (balance <= 0) break; // Stop if the loan is fully paid\r\n    }\r\n\r\n    const totalInterestPaid = amortizationData.reduce((sum, row) => sum + row.interest, 0);\r\n    const totalPrincipalPaid = amortizationData.reduce((sum, row) => sum + row.principal, 0);\r\n\r\n    return {\r\n        schedule: amortizationData,\r\n        balanceData: amortizationData.map(row => row.balance),\r\n        cumulativeInterestData: amortizationData.map((_, index) =>\r\n            amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.interest, 0)\r\n        ),\r\n        cumulativePrincipalData: amortizationData.map((_, index) =>\r\n            amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.principal, 0)\r\n        ),\r\n        totalInterestPaid,\r\n        totalPrincipalPaid,\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function populateAmortizationTable(amortizationData) {\r\n//     const tableBody = document.getElementById('amortization-table-body');\r\n//     tableBody.innerHTML = ''; // Clear existing rows\r\n\r\n//     amortizationData.schedule.forEach((row, index) => {\r\n//         const tr = document.createElement('tr');\r\n\r\n//         const dateCell = document.createElement('td');\r\n//         const date = new Date();\r\n//         date.setMonth(date.getMonth() + index);\r\n//         dateCell.textContent = date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n//         tr.appendChild(dateCell);\r\n\r\n//         const principalCell = document.createElement('td');\r\n//         principalCell.textContent = `$${formatter.format(row.principal)}`;\r\n//         tr.appendChild(principalCell);\r\n\r\n//         const interestCell = document.createElement('td');\r\n//         interestCell.textContent = `$${formatter.format(row.interest)}`;\r\n//         tr.appendChild(interestCell);\r\n\r\n//         const balanceCell = document.createElement('td');\r\n//         balanceCell.textContent = `$${formatter.format(row.balance)}`;\r\n//         tr.appendChild(balanceCell);\r\n\r\n//         tr.style.display = index < 3 ? \"table-row\" : \"none\"; // Show only the first 3 rows\r\n//         tableBody.appendChild(tr);\r\n//     });\r\n\r\n//     initializeExpandCollapseLogic();\r\n// }\r\n\r\n\r\nfunction populateAmortizationTable(amortizationData) {\r\n    const tableBody = document.getElementById('amortization-table-body');\r\n    tableBody.innerHTML = ''; // Clear existing rows\r\n\r\n    amortizationData.schedule.forEach((row, index) => {\r\n        const tr = document.createElement('tr');\r\n\r\n        const dateCell = document.createElement('td');\r\n        const date = new Date();\r\n        date.setMonth(date.getMonth() + index);\r\n        dateCell.textContent = date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n        tr.appendChild(dateCell);\r\n\r\n        const principalCell = document.createElement('td');\r\n        principalCell.textContent = `$${row.principal.toFixed(2)}`;\r\n        tr.appendChild(principalCell);\r\n\r\n        const interestCell = document.createElement('td');\r\n        interestCell.textContent = `$${row.interest.toFixed(2)}`;\r\n        tr.appendChild(interestCell);\r\n\r\n        const balanceCell = document.createElement('td');\r\n        balanceCell.textContent = `$${row.balance.toFixed(2)}`;\r\n        tr.appendChild(balanceCell);\r\n\r\n        tr.style.display = index < 3 ? \"table-row\" : \"none\"; // Show only the first 3 rows\r\n        tableBody.appendChild(tr);\r\n    });\r\n\r\n    initializeExpandCollapseLogic();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Add expand/collapse functionality to the amortization table\r\n\r\n\r\n// function initializeExpandCollapseLogic() {\r\n//     const expandBox = document.querySelector(\".expand-box\");\r\n//     const expandText = document.querySelector(\".expand-text\");\r\n//     const amortizationTableBody = document.getElementById(\"amortization-table-body\");\r\n\r\n//     if (!expandBox || !expandText || !amortizationTableBody) {\r\n//         console.error(\"Expand/Collapse elements not found.\");\r\n//         return;\r\n//     }\r\n\r\n//     const rows = Array.from(amortizationTableBody.rows);\r\n//     let isExpanded = false;\r\n\r\n//     expandBox.addEventListener(\"click\", function () {\r\n//         rows.forEach((row, index) => {\r\n//             row.style.display = isExpanded || index < 3 ? \"table-row\" : \"none\";\r\n//         });\r\n\r\n//         expandText.textContent = isExpanded ? \"Expand\" : \"Collapse\";\r\n//         isExpanded = !isExpanded;\r\n//     });\r\n// }\r\n\r\nfunction initializeExpandCollapseLogic() {\r\n    const expandBox = document.querySelector(\".expand-box\");\r\n    const expandText = document.querySelector(\".expand-text\");\r\n    const amortizationTableBody = document.getElementById(\"amortization-table-body\");\r\n\r\n    if (!expandBox || !expandText || !amortizationTableBody) {\r\n        console.error(\"Expand/Collapse elements not found.\");\r\n        return;\r\n    }\r\n\r\n    const rows = Array.from(amortizationTableBody.rows);\r\n    let isExpanded = false;\r\n\r\n    expandBox.addEventListener(\"click\", function () {\r\n        if (document.getElementById(\"amortization-schedule-content\").style.display === \"block\") {\r\n            rows.forEach((row, index) => {\r\n                row.style.display = isExpanded || index < 3 ? \"table-row\" : \"none\";\r\n            });\r\n\r\n            expandText.textContent = isExpanded ? \"Expand\" : \"Collapse\";\r\n            isExpanded = !isExpanded;\r\n\r\n            // Show or hide the table based on expansion state\r\n            document.getElementById(\"amortization-schedule\").style.display = isExpanded ? \"block\" : \"none\";\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n});"],"names":["document","addEventListener","console","log","defaultValues","loanAmount","loanTerm","interestRate","originationFees","extraPayment","paymentFrequency","loanAmountInput","getElementById","loanTermInput","interestRateInput","originationFeesInput","extraPaymentInput","paymentFrequencyInput","amortizationChartCanvas","updateBtn","resetBtn","amortizationLabelsContainer","placeholder","value","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","forEach","input","event","key","preventDefault","lastAmortizationData","updateHorizontalStackedBarChart","principalAndInterest","frequency","canvas","error","ctx","getContext","parentWidth","parentElement","offsetWidth","width","height","clearRect","adjustedPrincipalAndInterest","adjustPaymentForFrequency","adjustedExtraPayment","data","colors","total","reduce","a","b","warn","chartHeight","yOffset","borderRadius","cumulativeWidth","activeSegments","filter","length","index","segmentWidth","fillStyle","isFirst","isLast","drawOuterRoundedRect","updateChartLabels","labelsContainer","innerHTML","labels","label","color","item","labelElement","createElement","classList","add","colorCircle","backgroundColor","labelText","textContent","labelValue","toLocaleString","undefined","appendChild","calculateAndDisplayResults","parseFloat","parseInt","netLoanAmount","calculateAmortizationData","monthlyInterestRate","monthlyPayment","Math","pow","updatePaymentBreakdown","drawAmortizationChart","balanceData","cumulativeInterestData","cumulativePrincipalData","paymentElement","frequencyLabel","options","selectedIndex","text","totalPayment","concat","format","adjustedFrequencyLabel","toLowerCase","displayFrequencyLabel","updateHoverValues","balance","interest","principal","labelValues","querySelectorAll","frequencyFactors","monthly","biweekly","weekly","updateLabels","resetInputs","tabPaymentBreakdown","tabAmortizationSchedule","paymentBreakdownContent","amortizationScheduleContent","showTab","tabName","display","populateAmortizationTable","paymentFactor","updateStackedBarLabels","labelItem","labelName","x","y","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","calculateAmortizationSchedule","numberOfPayments","arguments","amortizationData","totalInterestPaid","totalPrincipalPaid","i","interestPayment","principalPayment","min","max","push","period","schedule","map","row","_","slice","sum","hoverIndex","dpr","window","devicePixelRatio","scale","updateAmortizationLabels","totalAmountPaid","rect","getBoundingClientRect","clientX","left","floor","padding","right","months","touches","top","bottom","chartWidth","round","startDate","Date","hoverDate","setMonth","getMonth","displayHoverDate","handleTouchEvent","activeHoverIndex","touch","changedTouches","resetHover","revertValuesToTotals","hoverDateContainer","clientY","date","month","year","getFullYear","totalPrincipalPayment","tableBody","tr","dateCell","toLocaleDateString","principalCell","toFixed","interestCell","balanceCell","initializeExpandCollapseLogic","expandBox","querySelector","expandText","amortizationTableBody","rows","Array","from","isExpanded"],"sourceRoot":""}