{"version":3,"file":"down-payment-calculator.79aa7fb48dc8c4bfda99.js","mappings":"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CAAC,CAACP,gBAAgB,CAAC,OAAO,EAAEsJ,WAAW,CAAC;;EAE3E;EACA9F,0BAA0B,CAAC,CAAC;AAChC,CAAC,CAAC;;;;;;UChgBF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://monvvo-app/./public/js/down-payment-calculator.js","webpack://monvvo-app/webpack/bootstrap","webpack://monvvo-app/webpack/runtime/chunk loaded","webpack://monvvo-app/webpack/runtime/hasOwnProperty shorthand","webpack://monvvo-app/webpack/runtime/jsonp chunk loading","webpack://monvvo-app/webpack/before-startup","webpack://monvvo-app/webpack/startup","webpack://monvvo-app/webpack/after-startup"],"sourcesContent":["import '../css/down-payment.css';\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        const loanTypes = {\r\n            conventional: [0.03, 0.05, 0.10, 0.20], // Conventional: 3%, 5%, 10%, 20%\r\n            fha: [0.035, 0.10] // FHA: 3.5%, 10%\r\n        };\r\n\r\n            // Tab switching logic\r\n    const tabs = document.querySelectorAll(\".results-tab\");\r\n    const downPaymentOptions = document.getElementById(\"down-payment-options\");\r\n    const savingsTimeline = document.getElementById(\"savings-timeline\");\r\n\r\n    // Function to show the appropriate tab content\r\n    function showTab(tabId) {\r\n        // Reset active states for tabs\r\n        tabs.forEach(tab => tab.classList.remove(\"tab-active\"));\r\n\r\n        // Hide all content\r\n        downPaymentOptions.style.display = \"none\";\r\n        savingsTimeline.style.display = \"none\";\r\n\r\n        // Set active tab and display corresponding content\r\n        const activeTab = document.getElementById(tabId);\r\n        if (activeTab) {\r\n            activeTab.classList.add(\"tab-active\");\r\n\r\n            if (tabId === \"tab-recommended\") {\r\n                downPaymentOptions.style.display = \"block\";\r\n            } else if (tabId === \"tab-max-budget\") {\r\n                savingsTimeline.style.display = \"block\";\r\n            }\r\n        }\r\n    }\r\n\r\n    // Add click event listeners to the tabs\r\n    tabs.forEach(tab => {\r\n        tab.addEventListener(\"click\", () => {\r\n            showTab(tab.id);\r\n        });\r\n    });\r\n\r\n    // Set default tab on load\r\n    showTab(\"tab-recommended\");\r\n\r\n\r\n\r\n        // Down Payment Select JS\r\n        const selectFluid = document.querySelector(\".down-payment-select-fluid\");\r\n        const selectedOption = selectFluid.querySelector(\".selected-option\");\r\n        const optionsContainer = document.getElementById(\"down-payment-chart-select\");\r\n        const options = optionsContainer.querySelectorAll(\".down-payment-chart-option\");\r\n        const allCharts = document.querySelectorAll(\".chart-container\");\r\n        const monthlyContributionInput = document.getElementById(\"monthly-contributions\"); // Added this line\r\n        let isDropdownOpen = false;\r\n        \r\n        // Toggle dropdown visibility\r\n        selectFluid.addEventListener(\"click\", (event) => {\r\n          // Prevent immediate dropdown closure on option click\r\n          event.stopPropagation();\r\n          isDropdownOpen = !isDropdownOpen;\r\n          optionsContainer.style.display = isDropdownOpen ? \"block\" : \"none\";\r\n        });\r\n        \r\n        // Handle option selection and chart display\r\n        options.forEach(option => {\r\n          option.addEventListener(\"click\", (event) => {\r\n            event.stopPropagation(); // Prevent event bubbling\r\n            const selectedValue = option.getAttribute(\"data-value\");\r\n            const chartToShow = option.getAttribute(\"data-chart\");\r\n            const displayText = option.textContent;\r\n        \r\n            if (!selectedValue) {\r\n              console.error(\"Selected option does not have a valid data-value.\");\r\n              return;\r\n            }\r\n        \r\n            // Update the selected option display\r\n            selectedOption.textContent = displayText;\r\n            selectedOption.setAttribute(\"data-value\", selectedValue); // Update the data-value attribute\r\n        \r\n            // Hide all charts\r\n            allCharts.forEach(chart => chart.classList.remove(\"active\"));\r\n        \r\n            // Show the respective chart\r\n            const chartElement = document.getElementById(chartToShow);\r\n            if (chartElement) {\r\n              chartElement.classList.add(\"active\");\r\n            } else {\r\n              console.warn(`No chart found for chartToShow: ${chartToShow}`);\r\n            }\r\n        \r\n            // Close the dropdown immediately\r\n            optionsContainer.style.display = \"none\";\r\n            isDropdownOpen = false;\r\n        \r\n            console.log(`Selected Value: ${selectedValue}, Displaying Chart: ${chartToShow}`);\r\n          });\r\n        });\r\n        \r\n        // Close dropdown when clicking outside\r\n        document.addEventListener(\"click\", (event) => {\r\n          if (!selectFluid.contains(event.target)) {\r\n            optionsContainer.style.display = \"none\";\r\n            isDropdownOpen = false;\r\n          }\r\n        });\r\n        \r\n        \r\n\r\n        \r\n\r\n\r\n        // Calculator JS\r\n        const homePriceInput = document.getElementById(\"home-price\");\r\n        const loanTypeSelect = document.getElementById(\"down-payment-chart-select\");\r\n        const downPaymentMonths = document.getElementById(\"down-payment-months\");\r\n        const downPaymentSavings = document.getElementById(\"down-payment-savings\");\r\n        const chartContainer = document.getElementById(\"chart-container\");\r\n\r\n    \r\n        // Helper function to get input value or fallback to placeholder\r\n        function getInputValueOrPlaceholder(inputElement) {\r\n            return parseFloat(inputElement.value) || parseFloat(inputElement.placeholder) || 0;\r\n        }\r\n    \r\n        // Calculate and display results dynamically\r\n        // function calculateAndDisplayResults() {\r\n        //     const homePrice = getInputValueOrPlaceholder(homePriceInput);\r\n        \r\n        //     // Get the selected loan type from the custom dropdown\r\n        //     const selectedOption = document.querySelector(\".selected-option\");\r\n        //     if (!selectedOption) {\r\n        //         console.error(\"No selected option found.\");\r\n        //         chartContainer.innerHTML = \"<p>Please select a loan type to see results.</p>\";\r\n        //         return;\r\n        //     }\r\n        \r\n        //     const loanType = selectedOption.getAttribute(\"data-value\");\r\n        //     if (!loanType) {\r\n        //         console.error(\"Selected option does not have a valid data-value.\");\r\n        //         chartContainer.innerHTML = \"<p>Please select a valid loan type to see results.</p>\";\r\n        //         return;\r\n        //     }\r\n        \r\n        //     // Get the percentages for the selected loan type\r\n        //     const percentages = loanTypes[loanType];\r\n        //     if (!percentages) {\r\n        //         console.error(`Invalid loan type selected: ${loanType}`);\r\n        //         chartContainer.innerHTML = \"<p>Please select a valid loan type to see results.</p>\";\r\n        //         return;\r\n        //     }\r\n        \r\n        //     // Clear previous charts and dynamically created elements\r\n        //     chartContainer.innerHTML = \"\";\r\n        \r\n        //     // Dynamically create and insert the main results text\r\n        //     let homePriceElement = document.getElementById(\"results-home-price\");\r\n        //     if (!homePriceElement) {\r\n        //         const homePriceText = document.createElement(\"p\");\r\n        //         homePriceText.className = \"down-payment-results\";\r\n        //         homePriceText.innerHTML = `For a <span id=\"results-home-price\"></span> mortgage.`;\r\n        //         chartContainer.before(homePriceText); // Insert the text above the chart container\r\n        //         homePriceElement = document.getElementById(\"results-home-price\");\r\n        //     }\r\n        \r\n        //     // Update the home price dynamically\r\n        //     homePriceElement.textContent = `${homePrice.toLocaleString()}`;\r\n        \r\n        //     // Function to draw a rounded rectangle\r\n        //     function drawRoundedRect(ctx, x, y, width, height, radius, fillStyle) {\r\n        //         ctx.fillStyle = fillStyle;\r\n        //         ctx.beginPath();\r\n        //         ctx.moveTo(x + radius, y);\r\n        //         ctx.lineTo(x + width - radius, y);\r\n        //         ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        //         ctx.lineTo(x + width, y + height - radius);\r\n        //         ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        //         ctx.lineTo(x + radius, y + height);\r\n        //         ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        //         ctx.lineTo(x, y + radius);\r\n        //         ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        \r\n        //     // Create charts and display text for each percentage\r\n        //     percentages.forEach((percent) => {\r\n        //         const chartWrapper = document.createElement(\"div\");\r\n        //         chartWrapper.style.marginBottom = \"20px\";\r\n        //         chartWrapper.style.textAlign = \"left\";\r\n        //         chartWrapper.style.fontFamily = \"'Roboto', sans-serif\";\r\n        \r\n        //         const percentageLabel = document.createElement(\"p\");\r\n        //         percentageLabel.textContent = `${(percent * 100).toFixed(1)}%`;\r\n        //         percentageLabel.style.fontSize = \"18px\";\r\n        //         percentageLabel.style.fontWeight = \"bold\";\r\n        //         percentageLabel.style.margin = \"0 0 2px 0\";\r\n        //         percentageLabel.style.textAlign = \"left\";\r\n        \r\n        //         const canvas = document.createElement(\"canvas\");\r\n        //         canvas.style.width = \"100%\";\r\n        //         canvas.style.height = \"25px\";\r\n        \r\n        //         chartWrapper.appendChild(percentageLabel);\r\n        //         chartWrapper.appendChild(canvas);\r\n        //         chartContainer.appendChild(chartWrapper);\r\n        \r\n        //         const ctx = canvas.getContext(\"2d\");\r\n        //         const downPayment = homePrice * percent;\r\n        //         const barWidth = (downPayment / homePrice) * canvas.width;\r\n        //         const barHeight = canvas.height;\r\n        \r\n        //         drawRoundedRect(ctx, 0, 0, barWidth, barHeight, 5, \"#175134\");\r\n        //         ctx.fillStyle = \"#175134\";\r\n        //         ctx.fillRect(barWidth - 5, 0, 5, barHeight);\r\n        //         drawRoundedRect(ctx, barWidth, 0, canvas.width - barWidth, barHeight, 5, \"#cae6d9\");\r\n        //         ctx.fillStyle = \"#cae6d9\";\r\n        //         ctx.fillRect(barWidth, 0, 5, barHeight);\r\n        \r\n        //         const description = document.createElement(\"p\");\r\n        //         description.className = \"down-payment-text\";\r\n        //         description.style.margin = \"2px 0 0 0\";\r\n        //         description.style.textAlign = \"left\";\r\n        //         description.style.fontFamily = \"'Roboto', sans-serif\";\r\n        //         description.style.fontSize = \"16px\";\r\n        //         description.innerHTML = `<span>${downPayment.toLocaleString()}</span> for a <span>$${homePrice.toLocaleString()}</span> mortgage.`;\r\n        //         chartWrapper.appendChild(description);\r\n        //     });\r\n        \r\n        //     console.log(`Loan type: ${loanType}, Percentages: ${percentages}`);\r\n        // }\r\n\r\n\r\n        function calculateAndDisplayResults() {\r\n          const homePrice = getInputValueOrPlaceholder(homePriceInput);\r\n      \r\n          // Get the selected loan type from the custom dropdown\r\n          const selectedOption = document.querySelector(\".selected-option\");\r\n          if (!selectedOption) {\r\n              console.error(\"No selected option found.\");\r\n              chartContainer.innerHTML = \"<p>Please select a loan type to see results.</p>\";\r\n              return;\r\n          }\r\n      \r\n          const loanType = selectedOption.getAttribute(\"data-value\");\r\n          if (!loanType) {\r\n              console.error(\"Selected option does not have a valid data-value.\");\r\n              chartContainer.innerHTML = \"<p>Please select a valid loan type to see results.</p>\";\r\n              return;\r\n          }\r\n      \r\n          // Get the percentages for the selected loan type\r\n          const percentages = loanTypes[loanType];\r\n          if (!percentages) {\r\n              console.error(`Invalid loan type selected: ${loanType}`);\r\n              chartContainer.innerHTML = \"<p>Please select a valid loan type to see results.</p>\";\r\n              return;\r\n          }\r\n      \r\n          // Retrieve monthly contributions for the savings timeline\r\n          const monthlyContribution = getInputValueOrPlaceholder(monthlyContributionInput);\r\n      \r\n          if (!monthlyContribution || monthlyContribution <= 0) {\r\n              console.error(\"Invalid monthly contribution input.\");\r\n              chartContainer.innerHTML = \"<p>Please enter a valid monthly contribution to see results.</p>\";\r\n              return;\r\n          }\r\n      \r\n          // Clear previous charts and dynamically created elements\r\n          chartContainer.innerHTML = \"\";\r\n      \r\n          // Dynamically create and insert the main results text\r\n          let homePriceElement = document.getElementById(\"results-home-price\");\r\n          if (!homePriceElement) {\r\n              const homePriceText = document.createElement(\"p\");\r\n              homePriceText.className = \"down-payment-results\";\r\n              homePriceText.innerHTML = `For a <span id=\"results-home-price\"></span> mortgage.`;\r\n              chartContainer.before(homePriceText); // Insert the text above the chart container\r\n              homePriceElement = document.getElementById(\"results-home-price\");\r\n          }\r\n      \r\n          // Update the home price dynamically\r\n          homePriceElement.textContent = `${homePrice.toLocaleString()}`;\r\n      \r\n          // Function to draw a rounded rectangle (bar chart logic)\r\n          function drawRoundedRect(ctx, x, y, width, height, radius, fillStyle) {\r\n              ctx.fillStyle = fillStyle;\r\n              ctx.beginPath();\r\n              ctx.moveTo(x + radius, y);\r\n              ctx.lineTo(x + width - radius, y);\r\n              ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n              ctx.lineTo(x + width, y + height - radius);\r\n              ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n              ctx.lineTo(x + radius, y + height);\r\n              ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n              ctx.lineTo(x, y + radius);\r\n              ctx.quadraticCurveTo(x, y, x + radius, y);\r\n              ctx.closePath();\r\n              ctx.fill();\r\n          }\r\n      \r\n          // Create bar charts and display text for each percentage\r\n          percentages.forEach((percent) => {\r\n              const chartWrapper = document.createElement(\"div\");\r\n              chartWrapper.style.marginBottom = \"20px\";\r\n              chartWrapper.style.textAlign = \"left\";\r\n              chartWrapper.style.fontFamily = \"'Roboto', sans-serif\";\r\n      \r\n              const percentageLabel = document.createElement(\"p\");\r\n              percentageLabel.textContent = `${(percent * 100).toFixed(1)}%`;\r\n              percentageLabel.style.fontSize = \"18px\";\r\n              percentageLabel.style.fontWeight = \"bold\";\r\n              percentageLabel.style.margin = \"0 0 2px 0\";\r\n      \r\n              const canvas = document.createElement(\"canvas\");\r\n              canvas.style.width = \"100%\";\r\n              canvas.style.height = \"25px\";\r\n      \r\n              chartWrapper.appendChild(percentageLabel);\r\n              chartWrapper.appendChild(canvas);\r\n              chartContainer.appendChild(chartWrapper);\r\n      \r\n              const ctx = canvas.getContext(\"2d\");\r\n              const downPayment = homePrice * percent;\r\n              const barWidth = (downPayment / homePrice) * canvas.width;\r\n              const barHeight = canvas.height;\r\n      \r\n              drawRoundedRect(ctx, 0, 0, barWidth, barHeight, 5, \"#175134\");\r\n              ctx.fillStyle = \"#175134\";\r\n              ctx.fillRect(barWidth - 5, 0, 5, barHeight);\r\n              drawRoundedRect(ctx, barWidth, 0, canvas.width - barWidth, barHeight, 5, \"#cae6d9\");\r\n              ctx.fillStyle = \"#cae6d9\";\r\n              ctx.fillRect(barWidth, 0, 5, barHeight);\r\n      \r\n              const description = document.createElement(\"p\");\r\n              description.className = \"down-payment-text\";\r\n              description.style.margin = \"2px 0 0 0\";\r\n              description.style.fontSize = \"16px\";\r\n              description.innerHTML = `<span>${downPayment.toLocaleString()}</span> for a <span>$${homePrice.toLocaleString()}</span> mortgage.`;\r\n              chartWrapper.appendChild(description);\r\n      \r\n              // Render amortization chart\r\n              const amortizationCanvas = document.createElement(\"canvas\");\r\n              amortizationCanvas.style.width = \"100%\";\r\n              amortizationCanvas.style.height = \"300px\";\r\n              chartContainer.appendChild(amortizationCanvas);\r\n      \r\n              const amortizationCtx = amortizationCanvas.getContext(\"2d\");\r\n              const targetAmount = downPayment;\r\n              const months = Math.ceil(targetAmount / monthlyContribution);\r\n      \r\n              drawAmortizationChart(amortizationCtx, months, monthlyContribution, targetAmount);\r\n          });\r\n      \r\n          console.log(`Loan type: ${loanType}, Percentages: ${percentages}`);\r\n      }\r\n      \r\n\r\n\r\n \r\n\r\n\r\n\r\n        \r\n        \r\n      function drawAmortizationChart(months, monthlyContribution, targetAmount, hoverIndex = 0) {\r\n    const canvas = document.getElementById('amortization-chart');\r\n    const ctx = canvas.getContext('2d');\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    // Adjust canvas dimensions dynamically\r\n    const isSmallScreen = window.innerWidth < 700;\r\n    const canvasHeight = isSmallScreen ? 200 : 300;\r\n\r\n    canvas.width = canvas.parentElement.offsetWidth * dpr;\r\n    canvas.height = canvasHeight * dpr;\r\n    ctx.scale(dpr, dpr);\r\n\r\n    const width = canvas.width / dpr;\r\n    const height = canvas.height / dpr;\r\n\r\n    // Adjust padding to prevent overlap\r\n    const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n    const gridColor = '#d0d0d0';\r\n    const labelColor = '#505050';\r\n\r\n    // Calculate Y-axis max value (targetAmount or slightly higher)\r\n    const yAxisMax = Math.ceil(targetAmount / 10000) * 10000;\r\n\r\n    // Calculate data points\r\n    const totalSaved = [];\r\n    let cumulativeSavings = 0;\r\n    for (let i = 0; i < months; i++) {\r\n        cumulativeSavings += monthlyContribution;\r\n        totalSaved.push(Math.min(cumulativeSavings, targetAmount));\r\n    }\r\n\r\n    // Helper functions for coordinates\r\n    function getY(value) {\r\n        return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n    }\r\n\r\n    function getX(index) {\r\n        return padding.left + (index / (months - 1)) * (width - padding.left - padding.right);\r\n    }\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw horizontal grid lines (Y-axis) and labels\r\n    ctx.font = '14px Roboto';\r\n    ctx.textAlign = 'right';\r\n    ctx.fillStyle = '#232525'; // Label color\r\n    ctx.strokeStyle = gridColor;\r\n\r\n    for (let i = 0; i <= yAxisMax; i += yAxisMax / 5) {\r\n        const y = getY(i);\r\n\r\n        // Grid line\r\n        ctx.beginPath();\r\n        ctx.moveTo(padding.left, y);\r\n        ctx.lineTo(width - padding.right, y);\r\n        ctx.stroke();\r\n\r\n        // Y-axis label\r\n        ctx.fillText(`$${(i / 1000).toFixed(0)}K`, padding.left - 10, y + 5);\r\n    }\r\n\r\n    // Draw vertical grid lines (X-axis) and labels\r\n    ctx.textAlign = 'center';\r\n    for (let i = 0; i <= months; i += Math.max(1, Math.floor(months / 12))) {\r\n        const x = getX(i);\r\n        const monthLabel = `${i}M`;\r\n\r\n        // Grid line\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, padding.top);\r\n        ctx.lineTo(x, height - padding.bottom);\r\n        ctx.stroke();\r\n\r\n        // X-axis label\r\n        ctx.fillText(monthLabel, x, height - 10);\r\n    }\r\n\r\n    // Draw the savings line\r\n    ctx.strokeStyle = '#175134'; // Line color\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    for (let i = 0; i < totalSaved.length; i++) {\r\n        const x = getX(i);\r\n        const y = getY(totalSaved[i]);\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n    }\r\n    ctx.stroke();\r\n\r\n    // Draw hover line and dot\r\n    const x = getX(hoverIndex);\r\n    const y = getY(totalSaved[hoverIndex]);\r\n\r\n    // Vertical hover line\r\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\r\n    ctx.lineWidth = 1.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, padding.top);\r\n    ctx.lineTo(x, height - padding.bottom);\r\n    ctx.stroke();\r\n\r\n    // Hover dot\r\n    const dotRadius = 6;\r\n    ctx.fillStyle = '#175134'; // Dot color\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, dotRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // Draw hover labels\r\n    ctx.fillStyle = '#232525'; // Label color\r\n    ctx.textAlign = 'left';\r\n    ctx.font = '14px Roboto';\r\n    const labelX = x + 10;\r\n    const labelY = y - 10;\r\n\r\n    ctx.fillText(`Saved: $${totalSaved[hoverIndex].toLocaleString()}`, labelX, labelY);\r\n    ctx.fillText(`Month: ${hoverIndex + 1}`, labelX, labelY + 20);\r\n}\r\n\r\n        \r\n\r\n\r\n\r\n        \r\n        \r\n        \r\n        \r\n    \r\n\r\n    // Reset all inputs to placeholders and defaults\r\n    function resetInputs() {\r\n        homePriceInput.value = \"\";\r\n        loanTypeSelect.value = \"conventional\"; // Default to Conventional loan\r\n        chartContainer.innerHTML = \"\"; // Clear charts\r\n        calculateAndDisplayResults(); // Recalculate using placeholders\r\n    }\r\n    \r\n\r\n    // Event listeners for buttons\r\n    document.getElementById(\"update-btn\").addEventListener(\"click\", calculateAndDisplayResults);\r\n    document.getElementById(\"reset-btn\").addEventListener(\"click\", resetInputs);\r\n\r\n    // Initialize chart on page load with placeholder values and Conventional loan\r\n    calculateAndDisplayResults();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t779: 0,\n\t178: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmonvvo_app\"] = self[\"webpackChunkmonvvo_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [178], () => (__webpack_require__(2261)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["document","addEventListener","loanTypes","conventional","fha","tabs","querySelectorAll","downPaymentOptions","getElementById","savingsTimeline","showTab","tabId","forEach","tab","classList","remove","style","display","activeTab","add","id","selectFluid","querySelector","selectedOption","optionsContainer","options","allCharts","monthlyContributionInput","isDropdownOpen","event","stopPropagation","option","selectedValue","getAttribute","chartToShow","displayText","textContent","console","error","setAttribute","chart","chartElement","warn","concat","log","contains","target","homePriceInput","loanTypeSelect","downPaymentMonths","downPaymentSavings","chartContainer","getInputValueOrPlaceholder","inputElement","parseFloat","value","placeholder","calculateAndDisplayResults","homePrice","innerHTML","loanType","percentages","monthlyContribution","homePriceElement","homePriceText","createElement","className","before","toLocaleString","drawRoundedRect","ctx","x","y","width","height","radius","fillStyle","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","percent","chartWrapper","marginBottom","textAlign","fontFamily","percentageLabel","toFixed","fontSize","fontWeight","margin","canvas","appendChild","getContext","downPayment","barWidth","barHeight","fillRect","description","amortizationCanvas","amortizationCtx","targetAmount","months","Math","ceil","drawAmortizationChart","hoverIndex","arguments","length","undefined","dpr","window","devicePixelRatio","isSmallScreen","innerWidth","canvasHeight","parentElement","offsetWidth","scale","padding","top","right","bottom","left","gridColor","labelColor","yAxisMax","totalSaved","cumulativeSavings","i","push","min","getY","getX","index","clearRect","font","strokeStyle","stroke","fillText","max","floor","monthLabel","lineWidth","dotRadius","arc","PI","labelX","labelY","resetInputs"],"sourceRoot":""}