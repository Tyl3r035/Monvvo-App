{"version":3,"file":"loan-calculator.c9a55344c9e32864d0d0.js","mappings":"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","sources":["webpack://monvvo-app/./public/js/loan-calculator.js"],"sourcesContent":["// import { generateMortgagePdf } from \"./pdf/mortgage-pdf.js\";\r\n    \r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n        console.log(\"DOMContentLoaded event fired\");\r\n    \r\n        // Define default values\r\n        const defaultValues = {\r\n            loanAmount: 20000, // Default loan amount\r\n            loanTerm: 60, // Loan term in months\r\n            interestRate: 7.04, // Annual interest rate\r\n            originationFees: 0, // Default origination fees\r\n            extraPayment: 0, // Default extra payment\r\n            paymentFrequency: \"monthly\", // Default payment frequency\r\n        };\r\n    \r\n        // Input elements\r\n        const loanAmountInput = document.getElementById('loan-amount');\r\n        const loanTermInput = document.getElementById('loan-term');\r\n        const interestRateInput = document.getElementById('interest-rate');\r\n        const originationFeesInput = document.getElementById('origination-fees');\r\n        const extraPaymentInput = document.getElementById('extra-payment');\r\n        const paymentFrequencyInput = document.getElementById('payment-frequency');\r\n        const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n        const updateBtn = document.getElementById('update-btn');\r\n        const resetBtn = document.getElementById('reset-btn');\r\n        const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n    \r\n        // Set placeholders and default values\r\n        loanAmountInput.placeholder = defaultValues.loanAmount;\r\n        loanTermInput.value = defaultValues.loanTerm;\r\n        interestRateInput.placeholder = defaultValues.interestRate;\r\n        originationFeesInput.placeholder = defaultValues.originationFees;\r\n        extraPaymentInput.placeholder = defaultValues.extraPayment;\r\n        paymentFrequencyInput.value = defaultValues.paymentFrequency;\r\n    \r\n        // Formatter for currency values\r\n        const formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        });\r\n    \r\n        // Restrict invalid inputs\r\n        [loanAmountInput, loanTermInput, interestRateInput, originationFeesInput, extraPaymentInput].forEach(input => {\r\n            input.addEventListener('keydown', function (event) {\r\n                if (event.key === \"-\" || event.key === \"e\") {\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        let lastAmortizationData = null;\r\n        \r\n\r\n\r\n\r\n \r\n \r\n \r\n\r\n\r\n\r\n// function updateHorizontalStackedBarChart(principalAndInterest, extraPayment, frequency) {\r\n//     const canvas = document.getElementById('loanChart');\r\n//     if (!canvas) {\r\n//         console.error(\"Canvas element for loan chart not found.\");\r\n//         return;\r\n//     }\r\n\r\n//     const ctx = canvas.getContext('2d');\r\n//     const parentWidth = canvas.parentElement.offsetWidth;\r\n\r\n//     // Ensure the canvas is resized\r\n//     canvas.width = parentWidth;\r\n//     canvas.height = 100;\r\n\r\n//     // Clear the canvas\r\n//     ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n//     // Adjust payments for frequency\r\n//     const adjustedPrincipalAndInterest = adjustPaymentForFrequency(principalAndInterest, frequency);\r\n//     const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n\r\n//     // Data and colors\r\n//     const data = [adjustedPrincipalAndInterest, adjustedExtraPayment];\r\n//     const colors = ['#175134', '#91BBA6']; // Principal & Interest, Extra Payment\r\n//     const total = data.reduce((a, b) => a + b, 0);\r\n\r\n//     if (total === 0) {\r\n//         console.warn(\"Total data for stacked bar chart is 0. Skipping rendering.\");\r\n//         return;\r\n//     }\r\n\r\n//     const chartHeight = 60;\r\n//     const yOffset = canvas.height / 2 - chartHeight / 2;\r\n//     const borderRadius = 10; // Radius for rounded corners\r\n//     let cumulativeWidth = 0;\r\n\r\n//     // Draw each segment with rounded corners\r\n//     data.forEach((value, index) => {\r\n//         if (value > 0) {\r\n//             const segmentWidth = (value / total) * canvas.width;\r\n\r\n//             ctx.fillStyle = colors[index];\r\n\r\n//             // Determine if the segment is the first or last\r\n//             const isFirst = index === 0;\r\n//             const isLast = index === data.length - 1;\r\n\r\n//             drawOuterRoundedRect(\r\n//                 ctx,\r\n//                 cumulativeWidth,\r\n//                 yOffset,\r\n//                 segmentWidth,\r\n//                 chartHeight,\r\n//                 borderRadius,\r\n//                 isFirst,\r\n//                 isLast\r\n//             );\r\n\r\n//             cumulativeWidth += segmentWidth;\r\n//         }\r\n//     });\r\n\r\n//     console.log(\"Stacked bar chart updated with rounded corners.\");\r\n// }\r\n\r\n\r\n\r\n\r\nfunction updateHorizontalStackedBarChart(principalAndInterest, extraPayment, frequency) {\r\n    const canvas = document.getElementById('loanChart');\r\n    if (!canvas) {\r\n        console.error(\"Canvas element for loan chart not found.\");\r\n        return;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const parentWidth = canvas.parentElement.offsetWidth;\r\n\r\n    // Ensure the canvas is resized\r\n    canvas.width = parentWidth;\r\n    canvas.height = 100;\r\n\r\n    // Clear the canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Adjust payments for frequency\r\n    const adjustedPrincipalAndInterest = adjustPaymentForFrequency(principalAndInterest, frequency);\r\n    const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n\r\n    // Data and colors\r\n    const data = [adjustedPrincipalAndInterest, adjustedExtraPayment];\r\n    const colors = ['#175134', '#91BBA6']; // Principal & Interest, Extra Payment\r\n    const total = data.reduce((a, b) => a + b, 0);\r\n\r\n    if (total === 0) {\r\n        console.warn(\"Total data for stacked bar chart is 0. Skipping rendering.\");\r\n        return;\r\n    }\r\n\r\n    const chartHeight = 60;\r\n    const yOffset = canvas.height / 2 - chartHeight / 2;\r\n    const borderRadius = 10; // Radius for rounded corners\r\n    let cumulativeWidth = 0;\r\n\r\n    // Check for only one active segment\r\n    const activeSegments = data.filter(value => value > 0).length;\r\n\r\n    // Draw each segment\r\n    data.forEach((value, index) => {\r\n        if (value > 0) {\r\n            const segmentWidth = (value / total) * canvas.width;\r\n\r\n            ctx.fillStyle = colors[index];\r\n\r\n            // Apply rounded corners for single or multiple segments\r\n            const isFirst = activeSegments === 1 || index === 0;\r\n            const isLast = activeSegments === 1 || index === data.length - 1;\r\n\r\n            drawOuterRoundedRect(\r\n                ctx,\r\n                cumulativeWidth,\r\n                yOffset,\r\n                segmentWidth,\r\n                chartHeight,\r\n                borderRadius,\r\n                isFirst,\r\n                isLast\r\n            );\r\n\r\n            cumulativeWidth += segmentWidth;\r\n        }\r\n    });\r\n\r\n    console.log(\"Stacked bar chart updated with rounded corners.\");\r\n}\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n\r\n        \r\n    function updateChartLabels(principalAndInterest, extraPayment, frequency) {\r\n        const labelsContainer = document.getElementById('chartLabels');\r\n        if (!labelsContainer) {\r\n            console.error(\"Labels container element not found.\");\r\n            return;\r\n        }\r\n    \r\n        labelsContainer.innerHTML = ''; // Clear existing labels\r\n    \r\n        // Adjust payments for frequency\r\n        const adjustedPrincipalAndInterest = adjustPaymentForFrequency(principalAndInterest, frequency);\r\n        const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, frequency);\r\n    \r\n        const labels = [\r\n            { label: 'Principal & Interest', value: adjustedPrincipalAndInterest, color: '#175134' },\r\n            { label: 'Extra Payment', value: adjustedExtraPayment, color: '#91BBA6' },\r\n        ];\r\n    \r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item');\r\n    \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n    \r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name');\r\n            labelText.textContent = item.label;\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = item.value.toLocaleString(undefined, {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2,\r\n            });\r\n    \r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n    \r\n            labelsContainer.appendChild(labelElement);\r\n        });\r\n    \r\n        console.log(\"Chart labels updated successfully.\");\r\n    }\r\n        \r\n        \r\n        \r\n  \r\n\r\n\r\n\r\n\r\n\r\n    let adjustedPrincipalAndInterest = 0;\r\n    let adjustedExtraPayment = 0;\r\n\r\n\r\n\r\n\r\n\r\n    function calculateAndDisplayResults() {\r\n        console.log(\"Calculating loan results...\");\r\n        \r\n        const loanAmount = parseFloat(loanAmountInput.value) || defaultValues.loanAmount;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = parseFloat(interestRateInput.value) || defaultValues.interestRate;\r\n        const originationFees = parseFloat(originationFeesInput.value) || defaultValues.originationFees;\r\n        const extraPayment = parseFloat(extraPaymentInput.value) || defaultValues.extraPayment;\r\n        const paymentFrequency = paymentFrequencyInput.value || defaultValues.paymentFrequency;\r\n    \r\n        const netLoanAmount = loanAmount - originationFees;\r\n        if (netLoanAmount <= 0) {\r\n            console.error(\"Loan amount is insufficient to cover origination fees.\");\r\n            return;\r\n        }\r\n    \r\n        // Calculate full amortization data\r\n        lastAmortizationData = calculateAmortizationData(\r\n            netLoanAmount,\r\n            interestRate,\r\n            loanTerm,\r\n            extraPayment\r\n        );\r\n    \r\n        if (!lastAmortizationData) {\r\n            console.error(\"Failed to calculate amortization data.\");\r\n            return;\r\n        }\r\n    \r\n        const monthlyInterestRate = interestRate / 100 / 12;\r\n        const monthlyPayment =\r\n            netLoanAmount * monthlyInterestRate /\r\n            (1 - Math.pow(1 + monthlyInterestRate, -loanTerm));\r\n    \r\n        // Update global variables for the stacked bar chart\r\n        adjustedPrincipalAndInterest = adjustPaymentForFrequency(monthlyPayment, paymentFrequency);\r\n        adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, paymentFrequency);\r\n    \r\n        // Update the UI\r\n        updatePaymentBreakdown(adjustedPrincipalAndInterest, adjustedExtraPayment, paymentFrequency);\r\n        updateHorizontalStackedBarChart(adjustedPrincipalAndInterest, adjustedExtraPayment, paymentFrequency);\r\n        updateChartLabels(adjustedPrincipalAndInterest, adjustedExtraPayment, paymentFrequency);\r\n    \r\n        console.log(\"Results displayed successfully.\");\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // function updatePaymentBreakdown(principalAndInterest, extraPayment, frequency) {\r\n    //     const paymentElement = document.getElementById('monthly-payment-value');\r\n    //     const frequencyLabel = paymentFrequencyInput.options[paymentFrequencyInput.selectedIndex].text;\r\n    \r\n    //     const totalPayment = principalAndInterest + extraPayment;\r\n    \r\n    //     paymentElement.innerHTML = `\r\n    //         <span class=\"payment-amount\">${formatter.format(totalPayment)}</span>\r\n    //         <span class=\"payment-frequency\"> / ${frequencyLabel}</span>\r\n    //     `;\r\n    \r\n    //     console.log(\"Payment breakdown updated with per-frequency amounts:\", {\r\n    //         principalAndInterest,\r\n    //         extraPayment,\r\n    //         totalPayment,\r\n    //         frequencyLabel,\r\n    //     });\r\n    // }\r\n\r\n\r\n    function updatePaymentBreakdown(principalAndInterest, extraPayment, frequency) {\r\n        const paymentElement = document.getElementById('monthly-payment-value');\r\n        const frequencyLabel = paymentFrequencyInput.options[paymentFrequencyInput.selectedIndex].text;\r\n    \r\n        const totalPayment = principalAndInterest + extraPayment;\r\n    \r\n        // Adjust the label for display\r\n        const adjustedFrequencyLabel = frequencyLabel.toLowerCase();\r\n        const displayFrequencyLabel =\r\n            adjustedFrequencyLabel === \"monthly\" ? \"month\" :\r\n            adjustedFrequencyLabel === \"weekly\" ? \"week\" :\r\n            adjustedFrequencyLabel; // Use as-is for other frequencies\r\n    \r\n        paymentElement.innerHTML = `\r\n            <span class=\"payment-amount\">${formatter.format(totalPayment)}</span>\r\n            <span class=\"payment-frequency\"> / ${displayFrequencyLabel}</span>\r\n        `;\r\n    \r\n        console.log(\"Payment breakdown updated with per-frequency amounts:\", {\r\n            principalAndInterest,\r\n            extraPayment,\r\n            totalPayment,\r\n            displayFrequencyLabel,\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n\r\n        \r\n        \r\n\r\n        \r\n        \r\n \r\n\r\n        function updateHoverValues(balance, interest, principal) {\r\n            const labelValues = document.querySelectorAll('#amortizationLabels .label-value');\r\n            if (labelValues.length === 3) {\r\n                labelValues[0].textContent = principal.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }); // Principal\r\n                labelValues[1].textContent = interest.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });  // Interest\r\n                labelValues[2].textContent = balance.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });  // Balance\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n    \r\n        // Adjust payment based on frequency\r\n        function adjustPaymentForFrequency(totalPayment, frequency) {\r\n            const frequencyFactors = {\r\n                monthly: 1,\r\n                biweekly: 12 / 26,\r\n                weekly: 12 / 52,\r\n                \"semi-monthly\": 0.5,\r\n            };\r\n            return totalPayment * (frequencyFactors[frequency] || 1);\r\n        }\r\n        \r\n    \r\n        // Update labels\r\n        function updateLabels(totalPayment, originationFees) {\r\n            const paymentElement = document.getElementById('monthly-payment-value');\r\n            const frequencyLabel = paymentFrequencyInput.options[paymentFrequencyInput.selectedIndex].text;\r\n    \r\n            paymentElement.innerHTML = `\r\n                <span class=\"payment-amount\">${formatter.format(totalPayment)}</span>\r\n                <span class=\"payment-frequency\"> / ${frequencyLabel}</span>\r\n            `;\r\n        }\r\n    \r\n        // Reset inputs to default values\r\n        function resetInputs() {\r\n            console.log(\"Resetting inputs...\");\r\n            loanAmountInput.value = \"\";\r\n            loanTermInput.value = defaultValues.loanTerm;\r\n            interestRateInput.value = \"\";\r\n            originationFeesInput.value = \"\";\r\n            extraPaymentInput.value = \"\";\r\n            paymentFrequencyInput.value = defaultValues.paymentFrequency;\r\n            calculateAndDisplayResults();\r\n        }\r\n    \r\n        // Event listeners\r\n        updateBtn.addEventListener('click', calculateAndDisplayResults);\r\n        resetBtn.addEventListener('click', resetInputs);\r\n    \r\n        // Initialize with default results\r\n        calculateAndDisplayResults();\r\n    \r\n\r\n    const tabPaymentBreakdown = document.getElementById(\"tab-payment-breakdown\");\r\n    const tabAmortizationSchedule = document.getElementById(\"tab-amortization-schedule\");\r\n\r\n    const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n    const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n\r\n\r\n\r\n\r\n\r\n    // function showTab(tabName) {\r\n    //     if (tabName === \"amortization\") {\r\n    //         paymentBreakdownContent.style.display = \"none\";\r\n    //         amortizationScheduleContent.style.display = \"block\";\r\n    //         tabPaymentBreakdown.classList.remove(\"tab-active\");\r\n    //         tabAmortizationSchedule.classList.add(\"tab-active\");\r\n    \r\n    //         if (lastAmortizationData) {\r\n    //             drawAmortizationChart(\r\n    //                 lastAmortizationData.balanceData,\r\n    //                 lastAmortizationData.cumulativeInterestData,\r\n    //                 lastAmortizationData.cumulativePrincipalData\r\n    //             );\r\n    //         } else {\r\n    //             console.warn(\"No amortization data available for the chart.\");\r\n    //         }\r\n    //     } else if (tabName === \"payment\") {\r\n    //         // Logic for Payment Breakdown tab\r\n    //     }\r\n    // }\r\n    \r\n    function showTab(tabName) {\r\n        if (tabName === \"amortization\") {\r\n            // Show amortization schedule tab\r\n            paymentBreakdownContent.style.display = \"none\";\r\n            amortizationScheduleContent.style.display = \"block\";\r\n            tabPaymentBreakdown.classList.remove(\"tab-active\");\r\n            tabAmortizationSchedule.classList.add(\"tab-active\");\r\n    \r\n            if (lastAmortizationData) {\r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData\r\n                );\r\n            } else {\r\n                console.warn(\"No amortization data available for the chart.\");\r\n            }\r\n        } else if (tabName === \"payment\") {\r\n            // Show payment breakdown tab\r\n            paymentBreakdownContent.style.display = \"block\";\r\n            amortizationScheduleContent.style.display = \"none\";\r\n            tabPaymentBreakdown.classList.add(\"tab-active\");\r\n            tabAmortizationSchedule.classList.remove(\"tab-active\");\r\n    \r\n            // Redraw the stacked bar chart\r\n            const frequency = paymentFrequencyInput.value; // Current frequency\r\n            updateHorizontalStackedBarChart(\r\n                adjustedPrincipalAndInterest, // Pre-calculated in calculateAndDisplayResults\r\n                adjustedExtraPayment,         // Pre-calculated in calculateAndDisplayResults\r\n                frequency\r\n            );\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    tabPaymentBreakdown.addEventListener(\"click\", () => showTab(\"payment\"));\r\n    tabAmortizationSchedule.addEventListener(\"click\", () => showTab(\"amortization\"));\r\n    \r\n\r\n    \r\n    /**\r\n     * Adjust payment based on the frequency selected.\r\n     */\r\n    function adjustPaymentForFrequency(totalPayment, frequency) {\r\n        let paymentFactor = 1; // Default: monthly\r\n        if (frequency === 'biweekly') {\r\n            paymentFactor = 12 / 26;\r\n        } else if (frequency === 'weekly') {\r\n            paymentFactor = 12 / 52;\r\n        } else if (frequency === 'semi-monthly') {\r\n            paymentFactor = 0.5;\r\n        }\r\n    \r\n        console.log(`Adjusting payment for frequency: ${frequency}`);\r\n        return totalPayment * paymentFactor;\r\n    }\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\nfunction resetInputs() {\r\n    console.log(\"Resetting inputs to default values\");\r\n\r\n    // Clear loan-related inputs and set them to default values\r\n    loanAmountInput.value = \"\"; // Leave blank for user to fill\r\n    loanTermInput.value = defaultValues.loanTerm; // Reset to default loan term\r\n    interestRateInput.value = \"\"; // Leave blank for user to fill\r\n    originationFeesInput.value = \"\"; // Leave blank for user to fill\r\n    extraPaymentInput.value = \"\"; // Leave blank for user to fill\r\n\r\n    // Reset payment frequency to default\r\n    paymentFrequencyInput.value = defaultValues.paymentFrequency;\r\n\r\n    // Recalculate using default values (with inputs cleared)\r\n    calculateAndDisplayResults();\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    /**\r\n     * Update the labels below the stacked bar chart.\r\n     */\r\n    function updateStackedBarLabels(principalAndInterest, originationFees, extraPayment, labels, colors) {\r\n        const labelsContainer = document.getElementById('chartLabels');\r\n        labelsContainer.innerHTML = ''; // Clear any existing labels\r\n    \r\n        // Updated data array to match the simplified components\r\n        const data = [principalAndInterest, originationFees, extraPayment];\r\n    \r\n        // Iterate through the data and dynamically create label items\r\n        data.forEach((value, index) => {\r\n            const labelItem = document.createElement('div');\r\n            labelItem.classList.add('label-item');\r\n    \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = colors[index];\r\n    \r\n            const labelName = document.createElement('span');\r\n            labelName.classList.add('label-name');\r\n            labelName.textContent = labels[index];\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = `${formatter.format(value)}`;\r\n    \r\n            labelItem.appendChild(colorCircle);\r\n            labelItem.appendChild(labelName);\r\n            labelItem.appendChild(labelValue);\r\n    \r\n            labelsContainer.appendChild(labelItem);\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    /**\r\n     * Helper function to draw rounded rectangles only on outer edges.\r\n     */\r\n    // function drawOuterRoundedRect(ctx, x, y, width, height, radius, isFirst, isLast) {\r\n    //     ctx.beginPath();\r\n    \r\n    //     // Start at the top-left corner\r\n    //     if (isFirst) {\r\n    //         ctx.moveTo(x + radius, y); // Move to the right to account for the radius\r\n    //     } else {\r\n    //         ctx.moveTo(x, y); // Start at the corner without radius\r\n    //     }\r\n    \r\n    //     // Top edge\r\n    //     ctx.lineTo(x + width - (isLast ? radius : 0), y);\r\n    \r\n    //     // Top-right corner\r\n    //     if (isLast) {\r\n    //         ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    //     }\r\n    \r\n    //     // Right edge\r\n    //     ctx.lineTo(x + width, y + height - (isLast ? radius : 0));\r\n    \r\n    //     // Bottom-right corner\r\n    //     if (isLast) {\r\n    //         ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    //     }\r\n    \r\n    //     // Bottom edge\r\n    //     ctx.lineTo(x + (isFirst ? radius : 0), y + height);\r\n    \r\n    //     // Bottom-left corner\r\n    //     if (isFirst) {\r\n    //         ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    //     }\r\n    \r\n    //     // Left edge\r\n    //     ctx.lineTo(x, y + (isFirst ? radius : 0));\r\n    \r\n    //     // Top-left corner\r\n    //     if (isFirst) {\r\n    //         ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    //     }\r\n    \r\n    //     ctx.closePath();\r\n    //     ctx.fill();\r\n    // }\r\n    function drawOuterRoundedRect(ctx, x, y, width, height, radius, isFirst, isLast) {\r\n        ctx.beginPath();\r\n    \r\n        // Top-left corner\r\n        if (isFirst) {\r\n            ctx.moveTo(x + radius, y);\r\n        } else {\r\n            ctx.moveTo(x, y);\r\n        }\r\n    \r\n        // Top edge\r\n        ctx.lineTo(x + width - (isLast ? radius : 0), y);\r\n    \r\n        // Top-right corner\r\n        if (isLast) {\r\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        }\r\n    \r\n        // Right edge\r\n        ctx.lineTo(x + width, y + height - (isLast ? radius : 0));\r\n    \r\n        // Bottom-right corner\r\n        if (isLast) {\r\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        }\r\n    \r\n        // Bottom edge\r\n        ctx.lineTo(x + (isFirst ? radius : 0), y + height);\r\n    \r\n        // Bottom-left corner\r\n        if (isFirst) {\r\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        }\r\n    \r\n        // Left edge\r\n        ctx.lineTo(x, y + (isFirst ? radius : 0));\r\n    \r\n        // Top-left corner\r\n        if (isFirst) {\r\n            ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        }\r\n    \r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    function calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPayment, numberOfPayments) {\r\n        const amortizationData = []; // Array to store each period's data\r\n        let balance = principal;\r\n        let totalInterestPaid = 0;\r\n        let totalPrincipalPaid = 0;\r\n    \r\n        for (let i = 0; i < numberOfPayments; i++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = Math.min(monthlyPayment - interestPayment, balance); // Avoid overpayment\r\n            balance = Math.max(balance - principalPayment, 0); // Ensure no negative balance\r\n    \r\n            totalInterestPaid += interestPayment;\r\n            totalPrincipalPaid += principalPayment;\r\n    \r\n            amortizationData.push({\r\n                period: i + 1, // Start periods from 1\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: balance,\r\n            });\r\n    \r\n            if (balance <= 0) break; // Stop if the loan is fully paid\r\n        }\r\n    \r\n        return {\r\n            schedule: amortizationData,\r\n            balanceData: amortizationData.map(row => row.balance),\r\n            cumulativeInterestData: amortizationData.map((_, index) =>\r\n                amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.interest, 0)\r\n            ),\r\n            cumulativePrincipalData: amortizationData.map((_, index) =>\r\n                amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.principal, 0)\r\n            ),\r\n            totalInterestPaid,\r\n            totalPrincipalPaid,\r\n            totalAmountPaid: totalInterestPaid + totalPrincipalPaid,\r\n        };\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n// Example amortization data\r\nconst amortizationData = {\r\n    schedule: [\r\n        { principal: 200, interest: 50, balance: 19800 },\r\n        { principal: 201, interest: 49, balance: 19599 },\r\n        // Additional rows...\r\n    ],\r\n};\r\n\r\n// Populate the table\r\npopulateAmortizationTable(amortizationData);\r\n\r\n    \r\n\r\n    \r\n    \r\n    \r\n\r\n  \r\n\r\n\r\n// Draw Amortization Chart\r\nfunction drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex = null) {\r\n    const canvas = document.getElementById('amortizationChart');\r\n    const ctx = canvas.getContext('2d');\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    // Adjust canvas dimensions dynamically\r\n    const isSmallScreen = window.innerWidth < 700;\r\n    const canvasHeight = isSmallScreen ? 200 : 300;\r\n\r\n    canvas.width = canvas.parentElement.offsetWidth * dpr;\r\n    canvas.height = canvasHeight * dpr;\r\n    ctx.scale(dpr, dpr);\r\n\r\n    const width = canvas.width / dpr;\r\n    const height = canvas.height / dpr;\r\n\r\n    const padding = { top: 10, right: 20, bottom: 50, left: 50 };\r\n    const gridColor = '#d0d0d0';\r\n    const labelColor = '#505050';\r\n    const labelFont = 'normal 12px Arial';\r\n\r\n    const maxValue = Math.max(...balanceData, ...cumulativeInterestData, ...cumulativePrincipalData);\r\n    const yAxisMax = Math.ceil(maxValue / 5000) * 5000;\r\n\r\n    function getY(value) {\r\n        return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n    }\r\n\r\n    function getX(index) {\r\n        return padding.left + (index / (months - 1)) * (width - padding.left - padding.right);\r\n    }\r\n\r\n    const months = balanceData.length; // Dynamically set the length of the chart\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Y-axis labels and grid lines\r\n    ctx.font = labelFont;\r\n    ctx.textAlign = 'right';\r\n    ctx.fillStyle = labelColor;\r\n    ctx.strokeStyle = gridColor;\r\n\r\n    for (let i = 0; i <= yAxisMax; i += 5000) {\r\n        const y = getY(i);\r\n        ctx.beginPath();\r\n        ctx.moveTo(padding.left, y);\r\n        ctx.lineTo(width - padding.right, y);\r\n        ctx.stroke();\r\n        ctx.fillText(`$${i / 1000}K`, padding.left - 10, y + 5);\r\n    }\r\n\r\n    ctx.textAlign = 'center';\r\n\r\n    // X-axis labels and grid lines\r\n    for (let i = 0; i < months; i += 12) {\r\n        const x = getX(i);\r\n        const monthLabel = `${i} mo`;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, padding.top);\r\n        ctx.lineTo(x, height - padding.bottom);\r\n        ctx.stroke();\r\n\r\n        ctx.font = labelFont;\r\n        ctx.fillText(monthLabel, x, height - 10);\r\n    }\r\n\r\n    const xLast = getX(months - 1);\r\n    const lastMonthLabel = `${months} mo`;\r\n    ctx.fillText(lastMonthLabel, xLast, height - 10);\r\n\r\n    // Draw the chart lines\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(padding.left, padding.top, width - padding.left - padding.right, height - padding.top - padding.bottom);\r\n    ctx.clip();\r\n\r\n    // Draw Balance Line\r\n    ctx.strokeStyle = '#175134';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    for (let i = 0; i < balanceData.length; i++) {\r\n        const x = getX(i);\r\n        const y = getY(balanceData[i]);\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n    }\r\n    ctx.stroke();\r\n\r\n    // Draw Principal Line\r\n    ctx.strokeStyle = '#3EB721';\r\n    ctx.beginPath();\r\n    for (let i = 0; i < cumulativePrincipalData.length; i++) {\r\n        const x = getX(i);\r\n        const y = getY(cumulativePrincipalData[i]);\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n    }\r\n    ctx.stroke();\r\n\r\n    // Draw Interest Line\r\n    ctx.strokeStyle = '#91BBA6';\r\n    ctx.beginPath();\r\n    for (let i = 0; i < cumulativeInterestData.length; i++) {\r\n        const x = getX(i);\r\n        const y = getY(cumulativeInterestData[i]);\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n    }\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n\r\n    // Draw the right Y-axis line (final grid line)\r\n    ctx.strokeStyle = gridColor;\r\n    ctx.lineWidth = 1;\r\n    ctx.beginPath();\r\n    ctx.moveTo(width - padding.right, padding.top);\r\n    ctx.lineTo(width - padding.right, height - padding.bottom);\r\n    ctx.stroke();\r\n\r\n    // Draw hover effects if hoverIndex is provided\r\n    if (hoverIndex !== null) {\r\n        const x = getX(hoverIndex);\r\n        const balanceY = getY(balanceData[hoverIndex]);\r\n        const principalY = getY(cumulativePrincipalData[hoverIndex]);\r\n        const interestY = getY(cumulativeInterestData[hoverIndex]);\r\n\r\n        // Draw vertical hover line\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\r\n        ctx.lineWidth = 1;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, padding.top);\r\n        ctx.lineTo(x, height - padding.bottom);\r\n        ctx.stroke();\r\n\r\n        // Draw hover dots\r\n        const dotRadius = 4;\r\n        ctx.fillStyle = '#175134'; // Balance dot color\r\n        ctx.beginPath();\r\n        ctx.arc(x, balanceY, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = '#3EB721'; // Principal dot color\r\n        ctx.beginPath();\r\n        ctx.arc(x, principalY, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = '#91BBA6'; // Interest dot color\r\n        ctx.beginPath();\r\n        ctx.arc(x, interestY, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        // Update labels with hover values\r\n        const hoverPrincipal = cumulativePrincipalData[hoverIndex];\r\n        const hoverInterest = cumulativeInterestData[hoverIndex];\r\n        const hoverBalance = balanceData[hoverIndex];\r\n\r\n        updateHoverValues(hoverBalance, hoverInterest, hoverPrincipal);\r\n    }\r\n}\r\n\r\nfunction updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n    const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n    amortizationLabelsContainer.innerHTML = ''; // Clear existing labels\r\n\r\n    const labels = [\r\n        { label: 'Total Principal Paid', value: totalPrincipalPaid, color: '#3EB721' },\r\n        { label: 'Total Interest Paid', value: totalInterestPaid, color: '#91BBA6' },\r\n        { label: 'Balance (Total Paid)', value: totalAmountPaid, color: '#175134' }\r\n    ];\r\n\r\n    labels.forEach(item => {\r\n        const labelElement = document.createElement('div');\r\n        labelElement.classList.add('label-item');\r\n\r\n        const colorCircle = document.createElement('span');\r\n        colorCircle.classList.add('color-circle');\r\n        colorCircle.style.backgroundColor = item.color;\r\n\r\n        const labelText = document.createElement('span');\r\n        labelText.classList.add('label-name');\r\n        labelText.textContent = item.label;\r\n\r\n        const labelValue = document.createElement('span');\r\n        labelValue.classList.add('label-value');\r\n        labelValue.textContent = item.value.toLocaleString(undefined, {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        });\r\n\r\n        labelElement.appendChild(colorCircle);\r\n        labelElement.appendChild(labelText);\r\n        labelElement.appendChild(labelValue);\r\n\r\n        amortizationLabelsContainer.appendChild(labelElement);\r\n    });\r\n}\r\n\r\n\r\n\r\n    \r\n    // Add event listeners directly within the function\r\n    const canvas = document.getElementById('amortizationChart');\r\n    \r\n    canvas.addEventListener('mousemove', function(event) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const hoverIndex = Math.floor((x - padding.left) / (width - padding.left - padding.right) * (months - 1));\r\n        drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex);\r\n    });\r\n    \r\n    canvas.addEventListener('touchstart', function(event) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.touches[0].clientX - rect.left;\r\n        const hoverIndex = Math.floor((x - padding.left) / (width - padding.left - padding.right) * (months - 1));\r\n        drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex);\r\n    });\r\n    \r\n    canvas.addEventListener('touchmove', function(event) {\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = event.touches[0].clientX - rect.left;\r\n        const hoverIndex = Math.floor((x - padding.left) / (width - padding.left - padding.right) * (months - 1));\r\n        drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex);\r\n    });\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n    \r\n        const padding = { top: 30, right: 25, bottom: 30, left: 70 };\r\n    \r\n        if (x >= padding.left && x <= amortizationChartCanvas.offsetWidth - padding.right) {\r\n            const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n    \r\n                const startDate = new Date();\r\n                const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n                displayHoverDate(hoverDate);\r\n    \r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData,\r\n                    index\r\n                );\r\n            }\r\n        }\r\n    });\r\n    \r\n    // Add support for touchmove\r\n    amortizationChartCanvas.addEventListener('touchmove', handleTouchEvent);\r\n    amortizationChartCanvas.addEventListener('touchstart', handleTouchEvent);\r\n    \r\n\r\n    \r\n\r\n    // function handleTouchEvent(event) {\r\n    //     const rect = amortizationChartCanvas.getBoundingClientRect();\r\n    //     const touch = event.touches[0] || event.changedTouches[0];\r\n    //     const x = touch.clientX - rect.left;\r\n    //     const padding = { top: 30, right: 25, bottom: 30, left: 70 };\r\n    \r\n    //     if (x < padding.left || x > amortizationChartCanvas.offsetWidth - padding.right) {\r\n    //         // If touch is outside the chart, clear hover effects\r\n    //         revertValuesToTotals();\r\n    //         const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n    //         hoverDateContainer.textContent = ''; // Clear the hover date\r\n    //         drawAmortizationChart(\r\n    //             lastAmortizationData.balanceData,\r\n    //             lastAmortizationData.cumulativeInterestData,\r\n    //             lastAmortizationData.cumulativePrincipalData\r\n    //         );\r\n    //     } else {\r\n    //         const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    //         const index = Math.round(\r\n    //             ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n    //         );\r\n    \r\n    //         if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n    //             updateHoverValues(\r\n    //                 lastAmortizationData.balanceData[index],\r\n    //                 lastAmortizationData.cumulativeInterestData[index],\r\n    //                 lastAmortizationData.cumulativePrincipalData[index]\r\n    //             );\r\n    \r\n    //             const startDate = new Date();\r\n    //             const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n    //             displayHoverDate(hoverDate);\r\n    \r\n    //             drawAmortizationChart(\r\n    //                 lastAmortizationData.balanceData,\r\n    //                 lastAmortizationData.cumulativeInterestData,\r\n    //                 lastAmortizationData.cumulativePrincipalData,\r\n    //                 index\r\n    //             );\r\n    //         }\r\n    //     }\r\n    \r\n    //     event.preventDefault(); // Prevent default scrolling\r\n    // }\r\n\r\n\r\n    let activeHoverIndex = null; // Track the active hover index\r\n\r\nfunction handleTouchEvent(event) {\r\n    const rect = amortizationChartCanvas.getBoundingClientRect();\r\n    const touch = event.touches[0] || event.changedTouches[0];\r\n    const x = touch.clientX - rect.left;\r\n    const padding = { top: 30, right: 25, bottom: 30, left: 70 };\r\n\r\n    if (x < padding.left || x > amortizationChartCanvas.offsetWidth - padding.right) {\r\n        // If touch is outside the chart, clear hover effects\r\n        resetHover();\r\n    } else {\r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n        const index = Math.round(\r\n            ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1)\r\n        );\r\n\r\n        if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n            activeHoverIndex = index; // Keep track of the active hover index\r\n\r\n            updateHoverValues(\r\n                lastAmortizationData.balanceData[index],\r\n                lastAmortizationData.cumulativeInterestData[index],\r\n                lastAmortizationData.cumulativePrincipalData[index]\r\n            );\r\n\r\n            const startDate = new Date();\r\n            const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n            displayHoverDate(hoverDate);\r\n\r\n            drawAmortizationChart(\r\n                lastAmortizationData.balanceData,\r\n                lastAmortizationData.cumulativeInterestData,\r\n                lastAmortizationData.cumulativePrincipalData,\r\n                index\r\n            );\r\n        }\r\n    }\r\n\r\n    event.preventDefault(); // Prevent default scrolling\r\n}\r\n\r\nfunction resetHover() {\r\n    activeHoverIndex = null; // Clear the active hover index\r\n    revertValuesToTotals();\r\n\r\n    const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n    hoverDateContainer.textContent = ''; // Clear the hover date\r\n\r\n    drawAmortizationChart(\r\n        lastAmortizationData.balanceData,\r\n        lastAmortizationData.cumulativeInterestData,\r\n        lastAmortizationData.cumulativePrincipalData\r\n    );\r\n}\r\n\r\n// Add event listeners\r\namortizationChartCanvas.addEventListener('touchmove', handleTouchEvent);\r\namortizationChartCanvas.addEventListener('touchstart', handleTouchEvent);\r\n\r\namortizationChartCanvas.addEventListener('touchend', () => {\r\n    // Do not reset immediately; keep the hover effect\r\n    if (activeHoverIndex === null) {\r\n        resetHover();\r\n    }\r\n});\r\n\r\n// Add a global touchstart listener to detect touches outside the chart\r\ndocument.addEventListener('touchstart', (event) => {\r\n    const rect = amortizationChartCanvas.getBoundingClientRect();\r\n    const touch = event.touches[0];\r\n    if (!touch || (touch.clientX < rect.left || touch.clientX > rect.right || touch.clientY < rect.top || touch.clientY > rect.bottom)) {\r\n        resetHover(); // Reset only if the touch is outside the chart\r\n    }\r\n});\r\n\r\n    \r\n   \r\n   \r\n   \r\n    function displayHoverDate(date) {\r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        const month = date.toLocaleString('default', { month: 'long' }); // Full month name\r\n        const year = date.getFullYear();\r\n        hoverDateContainer.textContent = `${month} ${year}`;\r\n    }\r\n    \r\n\r\n\r\n  \r\n    amortizationChartCanvas.addEventListener('mouseout', () => {\r\n        revertValuesToTotals();\r\n    \r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        hoverDateContainer.textContent = ''; // Clear the hover date\r\n    \r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    });\r\n    \r\n    // Add touchend for mobile devices\r\n    amortizationChartCanvas.addEventListener('touchend', () => {\r\n        revertValuesToTotals();\r\n    \r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        hoverDateContainer.textContent = ''; // Clear the hover date\r\n    \r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData\r\n        );\r\n    });\r\n    \r\n\r\n\r\n\r\n    \r\n    function revertValuesToTotals() {\r\n        if (!lastAmortizationData) {\r\n            console.warn(\"No amortization data available to revert to totals.\");\r\n            return;\r\n        }\r\n    \r\n        console.log(\"Reverting to totals:\", {\r\n            totalInterestPaid: lastAmortizationData.totalInterestPaid,\r\n            totalPrincipalPaid: lastAmortizationData.totalPrincipalPaid\r\n        });\r\n    \r\n        const totalInterestPaid = lastAmortizationData.totalInterestPaid || 0;\r\n        const totalPrincipalPaid = lastAmortizationData.totalPrincipalPaid || 0;\r\n        const totalAmountPaid = totalInterestPaid + totalPrincipalPaid;\r\n    \r\n        updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid);\r\n    }\r\n    \r\n    \r\n  \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction calculateAmortizationData(loanAmount, interestRate, loanTerm, extraPayment = 0, paymentFrequency = \"monthly\") {\r\n    const monthlyInterestRate = interestRate / 100 / 12;\r\n    const numberOfPayments = loanTerm;\r\n\r\n    const amortizationData = [];\r\n    let balance = loanAmount; // Start with the loan amount\r\n\r\n    // Calculate the fixed monthly payment\r\n    const monthlyPayment =\r\n        loanAmount * monthlyInterestRate /\r\n        (1 - Math.pow(1 + monthlyInterestRate, -numberOfPayments));\r\n\r\n    // Determine the actual extra payment based on frequency\r\n    const adjustedExtraPayment = adjustPaymentForFrequency(extraPayment, paymentFrequency);\r\n\r\n    for (let i = 0; i < numberOfPayments; i++) {\r\n        const interestPayment = balance * monthlyInterestRate;\r\n        const principalPayment = Math.min(monthlyPayment - interestPayment, balance); // Avoid overpayment\r\n        let totalPrincipalPayment = principalPayment;\r\n\r\n        // Apply recurring extra payment directly to the principal\r\n        if (balance > 0) {\r\n            totalPrincipalPayment = Math.min(principalPayment + adjustedExtraPayment, balance);\r\n        }\r\n\r\n        balance = Math.max(balance - totalPrincipalPayment, 0); // Ensure no negative balance\r\n\r\n        amortizationData.push({\r\n            period: i + 1, // Start periods from 1\r\n            principal: totalPrincipalPayment,\r\n            interest: interestPayment,\r\n            balance: balance,\r\n        });\r\n\r\n        if (balance <= 0) break; // Stop if the loan is fully paid\r\n    }\r\n\r\n    const totalInterestPaid = amortizationData.reduce((sum, row) => sum + row.interest, 0);\r\n    const totalPrincipalPaid = amortizationData.reduce((sum, row) => sum + row.principal, 0);\r\n\r\n    return {\r\n        schedule: amortizationData,\r\n        balanceData: amortizationData.map(row => row.balance),\r\n        cumulativeInterestData: amortizationData.map((_, index) =>\r\n            amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.interest, 0)\r\n        ),\r\n        cumulativePrincipalData: amortizationData.map((_, index) =>\r\n            amortizationData.slice(0, index + 1).reduce((sum, row) => sum + row.principal, 0)\r\n        ),\r\n        totalInterestPaid,\r\n        totalPrincipalPaid,\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\nfunction populateAmortizationTable(amortizationData) {\r\n    const tableBody = document.getElementById('amortization-table-body');\r\n    tableBody.innerHTML = ''; // Clear existing rows\r\n\r\n    if (!amortizationData || amortizationData.schedule.length === 0) {\r\n        console.warn(\"No amortization data available to populate the table.\");\r\n        return;\r\n    }\r\n\r\n    amortizationData.schedule.forEach((row) => {\r\n        const tr = document.createElement('tr');\r\n\r\n        const dateCell = document.createElement('td');\r\n        dateCell.textContent = row.date;\r\n        tr.appendChild(dateCell);\r\n\r\n        const principalCell = document.createElement('td');\r\n        principalCell.textContent = `$${row.principal.toFixed(2)}`;\r\n        tr.appendChild(principalCell);\r\n\r\n        const interestCell = document.createElement('td');\r\n        interestCell.textContent = `$${row.interest.toFixed(2)}`;\r\n        tr.appendChild(interestCell);\r\n\r\n        const balanceCell = document.createElement('td');\r\n        balanceCell.textContent = `$${row.balance.toFixed(2)}`;\r\n        tr.appendChild(balanceCell);\r\n\r\n        tableBody.appendChild(tr);\r\n    });\r\n\r\n    console.log(\"Amortization table populated successfully.\");\r\n}\r\n\r\n\r\n\r\n});"],"names":["document","addEventListener","console","log","defaultValues","loanAmount","loanTerm","interestRate","originationFees","extraPayment","paymentFrequency","loanAmountInput","getElementById","loanTermInput","interestRateInput","originationFeesInput","extraPaymentInput","paymentFrequencyInput","amortizationChartCanvas","updateBtn","resetBtn","amortizationLabelsContainer","placeholder","value","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","forEach","input","event","key","preventDefault","lastAmortizationData","updateHorizontalStackedBarChart","principalAndInterest","frequency","canvas","error","ctx","getContext","parentWidth","parentElement","offsetWidth","width","height","clearRect","adjustedPrincipalAndInterest","adjustPaymentForFrequency","adjustedExtraPayment","data","colors","total","reduce","a","b","warn","chartHeight","yOffset","borderRadius","cumulativeWidth","activeSegments","filter","length","index","segmentWidth","fillStyle","isFirst","isLast","drawOuterRoundedRect","updateChartLabels","labelsContainer","innerHTML","labels","label","color","item","labelElement","createElement","classList","add","colorCircle","backgroundColor","labelText","textContent","labelValue","toLocaleString","undefined","appendChild","calculateAndDisplayResults","parseFloat","parseInt","netLoanAmount","calculateAmortizationData","monthlyInterestRate","monthlyPayment","Math","pow","updatePaymentBreakdown","paymentElement","frequencyLabel","options","selectedIndex","text","totalPayment","adjustedFrequencyLabel","toLowerCase","displayFrequencyLabel","concat","format","updateHoverValues","balance","interest","principal","labelValues","querySelectorAll","frequencyFactors","monthly","biweekly","weekly","updateLabels","resetInputs","tabPaymentBreakdown","tabAmortizationSchedule","paymentBreakdownContent","amortizationScheduleContent","showTab","tabName","display","remove","drawAmortizationChart","balanceData","cumulativeInterestData","cumulativePrincipalData","paymentFactor","updateStackedBarLabels","labelItem","labelName","x","y","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","calculateAmortizationSchedule","numberOfPayments","amortizationData","totalInterestPaid","totalPrincipalPaid","i","interestPayment","principalPayment","min","max","push","period","schedule","map","row","_","slice","sum","totalAmountPaid","populateAmortizationTable","hoverIndex","arguments","dpr","window","devicePixelRatio","isSmallScreen","innerWidth","canvasHeight","scale","padding","top","right","bottom","left","gridColor","labelColor","labelFont","maxValue","apply","_toConsumableArray","yAxisMax","ceil","getY","getX","months","font","textAlign","strokeStyle","stroke","fillText","monthLabel","xLast","lastMonthLabel","save","rect","clip","lineWidth","restore","balanceY","principalY","interestY","dotRadius","arc","PI","hoverPrincipal","hoverInterest","hoverBalance","updateAmortizationLabels","getBoundingClientRect","clientX","floor","touches","chartWidth","round","startDate","Date","hoverDate","setMonth","getMonth","displayHoverDate","handleTouchEvent","activeHoverIndex","touch","changedTouches","resetHover","revertValuesToTotals","hoverDateContainer","clientY","date","month","year","getFullYear","totalPrincipalPayment","tableBody","tr","dateCell","principalCell","toFixed","interestCell","balanceCell"],"sourceRoot":""}