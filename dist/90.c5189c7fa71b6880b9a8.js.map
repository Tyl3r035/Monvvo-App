{"version":3,"file":"90.c5189c7fa71b6880b9a8.js","mappings":";;;;;;;;;;;AACAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACtDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAE3C,SAASC,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC1B,IAAIC,OAAO;IACX,OAAO,YAAkB;MAAA,IAAAC,KAAA;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MACnBC,YAAY,CAACR,OAAO,CAAC;MACrBA,OAAO,GAAGS,UAAU,CAAC;QAAA,OAAMX,IAAI,CAACY,KAAK,CAACT,KAAI,EAAEI,IAAI,CAAC;MAAA,GAAEN,IAAI,CAAC;IAC5D,CAAC;EACL;;EAGA;EACA,IAAIY,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,EAAE;IAC1ClB,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EACnE;;EAEA;EACA,IAAMkB,cAAc,GAAGrB,QAAQ,CAACsB,cAAc,CAAC,YAAY,CAAC;EAC5D,IAAMC,sBAAsB,GAAGvB,QAAQ,CAACsB,cAAc,CAAC,qBAAqB,CAAC;EAC7E,IAAME,0BAA0B,GAAGxB,QAAQ,CAACsB,cAAc,CAAC,yBAAyB,CAAC;EACrF,IAAMG,aAAa,GAAGzB,QAAQ,CAACsB,cAAc,CAAC,WAAW,CAAC;EAC1D,IAAMI,iBAAiB,GAAG1B,QAAQ,CAACsB,cAAc,CAAC,eAAe,CAAC;EAClE,IAAMK,gBAAgB,GAAG3B,QAAQ,CAACsB,cAAc,CAAC,cAAc,CAAC;EAChE,IAAMM,eAAe,GAAG5B,QAAQ,CAACsB,cAAc,CAAC,aAAa,CAAC;EAC9D,IAAMO,eAAe,GAAG7B,QAAQ,CAACsB,cAAc,CAAC,aAAa,CAAC;EAC9D,IAAMQ,SAAS,GAAG9B,QAAQ,CAACsB,cAAc,CAAC,YAAY,CAAC;EACvD,IAAMS,QAAQ,GAAG/B,QAAQ,CAACsB,cAAc,CAAC,WAAW,CAAC;EACrD,IAAMU,MAAM,GAAGhC,QAAQ,CAACsB,cAAc,CAAC,eAAe,CAAC;EACvD,IAAMW,uBAAuB,GAAGjC,QAAQ,CAACsB,cAAc,CAAC,mBAAmB,CAAC;EAC5E,IAAMY,eAAe,GAAGlC,QAAQ,CAACsB,cAAc,CAAC,aAAa,CAAC;EAC9D,IAAMa,2BAA2B,GAAGnC,QAAQ,CAACsB,cAAc,CAAC,oBAAoB,CAAC;EAEjF,IAAMc,aAAa,GAAG;IAClBC,SAAS,EAAE,MAAM;IACjBC,iBAAiB,EAAE,KAAK;IACxBC,qBAAqB,EAAE,CAAC;IACxBC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,IAAI;IAClBC,WAAW,EAAE,GAAG;IAChBC,UAAU,EAAE,GAAG;IACfC,UAAU,EAAE;EAChB,CAAC;EAED,IAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC7CC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EAC3B,CAAC,CAAC;EAEF,IAAMC,gBAAgB,GAAG,CACrB7B,cAAc,EACdE,sBAAsB,EACtBC,0BAA0B,EAC1BC,aAAa,EACbC,iBAAiB,EACjBC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,CAClB;EAEDqB,gBAAgB,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;IAC9BA,KAAK,CAACnD,gBAAgB,CAAC,SAAS,EAAE,UAAUoD,KAAK,EAAE;MAC/C,IAAIA,KAAK,CAACC,GAAG,KAAK,GAAG,IAAID,KAAK,CAACC,GAAG,KAAK,GAAG,EAAE;QACxCD,KAAK,CAACE,cAAc,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,IAAIC,oBAAoB,GAAG,IAAI;EAE/BjC,sBAAsB,CAACtB,gBAAgB,CAAC,OAAO,EAAE,YAAY;IACzD,IAAMoC,SAAS,GAAGoB,UAAU,CAACpC,cAAc,CAACqC,KAAK,CAAC,IAAItB,aAAa,CAACC,SAAS;IAC7E,IAAMC,iBAAiB,GAAGmB,UAAU,CAAClC,sBAAsB,CAACmC,KAAK,CAAC,IAAI,CAAC;IACvE,IAAMnB,qBAAqB,GAAID,iBAAiB,GAAGD,SAAS,GAAI,GAAG;IACnEb,0BAA0B,CAACkC,KAAK,GAAGC,MAAM,CAACC,SAAS,CAACrB,qBAAqB,CAAC,GACpEA,qBAAqB,GACrBA,qBAAqB,CAACsB,OAAO,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEFrC,0BAA0B,CAACvB,gBAAgB,CAAC,OAAO,EAAE,YAAY;IAC7D,IAAMoC,SAAS,GAAGoB,UAAU,CAACpC,cAAc,CAACqC,KAAK,CAAC,IAAItB,aAAa,CAACC,SAAS;IAC7E,IAAME,qBAAqB,GAAGkB,UAAU,CAACjC,0BAA0B,CAACkC,KAAK,CAAC,IAAI,CAAC;IAC/E,IAAMpB,iBAAiB,GAAGwB,IAAI,CAACC,IAAI,CAAExB,qBAAqB,GAAG,GAAG,GAAIF,SAAS,CAAC;IAC9Ed,sBAAsB,CAACmC,KAAK,GAAGpB,iBAAiB;EACpD,CAAC,CAAC;EAEFjB,cAAc,CAACpB,gBAAgB,CAAC,OAAO,EAAE,YAAY;IACjD,IAAMoC,SAAS,GAAGoB,UAAU,CAACpC,cAAc,CAACqC,KAAK,CAAC,IAAItB,aAAa,CAACC,SAAS;IAC7E,IAAMC,iBAAiB,GAAGmB,UAAU,CAAClC,sBAAsB,CAACmC,KAAK,CAAC,IAAI,CAAC;IACvE,IAAMnB,qBAAqB,GAAID,iBAAiB,GAAGD,SAAS,GAAI,GAAG;IACnEb,0BAA0B,CAACkC,KAAK,GAAGC,MAAM,CAACC,SAAS,CAACrB,qBAAqB,CAAC,GACpEA,qBAAqB,GACrBA,qBAAqB,CAACsB,OAAO,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEF/B,SAAS,CAAC7B,gBAAgB,CAAC,OAAO,EAAE,UAAUoD,KAAK,EAAE;IACjDA,KAAK,CAACE,cAAc,CAAC,CAAC;IACtBrD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC6D,0BAA0B,CAAC,CAAC;EAChC,CAAC,CAAC;EAEFjC,QAAQ,CAAC9B,gBAAgB,CAAC,OAAO,EAAE,UAAUoD,KAAK,EAAE;IAChDA,KAAK,CAACE,cAAc,CAAC,CAAC;IACtBrD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC8D,WAAW,CAAC,CAAC;EACjB,CAAC,CAAC;EAEF,IAAMC,mBAAmB,GAAGlE,QAAQ,CAACsB,cAAc,CAAC,uBAAuB,CAAC;EAC5E,IAAM6C,uBAAuB,GAAGnE,QAAQ,CAACsB,cAAc,CAAC,2BAA2B,CAAC;EAEpF,IAAM8C,uBAAuB,GAAGpE,QAAQ,CAACsB,cAAc,CAAC,2BAA2B,CAAC;EACpF,IAAM+C,2BAA2B,GAAGrE,QAAQ,CAACsB,cAAc,CAAC,+BAA+B,CAAC;EAE5F,SAASgD,OAAOA,CAACC,OAAO,EAAE;IACtB,IAAIA,OAAO,KAAK,SAAS,EAAE;MACvBH,uBAAuB,CAACI,KAAK,CAACC,OAAO,GAAG,OAAO;MAC/CJ,2BAA2B,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;MAClDP,mBAAmB,CAACQ,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MAC/CR,uBAAuB,CAACO,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MACtD,IAAIpB,oBAAoB,EAAE;QACtB,IAAAqB,qBAAA,GAAoFrB,oBAAoB;UAAhGsB,2BAA2B,GAAAD,qBAAA,CAA3BC,2BAA2B;UAAEC,kBAAkB,GAAAF,qBAAA,CAAlBE,kBAAkB;UAAEC,UAAU,GAAAH,qBAAA,CAAVG,UAAU;UAAEC,UAAU,GAAAJ,qBAAA,CAAVI,UAAU;QAC/EC,+BAA+B,CAACJ,2BAA2B,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,UAAU,CAAC;MAC5G;IACJ,CAAC,MAAM,IAAIV,OAAO,KAAK,cAAc,EAAE;MACnCH,uBAAuB,CAACI,KAAK,CAACC,OAAO,GAAG,MAAM;MAC9CJ,2BAA2B,CAACG,KAAK,CAACC,OAAO,GAAG,OAAO;MACnDP,mBAAmB,CAACQ,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;MAClDT,uBAAuB,CAACO,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACnD,IAAInB,oBAAoB,EAAE;QACtB,IAAA2B,sBAAA,GAAiI3B,oBAAoB;UAA7I4B,WAAW,GAAAD,sBAAA,CAAXC,WAAW;UAAEC,sBAAsB,GAAAF,sBAAA,CAAtBE,sBAAsB;UAAEC,uBAAuB,GAAAH,sBAAA,CAAvBG,uBAAuB;UAAEC,iBAAiB,GAAAJ,sBAAA,CAAjBI,iBAAiB;UAAEC,kBAAkB,GAAAL,sBAAA,CAAlBK,kBAAkB;UAAEC,eAAe,GAAAN,sBAAA,CAAfM,eAAe;QAC5HC,qBAAqB,CAACN,WAAW,EAAEC,sBAAsB,EAAEC,uBAAuB,CAAC;QACnFK,wBAAwB,CAACJ,iBAAiB,EAAEC,kBAAkB,EAAEC,eAAe,CAAC;MACpF;IACJ;EACJ;EAEAvB,mBAAmB,CAACjE,gBAAgB,CAAC,OAAO,EAAE;IAAA,OAAMqE,OAAO,CAAC,SAAS,CAAC;EAAA,EAAC;EACvEH,uBAAuB,CAAClE,gBAAgB,CAAC,OAAO,EAAE;IAAA,OAAMqE,OAAO,CAAC,cAAc,CAAC;EAAA,EAAC;;EAKpF;EACA,IAAMsB,gBAAgB,GAAG5F,QAAQ,CAAC6F,aAAa,CAAC,oBAAoB,CAAC;EAErE,IAAIC,aAAa;EACjB,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIC,cAAc,GAAG,CAAC;EAEtB9E,MAAM,CAACjB,gBAAgB,CAAC,QAAQ,EAAE,YAAM;IACpC;IACAgG,wBAAwB,CAAC,CAAC;;IAE1B;IACAlF,YAAY,CAAC+E,aAAa,CAAC;;IAE3B;IACAA,aAAa,GAAG9E,UAAU,CAAC,YAAM;MAC7B,IAAAkF,qBAAA,GAA0BjE,uBAAuB,CAACkE,qBAAqB,CAAC,CAAC;QAAjEC,KAAK,GAAAF,qBAAA,CAALE,KAAK;QAAEC,MAAM,GAAAH,qBAAA,CAANG,MAAM;;MAErB;MACA,IAAID,KAAK,KAAKL,aAAa,IAAIM,MAAM,KAAKL,cAAc,EAAE;QACtD;MACJ;MAEAD,aAAa,GAAGK,KAAK;MACrBJ,cAAc,GAAGK,MAAM;MAEvBnG,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC6D,0BAA0B,CAAC,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;EAEF,SAASiC,wBAAwBA,CAAA,EAAG;IAChC,IAAIhE,uBAAuB,IAAI2D,gBAAgB,EAAE;MAC7C,IAAAU,sBAAA,GAA0BrE,uBAAuB,CAACkE,qBAAqB,CAAC,CAAC;QAAjEC,KAAK,GAAAE,sBAAA,CAALF,KAAK;QAAEC,MAAM,GAAAC,sBAAA,CAAND,MAAM;MACrBT,gBAAgB,CAACpB,KAAK,CAAC6B,MAAM,MAAAE,MAAA,CAAMF,MAAM,OAAI;MAC7CT,gBAAgB,CAACpB,KAAK,CAAC4B,KAAK,MAAAG,MAAA,CAAMH,KAAK,OAAI;IAC/C;EACJ;EAMI,SAASpC,0BAA0BA,CAAA,EAAG;IAClC9D,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IAEjD,IAAMkC,SAAS,GAAGoB,UAAU,CAACpC,cAAc,CAACqC,KAAK,CAAC,IAAItB,aAAa,CAACC,SAAS;IAC7E,IAAMC,iBAAiB,GAAGmB,UAAU,CAAClC,sBAAsB,CAACmC,KAAK,CAAC;IAClE,IAAMnB,qBAAqB,GAAGkB,UAAU,CAACjC,0BAA0B,CAACkC,KAAK,CAAC;IAE1E,IAAI8C,WAAW;IACf,IAAI,CAACC,KAAK,CAAClE,qBAAqB,CAAC,IAAIA,qBAAqB,GAAG,CAAC,EAAE;MAC5DiE,WAAW,GAAG1C,IAAI,CAACC,IAAI,CAAExB,qBAAqB,GAAG,GAAG,GAAIF,SAAS,CAAC;MAClEd,sBAAsB,CAACmC,KAAK,GAAG8C,WAAW;IAC9C,CAAC,MAAM,IAAI,CAACC,KAAK,CAACnE,iBAAiB,CAAC,EAAE;MAClCkE,WAAW,GAAGlE,iBAAiB;MAC/B,IAAMoE,eAAe,GAAIpE,iBAAiB,GAAGD,SAAS,GAAI,GAAG;MAC7Db,0BAA0B,CAACkC,KAAK,GAAGC,MAAM,CAACC,SAAS,CAAC8C,eAAe,CAAC,GAC9DA,eAAe,GACfA,eAAe,CAAC7C,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACH2C,WAAW,GAAGpE,aAAa,CAACE,iBAAiB;IACjD;IAEA,IAAMqE,SAAS,GAAGtE,SAAS,GAAGmE,WAAW;IACzC,IAAMhE,QAAQ,GAAGoE,QAAQ,CAACnF,aAAa,CAACiC,KAAK,CAAC,IAAItB,aAAa,CAACI,QAAQ;IACxE,IAAMC,YAAY,GAAGgB,UAAU,CAAC/B,iBAAiB,CAACgC,KAAK,CAAC,IAAItB,aAAa,CAACK,YAAY;IACtF,IAAMC,WAAW,GAAGe,UAAU,CAAC9B,gBAAgB,CAAC+B,KAAK,CAAC,IAAItB,aAAa,CAACM,WAAW;IACnF,IAAMC,UAAU,GAAGc,UAAU,CAAC7B,eAAe,CAAC8B,KAAK,CAAC,IAAItB,aAAa,CAACO,UAAU;IAChF,IAAMC,UAAU,GAAGa,UAAU,CAAC5B,eAAe,CAAC6B,KAAK,CAAC,IAAItB,aAAa,CAACQ,UAAU;IAEhF,IAAMiE,mBAAmB,GAAIpE,YAAY,GAAG,GAAG,GAAI,EAAE;IACrD,IAAMqE,gBAAgB,GAAGtE,QAAQ,GAAG,EAAE;IACtC,IAAMsC,2BAA2B,GAAG6B,SAAS,GAAGE,mBAAmB,GAAG/C,IAAI,CAACiD,GAAG,CAAC,CAAC,GAAGF,mBAAmB,EAAEC,gBAAgB,CAAC,IAAIhD,IAAI,CAACiD,GAAG,CAAC,CAAC,GAAGF,mBAAmB,EAAEC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAErL,IAAM/B,kBAAkB,GAAGrC,WAAW;IACtC,IAAMsC,UAAU,GAAGrC,UAAU;IAC7B,IAAMsC,UAAU,GAAGrC,UAAU;IAE7B,IAAMoE,mBAAmB,GAAGlC,2BAA2B,GAAGC,kBAAkB,GAAGC,UAAU,GAAGC,UAAU;IAEtGC,+BAA+B,CAACJ,2BAA2B,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,UAAU,CAAC;IACxGgC,YAAY,CAACnC,2BAA2B,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,UAAU,CAAC;IAErF,IAAMiC,qBAAqB,GAAGlH,QAAQ,CAAC6F,aAAa,CAAC,kBAAkB,CAAC;IACxEqB,qBAAqB,CAACC,SAAS,OAAAZ,MAAA,CAAO1D,SAAS,CAACuE,MAAM,CAACJ,mBAAmB,CAAC,CAAE;IAC7EE,qBAAqB,CAAC1C,KAAK,CAAC6C,UAAU,GAAG,WAAW;IACpDH,qBAAqB,CAAC1C,KAAK,CAAC8C,UAAU,GAAG,KAAK;IAC9CJ,qBAAqB,CAAC1C,KAAK,CAAC+C,KAAK,GAAG,MAAM;IAE1C,IAAMC,gBAAgB,GAAGC,6BAA6B,CAACd,SAAS,EAAEE,mBAAmB,EAAE/B,2BAA2B,EAAEgC,gBAAgB,CAAC;IACrIpB,qBAAqB,CAAC8B,gBAAgB,CAACpC,WAAW,EAAEoC,gBAAgB,CAACnC,sBAAsB,EAAEmC,gBAAgB,CAAClC,uBAAuB,CAAC;IACtIK,wBAAwB,CAAC6B,gBAAgB,CAACjC,iBAAiB,EAAEiC,gBAAgB,CAAChC,kBAAkB,EAAEgC,gBAAgB,CAAC/B,eAAe,CAAC;IAEnIjC,oBAAoB,GAAG;MACnB4B,WAAW,EAAEoC,gBAAgB,CAACpC,WAAW;MACzCC,sBAAsB,EAAEmC,gBAAgB,CAACnC,sBAAsB;MAC/DC,uBAAuB,EAAEkC,gBAAgB,CAAClC,uBAAuB;MACjEC,iBAAiB,EAAEiC,gBAAgB,CAACjC,iBAAiB;MACrDC,kBAAkB,EAAEgC,gBAAgB,CAAChC,kBAAkB;MACvDC,eAAe,EAAE+B,gBAAgB,CAAC/B,eAAe;MACjDX,2BAA2B,EAA3BA,2BAA2B;MAC3BC,kBAAkB,EAAlBA,kBAAkB;MAClBC,UAAU,EAAVA,UAAU;MACVC,UAAU,EAAVA;IACJ,CAAC;EACL;EAEA,SAASyC,iBAAiBA,CAACC,OAAO,EAAEC,QAAQ,EAAEjB,SAAS,EAAE;IACrD,IAAMkB,WAAW,GAAG1F,2BAA2B,CAAC2F,gBAAgB,CAAC,cAAc,CAAC;IAChF,IAAID,WAAW,CAAClH,MAAM,KAAK,CAAC,EAAE;MAC1BkH,WAAW,CAAC,CAAC,CAAC,CAACE,WAAW,GAAGlF,SAAS,CAACuE,MAAM,CAACQ,QAAQ,CAAC;MACvDC,WAAW,CAAC,CAAC,CAAC,CAACE,WAAW,GAAGlF,SAAS,CAACuE,MAAM,CAACT,SAAS,CAAC;MACxDkB,WAAW,CAAC,CAAC,CAAC,CAACE,WAAW,GAAGlF,SAAS,CAACuE,MAAM,CAACO,OAAO,CAAC;IAC1D;EACJ;EAEA,SAASK,oBAAoBA,CAAA,EAAG;IAC5B,IAAAC,sBAAA,GAAmEzE,oBAAoB;MAA/E+B,iBAAiB,GAAA0C,sBAAA,CAAjB1C,iBAAiB;MAAEC,kBAAkB,GAAAyC,sBAAA,CAAlBzC,kBAAkB;MAAEC,eAAe,GAAAwC,sBAAA,CAAfxC,eAAe;IAC9DiC,iBAAiB,CAACjC,eAAe,EAAEF,iBAAiB,EAAEC,kBAAkB,CAAC;EAC7E;EAEA,SAASvB,WAAWA,CAAA,EAAG;IACnB/D,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IAEjDkB,cAAc,CAACqC,KAAK,GAAGtB,aAAa,CAACC,SAAS;IAC9Cd,sBAAsB,CAACmC,KAAK,GAAGtB,aAAa,CAACE,iBAAiB;IAC9Dd,0BAA0B,CAACkC,KAAK,GAAGtB,aAAa,CAACG,qBAAqB;IACtEd,aAAa,CAACiC,KAAK,GAAGtB,aAAa,CAACI,QAAQ;IAC5Cd,iBAAiB,CAACgC,KAAK,GAAGtB,aAAa,CAACK,YAAY;IACpDd,gBAAgB,CAAC+B,KAAK,GAAGtB,aAAa,CAACM,WAAW;IAClDd,eAAe,CAAC8B,KAAK,GAAGtB,aAAa,CAACO,UAAU;IAChDd,eAAe,CAAC6B,KAAK,GAAGtB,aAAa,CAACQ,UAAU;IAEhDoB,0BAA0B,CAAC,CAAC;EAChC;EAEA,SAASkE,eAAeA,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEjC,KAAK,EAAEC,MAAM,EAAEiC,MAAM,EAAE;IACvDH,GAAG,CAACI,SAAS,CAAC,CAAC;IACfJ,GAAG,CAACK,MAAM,CAACJ,CAAC,GAAGE,MAAM,EAAED,CAAC,CAAC;IACzBF,GAAG,CAACM,MAAM,CAACL,CAAC,GAAGhC,KAAK,GAAGkC,MAAM,EAAED,CAAC,CAAC;IACjCF,GAAG,CAACO,gBAAgB,CAACN,CAAC,GAAGhC,KAAK,EAAEiC,CAAC,EAAED,CAAC,GAAGhC,KAAK,EAAEiC,CAAC,GAAGC,MAAM,CAAC;IACzDH,GAAG,CAACM,MAAM,CAACL,CAAC,GAAGhC,KAAK,EAAEiC,CAAC,GAAGhC,MAAM,GAAGiC,MAAM,CAAC;IAC1CH,GAAG,CAACO,gBAAgB,CAACN,CAAC,GAAGhC,KAAK,EAAEiC,CAAC,GAAGhC,MAAM,EAAE+B,CAAC,GAAGhC,KAAK,GAAGkC,MAAM,EAAED,CAAC,GAAGhC,MAAM,CAAC;IAC3E8B,GAAG,CAACM,MAAM,CAACL,CAAC,GAAGE,MAAM,EAAED,CAAC,GAAGhC,MAAM,CAAC;IAClC8B,GAAG,CAACO,gBAAgB,CAACN,CAAC,EAAEC,CAAC,GAAGhC,MAAM,EAAE+B,CAAC,EAAEC,CAAC,GAAGhC,MAAM,GAAGiC,MAAM,CAAC;IAC3DH,GAAG,CAACM,MAAM,CAACL,CAAC,EAAEC,CAAC,GAAGC,MAAM,CAAC;IACzBH,GAAG,CAACO,gBAAgB,CAACN,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAGE,MAAM,EAAED,CAAC,CAAC;IACzCF,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACS,IAAI,CAAC,CAAC;EACd;EAEA,SAAS1D,+BAA+BA,CAAC2D,oBAAoB,EAAEnG,WAAW,EAAEoG,GAAG,EAAEC,GAAG,EAAE;IAClF,IAAMZ,GAAG,GAAGnG,MAAM,CAACgH,UAAU,CAAC,IAAI,CAAC;IACnC,IAAMC,WAAW,GAAGjH,MAAM,CAACkH,aAAa,CAACC,WAAW;IAEpDnH,MAAM,CAACoE,KAAK,GAAG6C,WAAW;IAC1BjH,MAAM,CAACqE,MAAM,GAAG,GAAG;IAEnB8B,GAAG,CAACiB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEpH,MAAM,CAACoE,KAAK,EAAEpE,MAAM,CAACqE,MAAM,CAAC;IAEhD,IAAMgD,IAAI,GAAG,CAACR,oBAAoB,EAAEnG,WAAW,EAAEoG,GAAG,EAAEC,GAAG,CAAC;IAC1D,IAAMO,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAE3D,IAAMC,WAAW,GAAG,EAAE;IACtB,IAAMC,UAAU,GAAGxH,MAAM,CAACoE,KAAK;IAC/B,IAAMqD,KAAK,GAAGJ,IAAI,CAACK,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKD,CAAC,GAAGC,CAAC;IAAA,GAAE,CAAC,CAAC;IAC7C,IAAMC,QAAQ,GAAG/F,IAAI,CAACgG,GAAG,CAACL,KAAK,EAAE,CAAC,CAAC;IAEnC,IAAMM,OAAO,GAAG,CAAC;IACjB,IAAMC,OAAO,GAAGhI,MAAM,CAACqE,MAAM,GAAG,CAAC;IACjC,IAAM4D,YAAY,GAAG,CAAC;IACtB,IAAMC,GAAG,GAAG,CAAC;IAEb/B,GAAG,CAACgC,IAAI,CAAC,CAAC;IACVjC,eAAe,CAACC,GAAG,EAAE4B,OAAO,EAAEC,OAAO,GAAGT,WAAW,GAAG,CAAC,EAAEC,UAAU,EAAED,WAAW,EAAEU,YAAY,CAAC;IAE/F,IAAIG,eAAe,GAAG,CAAC;IAEvBf,IAAI,CAAClG,OAAO,CAAC,UAACO,KAAK,EAAE2G,KAAK,EAAK;MAC3B,IAAMC,QAAQ,GAAI5G,KAAK,GAAGmG,QAAQ,GAAIL,UAAU,GAAGU,GAAG;MACtD/B,GAAG,CAACoC,SAAS,GAAGjB,MAAM,CAACe,KAAK,CAAC;MAC7BlC,GAAG,CAACqC,QAAQ,CAACT,OAAO,GAAGK,eAAe,EAAEJ,OAAO,GAAGT,WAAW,GAAG,CAAC,EAAEe,QAAQ,EAAEf,WAAW,CAAC;MACzFa,eAAe,IAAIE,QAAQ,GAAGJ,GAAG;IACrC,CAAC,CAAC;IAEF/B,GAAG,CAACsC,OAAO,CAAC,CAAC;EACjB;EAEA,SAASxD,YAAYA,CAAC4B,oBAAoB,EAAEnG,WAAW,EAAEoG,GAAG,EAAEC,GAAG,EAAE;IAC/D,IAAM2B,MAAM,GAAG,CACX;MAAEC,KAAK,EAAE,sBAAsB;MAAEjH,KAAK,EAAEmF,oBAAoB;MAAEtB,KAAK,EAAE;IAAU,CAAC,EAChF;MAAEoD,KAAK,EAAE,cAAc;MAAEjH,KAAK,EAAEhB,WAAW;MAAE6E,KAAK,EAAE;IAAU,CAAC,EAC/D;MAAEoD,KAAK,EAAE,KAAK;MAAEjH,KAAK,EAAEoF,GAAG;MAAEvB,KAAK,EAAE;IAAU,CAAC,EAC9C;MAAEoD,KAAK,EAAE,KAAK;MAAEjH,KAAK,EAAEqF,GAAG;MAAExB,KAAK,EAAE;IAAU,CAAC,CACjD;IAEDrF,eAAe,CAAC0I,SAAS,GAAG,EAAE,CAAC,CAAC;;IAEhCF,MAAM,CAACvH,OAAO,CAAC,UAAA0H,IAAI,EAAI;MACnB,IAAMC,YAAY,GAAG9K,QAAQ,CAAC+K,aAAa,CAAC,KAAK,CAAC;MAClDD,YAAY,CAACpG,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACxCmG,YAAY,CAACtG,KAAK,CAAC6C,UAAU,GAAG,yBAAyB;MACzDyD,YAAY,CAACtG,KAAK,CAAC8C,UAAU,GAAG,KAAK;MACrCwD,YAAY,CAACtG,KAAK,CAAC+C,KAAK,GAAG,SAAS;MAEpC,IAAMyD,WAAW,GAAGhL,QAAQ,CAAC+K,aAAa,CAAC,MAAM,CAAC;MAClDC,WAAW,CAACtG,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;MACzCqG,WAAW,CAACxG,KAAK,CAACyG,eAAe,GAAGJ,IAAI,CAACtD,KAAK;MAE9C,IAAM2D,SAAS,GAAGlL,QAAQ,CAAC+K,aAAa,CAAC,MAAM,CAAC;MAChDG,SAAS,CAACxG,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACrCuG,SAAS,CAACnD,WAAW,GAAG8C,IAAI,CAACF,KAAK;MAElC,IAAMQ,UAAU,GAAGnL,QAAQ,CAAC+K,aAAa,CAAC,MAAM,CAAC;MACjDI,UAAU,CAACzG,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;MACvCwG,UAAU,CAACpD,WAAW,MAAAxB,MAAA,CAAM1D,SAAS,CAACuE,MAAM,CAACyD,IAAI,CAACnH,KAAK,CAAC,CAAE;MAE1DoH,YAAY,CAACM,WAAW,CAACJ,WAAW,CAAC;MACrCF,YAAY,CAACM,WAAW,CAACF,SAAS,CAAC;MACnCJ,YAAY,CAACM,WAAW,CAACD,UAAU,CAAC;MAEpCjJ,eAAe,CAACkJ,WAAW,CAACN,YAAY,CAAC;IAC7C,CAAC,CAAC;EACN;EAEA,SAASrD,6BAA6BA,CAACd,SAAS,EAAEE,mBAAmB,EAAE/B,2BAA2B,EAAEgC,gBAAgB,EAAE;IAClH,IAAM1B,WAAW,GAAG,EAAE;IACtB,IAAMC,sBAAsB,GAAG,EAAE;IACjC,IAAMC,uBAAuB,GAAG,EAAE;IAElC,IAAIqC,OAAO,GAAGhB,SAAS;IACvB,IAAI0E,kBAAkB,GAAG,CAAC;IAC1B,IAAIC,mBAAmB,GAAG,CAAC;IAE3B,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAIzE,gBAAgB,EAAEyE,KAAK,EAAE,EAAE;MACpD,IAAMC,eAAe,GAAG7D,OAAO,GAAGd,mBAAmB;MACrD,IAAM4E,gBAAgB,GAAG3G,2BAA2B,GAAG0G,eAAe;MACtE7D,OAAO,IAAI8D,gBAAgB;MAE3BJ,kBAAkB,IAAIG,eAAe;MACrCF,mBAAmB,IAAIG,gBAAgB;MAEvCrG,WAAW,CAACsG,IAAI,CAAC/D,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,CAAC,CAAC;MAC3CtC,sBAAsB,CAACqG,IAAI,CAACL,kBAAkB,CAAC;MAC/C/F,uBAAuB,CAACoG,IAAI,CAACJ,mBAAmB,CAAC;IACrD;IAEA,IAAM/F,iBAAiB,GAAG8F,kBAAkB;IAC5C,IAAM7F,kBAAkB,GAAG8F,mBAAmB;IAC9C,IAAM7F,eAAe,GAAGX,2BAA2B,GAAGgC,gBAAgB;IAEtE,OAAO;MAAE1B,WAAW,EAAXA,WAAW;MAAEC,sBAAsB,EAAtBA,sBAAsB;MAAEC,uBAAuB,EAAvBA,uBAAuB;MAAEC,iBAAiB,EAAjBA,iBAAiB;MAAEC,kBAAkB,EAAlBA,kBAAkB;MAAEC,eAAe,EAAfA;IAAgB,CAAC;EACnI;EAEA,SAASC,qBAAqBA,CAACN,WAAW,EAAEC,sBAAsB,EAAEC,uBAAuB,EAAE;IACzF,IAAM6C,GAAG,GAAGlG,uBAAuB,CAAC+G,UAAU,CAAC,IAAI,CAAC;IACpD,IAAM2C,GAAG,GAAGzK,MAAM,CAAC0K,gBAAgB,IAAI,CAAC;;IAExC;IACA,IAAIvF,MAAM;IACV,IAAInF,MAAM,CAAC2K,UAAU,GAAG,GAAG,EAAE;MACzBxF,MAAM,GAAG,GAAG,CAAC,CAAC;IAClB,CAAC,MAAM;MACHA,MAAM,GAAG,GAAG,CAAC,CAAC;IAClB;IAEApE,uBAAuB,CAACuC,KAAK,CAAC4B,KAAK,GAAG,MAAM;IAC5CnE,uBAAuB,CAACuC,KAAK,CAAC6B,MAAM,MAAAE,MAAA,CAAMF,MAAM,OAAI;IAEpD,IAAMD,KAAK,GAAGnE,uBAAuB,CAACkH,WAAW;IACjDlH,uBAAuB,CAACmE,KAAK,GAAGA,KAAK,GAAGuF,GAAG;IAC3C1J,uBAAuB,CAACoE,MAAM,GAAGA,MAAM,GAAGsF,GAAG;IAE7C,IAAIA,GAAG,GAAG,CAAC,EAAE;MACTxD,GAAG,CAAC2D,KAAK,CAACH,GAAG,EAAEA,GAAG,CAAC;IACvB;IAEAxD,GAAG,CAACiB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEhD,KAAK,GAAGuF,GAAG,EAAEtF,MAAM,GAAGsF,GAAG,CAAC;IAE9C,IAAMI,MAAM,GAAG3G,WAAW,CAACzE,MAAM;IACjC,IAAMqL,UAAU,GAAGlI,IAAI,CAACgG,GAAG,CAAA7I,KAAA,CAAR6C,IAAI,EAAAmI,kBAAA,CAAQ7G,WAAW,EAAC;IAC3C,IAAM8G,aAAa,GAAGpI,IAAI,CAACgG,GAAG,CAAA7I,KAAA,CAAR6C,IAAI,EAAAmI,kBAAA,CAAQ5G,sBAAsB,EAAAkB,MAAA,CAAA0F,kBAAA,CAAK3G,uBAAuB,GAAC;IAErF,IAAM6G,QAAQ,GAAGrI,IAAI,CAACgG,GAAG,CAACkC,UAAU,EAAEE,aAAa,CAAC;IAEpD,IAAME,cAAc,GAAG,CAAC,GAAG,EAAE;IAC7B,IAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;IAE5D,IAAMC,SAAS,GAAG,SAAS;IAC3B,IAAMC,UAAU,GAAG,SAAS;IAC5B,IAAMC,SAAS,GAAG,gBAAgB;IAClC,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAG5C5E,GAAG,CAAC6E,IAAI,GAAGJ,SAAS;IACpBzE,GAAG,CAAC8E,SAAS,GAAG,OAAO;IAEvB,SAASC,IAAIA,CAACxJ,KAAK,EAAE;MACjB,OAAO2C,MAAM,GAAGgG,OAAO,CAACG,MAAM,GAAI9I,KAAK,GAAGyI,QAAQ,IAAK9F,MAAM,GAAGgG,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACG,MAAM,CAAC;IACjG;IAEA,SAASW,IAAIA,CAAC9C,KAAK,EAAE;MACjB,OAAOgC,OAAO,CAACI,IAAI,GAAIpC,KAAK,GAAG0B,MAAM,IAAK3F,KAAK,GAAGiG,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACE,KAAK,CAAC;IACnF;IACArL,MAAM,CAACjB,gBAAgB,CAAC,QAAQ,EAAE,YAAM;MACpCyF,qBAAqB,CAACN,WAAW,EAAEC,sBAAsB,EAAEC,uBAAuB,CAAC;IACvF,CAAC,CAAC;;IAEF;IACA6C,GAAG,CAACiF,WAAW,GAAGV,SAAS;IAC3BvE,GAAG,CAACkF,SAAS,GAAG,CAAC;IAEjB,IAAMC,cAAc,GAAG,MAAM;IAC7B,KAAK,IAAIC,MAAM,GAAGD,cAAc,EAAEC,MAAM,GAAGpB,QAAQ,EAAEoB,MAAM,IAAID,cAAc,EAAE;MAC3E,IAAMjF,CAAC,GAAG6E,IAAI,CAACK,MAAM,CAAC;MACtBpF,GAAG,CAACI,SAAS,CAAC,CAAC;MACfJ,GAAG,CAACK,MAAM,CAAC6D,OAAO,CAACI,IAAI,EAAEpE,CAAC,CAAC;MAC3BF,GAAG,CAACM,MAAM,CAACrC,KAAK,GAAGiG,OAAO,CAACE,KAAK,EAAElE,CAAC,CAAC;MACpCF,GAAG,CAACqF,MAAM,CAAC,CAAC;MAEZrF,GAAG,CAACoC,SAAS,GAAGoC,UAAU;MAC1BxE,GAAG,CAACsF,QAAQ,KAAAlH,MAAA,CAAK,CAACgH,MAAM,GAAG,IAAI,EAAE1J,OAAO,CAAC,CAAC,CAAC,QAAKwI,OAAO,CAACI,IAAI,GAAG,EAAE,EAAEpE,CAAC,GAAG,CAAC,CAAC;IAC7E;;IAEA;IACAF,GAAG,CAAC8E,SAAS,GAAG,QAAQ;IAExB,KAAK,IAAIS,CAAC,GAAGtB,cAAc,EAAEsB,CAAC,GAAG3B,MAAM,EAAE2B,CAAC,IAAItB,cAAc,EAAE;MAC1D,IAAMhE,CAAC,GAAG+E,IAAI,CAACO,CAAC,CAAC;MACjBvF,GAAG,CAACI,SAAS,CAAC,CAAC;MACfJ,GAAG,CAACK,MAAM,CAACJ,CAAC,EAAEiE,OAAO,CAACC,GAAG,CAAC;MAC1BnE,GAAG,CAACM,MAAM,CAACL,CAAC,EAAE/B,MAAM,GAAGgG,OAAO,CAACG,MAAM,CAAC;MACtCrE,GAAG,CAACqF,MAAM,CAAC,CAAC;MAEZ,IAAMG,SAAS,GAAGd,WAAW,GAAIa,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC;MAChDvF,GAAG,CAACoC,SAAS,GAAGoC,UAAU;MAC1BxE,GAAG,CAACsF,QAAQ,CAACE,SAAS,EAAEvF,CAAC,EAAE/B,MAAM,GAAG,CAAC,CAAC;IAC1C;;IAEA;IACA8B,GAAG,CAACI,SAAS,CAAC,CAAC;IACfJ,GAAG,CAACiF,WAAW,GAAG,SAAS;IAC3BjF,GAAG,CAACkF,SAAS,GAAG,CAAC;IACjBlF,GAAG,CAACK,MAAM,CAAC2E,IAAI,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC9H,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,KAAK,IAAIsI,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG3B,MAAM,EAAE2B,EAAC,EAAE,EAAE;MAC7BvF,GAAG,CAACM,MAAM,CAAC0E,IAAI,CAACO,EAAC,CAAC,EAAER,IAAI,CAAC9H,WAAW,CAACsI,EAAC,CAAC,CAAC,CAAC;IAC7C;IACAvF,GAAG,CAACqF,MAAM,CAAC,CAAC;;IAEZ;IACArF,GAAG,CAACI,SAAS,CAAC,CAAC;IACfJ,GAAG,CAACiF,WAAW,GAAG,SAAS;IAC3BjF,GAAG,CAACkF,SAAS,GAAG,GAAG;IACnBlF,GAAG,CAACK,MAAM,CAAC2E,IAAI,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC7H,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,KAAK,IAAIqI,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG3B,MAAM,EAAE2B,GAAC,EAAE,EAAE;MAC7BvF,GAAG,CAACM,MAAM,CAAC0E,IAAI,CAACO,GAAC,CAAC,EAAER,IAAI,CAAC7H,sBAAsB,CAACqI,GAAC,CAAC,CAAC,CAAC;IACxD;IACAvF,GAAG,CAACqF,MAAM,CAAC,CAAC;;IAEZ;IACArF,GAAG,CAACI,SAAS,CAAC,CAAC;IACfJ,GAAG,CAACiF,WAAW,GAAG,SAAS;IAC3BjF,GAAG,CAACkF,SAAS,GAAG,GAAG;IACnBlF,GAAG,CAACK,MAAM,CAAC2E,IAAI,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC5H,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,KAAK,IAAIoI,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG3B,MAAM,EAAE2B,GAAC,EAAE,EAAE;MAC7BvF,GAAG,CAACM,MAAM,CAAC0E,IAAI,CAACO,GAAC,CAAC,EAAER,IAAI,CAAC5H,uBAAuB,CAACoI,GAAC,CAAC,CAAC,CAAC;IACzD;IACAvF,GAAG,CAACqF,MAAM,CAAC,CAAC;;IAEZ;IACArF,GAAG,CAACiF,WAAW,GAAGV,SAAS;IAC3BvE,GAAG,CAACkF,SAAS,GAAG,CAAC;IACjBlF,GAAG,CAACyF,UAAU,CAACvB,OAAO,CAACI,IAAI,GAAG,CAAC,EAAEJ,OAAO,CAACC,GAAG,GAAG,CAAC,EAAElG,KAAK,GAAGiG,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACE,KAAK,GAAG,CAAC,EAAElG,MAAM,GAAGgG,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACG,MAAM,GAAG,CAAC,CAAC;EAC1I;EACAvK,uBAAuB,CAAChC,gBAAgB,CAAC,WAAW,EAAE,UAACoD,KAAK,EAAK;IAC7D,IAAM8E,GAAG,GAAGlG,uBAAuB,CAAC+G,UAAU,CAAC,IAAI,CAAC;IACpD,IAAM6E,IAAI,GAAG5L,uBAAuB,CAACkE,qBAAqB,CAAC,CAAC;IAC5D,IAAMiC,CAAC,GAAG/E,KAAK,CAACyK,OAAO,GAAGD,IAAI,CAACpB,IAAI;IAEnC,IAAMJ,OAAO,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;;IAE9D;IACA,IAAIrE,CAAC,IAAIiE,OAAO,CAACI,IAAI,IAAIrE,CAAC,IAAInG,uBAAuB,CAACmE,KAAK,GAAGiG,OAAO,CAACE,KAAK,EAAE;MACzE,IAAM/C,UAAU,GAAGvH,uBAAuB,CAACmE,KAAK,GAAGiG,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACE,KAAK;MAC/E,IAAMhD,WAAW,GAAGtH,uBAAuB,CAACoE,MAAM,GAAGgG,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACG,MAAM;MAEjF,IAAMnC,KAAK,GAAGvG,IAAI,CAACiK,KAAK,CACnB,CAAC3F,CAAC,GAAGiE,OAAO,CAACI,IAAI,IAAIjD,UAAU,IAC/BhG,oBAAoB,CAAC4B,WAAW,CAACzE,MAAM,GAAG,CAAC,CAChD,CAAC;MAED,IAAI0J,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG7G,oBAAoB,CAAC4B,WAAW,CAACzE,MAAM,EAAE;QAC/D;QACA+E,qBAAqB,CACjBlC,oBAAoB,CAAC4B,WAAW,EAChC5B,oBAAoB,CAAC6B,sBAAsB,EAC3C7B,oBAAoB,CAAC8B,uBACzB,CAAC;;QAED;QACA6C,GAAG,CAACI,SAAS,CAAC,CAAC;QACfJ,GAAG,CAACK,MAAM,CAACJ,CAAC,EAAEiE,OAAO,CAACC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAChCnE,GAAG,CAACM,MAAM,CAACL,CAAC,EAAEiE,OAAO,CAACC,GAAG,GAAG/C,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9CpB,GAAG,CAACiF,WAAW,GAAG,oBAAoB;QACtCjF,GAAG,CAACkF,SAAS,GAAG,CAAC;QACjBlF,GAAG,CAACqF,MAAM,CAAC,CAAC;;QAEZ;QACA9F,iBAAiB,CACblE,oBAAoB,CAAC4B,WAAW,CAACiF,KAAK,CAAC,EACvC7G,oBAAoB,CAAC6B,sBAAsB,CAACgF,KAAK,CAAC,EAClD7G,oBAAoB,CAAC8B,uBAAuB,CAAC+E,KAAK,CACtD,CAAC;MACL;IACJ;EACJ,CAAC,CAAC;EAKFpI,uBAAuB,CAAChC,gBAAgB,CAAC,UAAU,EAAE,YAAM;IACvD;IACAyF,qBAAqB,CAAClC,oBAAoB,CAAC4B,WAAW,EAAE5B,oBAAoB,CAAC6B,sBAAsB,EAAE7B,oBAAoB,CAAC8B,uBAAuB,CAAC;IAClJ0C,oBAAoB,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,SAASrC,wBAAwBA,CAACJ,iBAAiB,EAAEC,kBAAkB,EAAEC,eAAe,EAAE;IACtF,IAAMiF,MAAM,GAAG,CACX;MAAEC,KAAK,EAAE,qBAAqB;MAAEjH,KAAK,EAAE6B,iBAAiB;MAAEgC,KAAK,EAAE;IAAU,CAAC,EAC5E;MAAEoD,KAAK,EAAE,sBAAsB;MAAEjH,KAAK,EAAE8B,kBAAkB;MAAE+B,KAAK,EAAE;IAAU,CAAC,EAC9E;MAAEoD,KAAK,EAAE,sBAAsB;MAAEjH,KAAK,EAAE+B,eAAe;MAAE8B,KAAK,EAAE;IAAU,CAAC,CAC9E;IAEDpF,2BAA2B,CAACyI,SAAS,GAAG,EAAE,CAAC,CAAC;;IAE5CF,MAAM,CAACvH,OAAO,CAAC,UAAA0H,IAAI,EAAI;MACnB,IAAMC,YAAY,GAAG9K,QAAQ,CAAC+K,aAAa,CAAC,KAAK,CAAC;MAClDD,YAAY,CAACpG,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACxCmG,YAAY,CAACtG,KAAK,CAAC6C,UAAU,GAAG,yBAAyB;MACzDyD,YAAY,CAACtG,KAAK,CAAC8C,UAAU,GAAG,KAAK;MACrCwD,YAAY,CAACtG,KAAK,CAAC+C,KAAK,GAAG,SAAS;MAEpC,IAAMyD,WAAW,GAAGhL,QAAQ,CAAC+K,aAAa,CAAC,MAAM,CAAC;MAClDC,WAAW,CAACtG,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;MACzCqG,WAAW,CAACxG,KAAK,CAACyG,eAAe,GAAGJ,IAAI,CAACtD,KAAK;MAE9C,IAAM2D,SAAS,GAAGlL,QAAQ,CAAC+K,aAAa,CAAC,MAAM,CAAC;MAChDG,SAAS,CAACxG,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACrCuG,SAAS,CAACnD,WAAW,GAAG8C,IAAI,CAACF,KAAK;MAElC,IAAMQ,UAAU,GAAGnL,QAAQ,CAAC+K,aAAa,CAAC,MAAM,CAAC;MACjDI,UAAU,CAACzG,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;MACvCwG,UAAU,CAACpD,WAAW,GAAGlF,SAAS,CAACuE,MAAM,CAACyD,IAAI,CAACnH,KAAK,CAAC,CAACsK,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;MAEtElD,YAAY,CAACM,WAAW,CAACJ,WAAW,CAAC;MACrCF,YAAY,CAACM,WAAW,CAACF,SAAS,CAAC;MACnCJ,YAAY,CAACM,WAAW,CAACD,UAAU,CAAC;MAEpChJ,2BAA2B,CAACiJ,WAAW,CAACN,YAAY,CAAC;IACzD,CAAC,CAAC;EACN;EAGA9G,0BAA0B,CAAC,CAAC;EAC5B9D,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,SAAS8F,wBAAwBA,CAAA,EAAG;IAChC,IAAMhE,uBAAuB,GAAGjC,QAAQ,CAACsB,cAAc,CAAC,mBAAmB,CAAC;IAC5E,IAAMsE,gBAAgB,GAAG5F,QAAQ,CAAC6F,aAAa,CAAC,oBAAoB,CAAC;IAErE,IAAI5D,uBAAuB,IAAI2D,gBAAgB,EAAE;MAC7C;MACA,IAAMqI,WAAW,GAAG/M,MAAM,CAACgN,gBAAgB,CAACjM,uBAAuB,CAAC;MACpE2D,gBAAgB,CAACpB,KAAK,CAAC6B,MAAM,GAAG4H,WAAW,CAAC5H,MAAM;MAClDT,gBAAgB,CAACpB,KAAK,CAAC4B,KAAK,GAAG6H,WAAW,CAAC7H,KAAK;IACpD;EACJ;;EAIA;EACApG,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;IAChD+D,0BAA0B,CAAC,CAAC,CAAC,CAAC;IAC9BiC,wBAAwB,CAAC,CAAC;EAC9B,CAAC,CAAC;AAGN,CAAC,CAAC","sources":["webpack://monvvo-app/./public/js/mortgage-calculator.js"],"sourcesContent":["\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    console.log(\"DOMContentLoaded event fired\");\r\n\r\n    function debounce(func, wait) {\r\n        let timeout;\r\n        return function(...args) {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => func.apply(this, args), wait);\r\n        };\r\n    }\r\n    \r\n\r\n    // Disable Google Analytics on localhost\r\n    if (window.location.hostname === \"localhost\") {\r\n        console.log(\"Running on localhost, disabling Google Analytics\");\r\n    }\r\n\r\n    // Mortgage calculation functionality\r\n    const homePriceInput = document.getElementById('home-price');\r\n    const downPaymentAmountInput = document.getElementById('down-payment-amount');\r\n    const downPaymentPercentageInput = document.getElementById('down-payment-percentage');\r\n    const loanTermInput = document.getElementById('loan-term');\r\n    const interestRateInput = document.getElementById('interest-rate');\r\n    const propertyTaxInput = document.getElementById('property-tax');\r\n    const pmiExpenseInput = document.getElementById('pmi-expense');\r\n    const hoaExpenseInput = document.getElementById('hoa-expense');\r\n    const updateBtn = document.getElementById('update-btn');\r\n    const resetBtn = document.getElementById('reset-btn');\r\n    const canvas = document.getElementById('mortgageChart');\r\n    const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n    const labelsContainer = document.getElementById('chartLabels');\r\n    const amortizationLabelsContainer = document.getElementById('amortizationLabels');\r\n\r\n    const defaultValues = {\r\n        homePrice: 500000,\r\n        downPaymentAmount: 25000,\r\n        downPaymentPercentage: 5,\r\n        loanTerm: 25,\r\n        interestRate: 7.04,\r\n        propertyTax: 250,\r\n        pmiExpense: 200,\r\n        hoaExpense: 0\r\n    };\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2\r\n    });\r\n\r\n    const inputsToRestrict = [\r\n        homePriceInput,\r\n        downPaymentAmountInput,\r\n        downPaymentPercentageInput,\r\n        loanTermInput,\r\n        interestRateInput,\r\n        propertyTaxInput,\r\n        pmiExpenseInput,\r\n        hoaExpenseInput\r\n    ];\r\n\r\n    inputsToRestrict.forEach(input => {\r\n        input.addEventListener('keydown', function (event) {\r\n            if (event.key === \"-\" || event.key === \"e\") {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    });\r\n\r\n    let lastAmortizationData = null;\r\n\r\n    downPaymentAmountInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || 0;\r\n        const downPaymentPercentage = (downPaymentAmount / homePrice) * 100;\r\n        downPaymentPercentageInput.value = Number.isInteger(downPaymentPercentage)\r\n            ? downPaymentPercentage\r\n            : downPaymentPercentage.toFixed(2);\r\n    });\r\n\r\n    downPaymentPercentageInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentPercentage = parseFloat(downPaymentPercentageInput.value) || 0;\r\n        const downPaymentAmount = Math.ceil((downPaymentPercentage / 100) * homePrice);\r\n        downPaymentAmountInput.value = downPaymentAmount;\r\n    });\r\n\r\n    homePriceInput.addEventListener('input', function () {\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value) || 0;\r\n        const downPaymentPercentage = (downPaymentAmount / homePrice) * 100;\r\n        downPaymentPercentageInput.value = Number.isInteger(downPaymentPercentage)\r\n            ? downPaymentPercentage\r\n            : downPaymentPercentage.toFixed(2);\r\n    });\r\n\r\n    updateBtn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        console.log(\"Update button clicked\");\r\n        calculateAndDisplayResults();\r\n    });\r\n\r\n    resetBtn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n        console.log(\"Reset button clicked\");\r\n        resetInputs();\r\n    });\r\n\r\n    const tabPaymentBreakdown = document.getElementById(\"tab-payment-breakdown\");\r\n    const tabAmortizationSchedule = document.getElementById(\"tab-amortization-schedule\");\r\n\r\n    const paymentBreakdownContent = document.getElementById(\"payment-breakdown-content\");\r\n    const amortizationScheduleContent = document.getElementById(\"amortization-schedule-content\");\r\n\r\n    function showTab(tabName) {\r\n        if (tabName === \"payment\") {\r\n            paymentBreakdownContent.style.display = \"block\";\r\n            amortizationScheduleContent.style.display = \"none\";\r\n            tabPaymentBreakdown.classList.add(\"tab-active\");\r\n            tabAmortizationSchedule.classList.remove(\"tab-active\");\r\n            if (lastAmortizationData) {\r\n                const { monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA } = lastAmortizationData;\r\n                updateHorizontalStackedBarChart(monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA);\r\n            }\r\n        } else if (tabName === \"amortization\") {\r\n            paymentBreakdownContent.style.display = \"none\";\r\n            amortizationScheduleContent.style.display = \"block\";\r\n            tabPaymentBreakdown.classList.remove(\"tab-active\");\r\n            tabAmortizationSchedule.classList.add(\"tab-active\");\r\n            if (lastAmortizationData) {\r\n                const { balanceData, cumulativeInterestData, cumulativePrincipalData, totalInterestPaid, totalPrincipalPaid, totalAmountPaid } = lastAmortizationData;\r\n                drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData);\r\n                updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid);\r\n            }\r\n        }\r\n    }\r\n\r\n    tabPaymentBreakdown.addEventListener(\"click\", () => showTab(\"payment\"));\r\n    tabAmortizationSchedule.addEventListener(\"click\", () => showTab(\"amortization\"));\r\n\r\n\r\n\r\n\r\n// Cache DOM elements for better performance\r\nconst resultsContainer = document.querySelector('.results-container');\r\n\r\nlet resizeTimeout;\r\nlet previousWidth = 0;\r\nlet previousHeight = 0;\r\n\r\nwindow.addEventListener('resize', () => {\r\n    // Lightweight updates during resize\r\n    syncResultsContainerSize();\r\n\r\n    // Clear the timeout for delayed updates\r\n    clearTimeout(resizeTimeout);\r\n\r\n    // Perform heavy updates (like chart redraws) after resizing ends\r\n    resizeTimeout = setTimeout(() => {\r\n        const { width, height } = amortizationChartCanvas.getBoundingClientRect();\r\n\r\n        // Avoid redundant redraws\r\n        if (width === previousWidth && height === previousHeight) {\r\n            return;\r\n        }\r\n\r\n        previousWidth = width;\r\n        previousHeight = height;\r\n\r\n        console.log('Redrawing charts...');\r\n        calculateAndDisplayResults();\r\n    }, 300); // Delay as needed\r\n});\r\n\r\nfunction syncResultsContainerSize() {\r\n    if (amortizationChartCanvas && resultsContainer) {\r\n        const { width, height } = amortizationChartCanvas.getBoundingClientRect();\r\n        resultsContainer.style.height = `${height}px`;\r\n        resultsContainer.style.width = `${width}px`;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    function calculateAndDisplayResults() {\r\n        console.log(\"Calculating and displaying results\");\r\n\r\n        const homePrice = parseFloat(homePriceInput.value) || defaultValues.homePrice;\r\n        const downPaymentAmount = parseFloat(downPaymentAmountInput.value);\r\n        const downPaymentPercentage = parseFloat(downPaymentPercentageInput.value);\r\n\r\n        let downPayment;\r\n        if (!isNaN(downPaymentPercentage) && downPaymentPercentage > 0) {\r\n            downPayment = Math.ceil((downPaymentPercentage / 100) * homePrice);\r\n            downPaymentAmountInput.value = downPayment;\r\n        } else if (!isNaN(downPaymentAmount)) {\r\n            downPayment = downPaymentAmount;\r\n            const percentageValue = (downPaymentAmount / homePrice) * 100;\r\n            downPaymentPercentageInput.value = Number.isInteger(percentageValue)\r\n                ? percentageValue\r\n                : percentageValue.toFixed(2);\r\n        } else {\r\n            downPayment = defaultValues.downPaymentAmount;\r\n        }\r\n\r\n        const principal = homePrice - downPayment;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = parseFloat(interestRateInput.value) || defaultValues.interestRate;\r\n        const propertyTax = parseFloat(propertyTaxInput.value) || defaultValues.propertyTax;\r\n        const pmiExpense = parseFloat(pmiExpenseInput.value) || defaultValues.pmiExpense;\r\n        const hoaExpense = parseFloat(hoaExpenseInput.value) || defaultValues.hoaExpense;\r\n\r\n        const monthlyInterestRate = (interestRate / 100) / 12;\r\n        const numberOfPayments = loanTerm * 12;\r\n        const monthlyPrincipalAndInterest = principal * monthlyInterestRate * Math.pow(1 + monthlyInterestRate, numberOfPayments) / (Math.pow(1 + monthlyInterestRate, numberOfPayments) - 1);\r\n\r\n        const monthlyPropertyTax = propertyTax;\r\n        const monthlyPMI = pmiExpense;\r\n        const monthlyHOA = hoaExpense;\r\n\r\n        const totalMonthlyPayment = monthlyPrincipalAndInterest + monthlyPropertyTax + monthlyPMI + monthlyHOA;\r\n\r\n        updateHorizontalStackedBarChart(monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA);\r\n        updateLabels(monthlyPrincipalAndInterest, monthlyPropertyTax, monthlyPMI, monthlyHOA);\r\n\r\n        const monthlyPaymentElement = document.querySelector('.monthly-payment');\r\n        monthlyPaymentElement.innerText = `$${formatter.format(totalMonthlyPayment)}`;\r\n        monthlyPaymentElement.style.fontFamily = 'Open Sans';\r\n        monthlyPaymentElement.style.fontWeight = '500';\r\n        monthlyPaymentElement.style.color = '#000';\r\n\r\n        const amortizationData = calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPrincipalAndInterest, numberOfPayments);\r\n        drawAmortizationChart(amortizationData.balanceData, amortizationData.cumulativeInterestData, amortizationData.cumulativePrincipalData);\r\n        updateAmortizationLabels(amortizationData.totalInterestPaid, amortizationData.totalPrincipalPaid, amortizationData.totalAmountPaid);\r\n\r\n        lastAmortizationData = {\r\n            balanceData: amortizationData.balanceData,\r\n            cumulativeInterestData: amortizationData.cumulativeInterestData,\r\n            cumulativePrincipalData: amortizationData.cumulativePrincipalData,\r\n            totalInterestPaid: amortizationData.totalInterestPaid,\r\n            totalPrincipalPaid: amortizationData.totalPrincipalPaid,\r\n            totalAmountPaid: amortizationData.totalAmountPaid,\r\n            monthlyPrincipalAndInterest,\r\n            monthlyPropertyTax,\r\n            monthlyPMI,\r\n            monthlyHOA\r\n        };\r\n    }\r\n\r\n    function updateHoverValues(balance, interest, principal) {\r\n        const labelValues = amortizationLabelsContainer.querySelectorAll('.label-value');\r\n        if (labelValues.length === 3) {\r\n            labelValues[0].textContent = formatter.format(interest);\r\n            labelValues[1].textContent = formatter.format(principal);\r\n            labelValues[2].textContent = formatter.format(balance);\r\n        }\r\n    }\r\n\r\n    function revertValuesToTotals() {\r\n        const { totalInterestPaid, totalPrincipalPaid, totalAmountPaid } = lastAmortizationData;\r\n        updateHoverValues(totalAmountPaid, totalInterestPaid, totalPrincipalPaid);\r\n    }\r\n\r\n    function resetInputs() {\r\n        console.log(\"Resetting inputs to default values\");\r\n\r\n        homePriceInput.value = defaultValues.homePrice;\r\n        downPaymentAmountInput.value = defaultValues.downPaymentAmount;\r\n        downPaymentPercentageInput.value = defaultValues.downPaymentPercentage;\r\n        loanTermInput.value = defaultValues.loanTerm;\r\n        interestRateInput.value = defaultValues.interestRate;\r\n        propertyTaxInput.value = defaultValues.propertyTax;\r\n        pmiExpenseInput.value = defaultValues.pmiExpense;\r\n        hoaExpenseInput.value = defaultValues.hoaExpense;\r\n\r\n        calculateAndDisplayResults();\r\n    }\r\n\r\n    function drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.clip();\r\n    }\r\n\r\n    function updateHorizontalStackedBarChart(principalAndInterest, propertyTax, pmi, hoa) {\r\n        const ctx = canvas.getContext('2d');\r\n        const parentWidth = canvas.parentElement.offsetWidth;\r\n\r\n        canvas.width = parentWidth;\r\n        canvas.height = 100;\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const data = [principalAndInterest, propertyTax, pmi, hoa];\r\n        const colors = ['#175134', '#3EB721', '#91BBA6', '#B3D4C2'];\r\n\r\n        const chartHeight = 70;\r\n        const chartWidth = canvas.width;\r\n        const total = data.reduce((a, b) => a + b, 0);\r\n        const maxTotal = Math.max(total, 1);\r\n\r\n        const xOffset = 0;\r\n        const yOffset = canvas.height / 2;\r\n        const borderRadius = 5;\r\n        const gap = 2;\r\n\r\n        ctx.save();\r\n        drawRoundedRect(ctx, xOffset, yOffset - chartHeight / 2, chartWidth, chartHeight, borderRadius);\r\n\r\n        let cumulativeWidth = 0;\r\n\r\n        data.forEach((value, index) => {\r\n            const barWidth = (value / maxTotal) * chartWidth - gap;\r\n            ctx.fillStyle = colors[index];\r\n            ctx.fillRect(xOffset + cumulativeWidth, yOffset - chartHeight / 2, barWidth, chartHeight);\r\n            cumulativeWidth += barWidth + gap;\r\n        });\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    function updateLabels(principalAndInterest, propertyTax, pmi, hoa) {\r\n        const labels = [\r\n            { label: 'Principal & Interest', value: principalAndInterest, color: '#175134' },\r\n            { label: 'Property Tax', value: propertyTax, color: '#3EB721' },\r\n            { label: 'PMI', value: pmi, color: '#91BBA6' },\r\n            { label: 'HOA', value: hoa, color: '#B3D4C2' }\r\n        ];\r\n\r\n        labelsContainer.innerHTML = ''; // Clear previous labels\r\n\r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item');\r\n            labelElement.style.fontFamily = \"'Open Sans', sans-serif\";\r\n            labelElement.style.fontWeight = '550';\r\n            labelElement.style.color = \"#101010\";\r\n            \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n\r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name');\r\n            labelText.textContent = item.label;\r\n\r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = `${formatter.format(item.value)}`;\r\n\r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n\r\n            labelsContainer.appendChild(labelElement);\r\n        });\r\n    }\r\n\r\n    function calculateAmortizationSchedule(principal, monthlyInterestRate, monthlyPrincipalAndInterest, numberOfPayments) {\r\n        const balanceData = [];\r\n        const cumulativeInterestData = [];\r\n        const cumulativePrincipalData = [];\r\n        \r\n        let balance = principal;\r\n        let cumulativeInterest = 0;\r\n        let cumulativePrincipal = 0;\r\n\r\n        for (let month = 1; month <= numberOfPayments; month++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = monthlyPrincipalAndInterest - interestPayment;\r\n            balance -= principalPayment;\r\n\r\n            cumulativeInterest += interestPayment;\r\n            cumulativePrincipal += principalPayment;\r\n\r\n            balanceData.push(balance > 0 ? balance : 0);\r\n            cumulativeInterestData.push(cumulativeInterest);\r\n            cumulativePrincipalData.push(cumulativePrincipal);\r\n        }\r\n\r\n        const totalInterestPaid = cumulativeInterest;\r\n        const totalPrincipalPaid = cumulativePrincipal;\r\n        const totalAmountPaid = monthlyPrincipalAndInterest * numberOfPayments;\r\n\r\n        return { balanceData, cumulativeInterestData, cumulativePrincipalData, totalInterestPaid, totalPrincipalPaid, totalAmountPaid };\r\n    }\r\n\r\n    function drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData) {\r\n        const ctx = amortizationChartCanvas.getContext('2d');\r\n        const dpr = window.devicePixelRatio || 1;\r\n    \r\n        // Adjust height dynamically based on screen width\r\n        let height;\r\n        if (window.innerWidth < 500) {\r\n            height = 200; // Set a smaller height for smaller screens\r\n        } else {\r\n            height = 300; // Default height\r\n        }\r\n    \r\n        amortizationChartCanvas.style.width = '100%';\r\n        amortizationChartCanvas.style.height = `${height}px`;\r\n    \r\n        const width = amortizationChartCanvas.offsetWidth;\r\n        amortizationChartCanvas.width = width * dpr;\r\n        amortizationChartCanvas.height = height * dpr;\r\n    \r\n        if (dpr > 1) {\r\n            ctx.scale(dpr, dpr);\r\n        }\r\n    \r\n        ctx.clearRect(0, 0, width * dpr, height * dpr);\r\n    \r\n        const months = balanceData.length;\r\n        const maxBalance = Math.max(...balanceData);\r\n        const maxCumulative = Math.max(...cumulativeInterestData, ...cumulativePrincipalData);\r\n    \r\n        const yAxisMax = Math.max(maxBalance, maxCumulative);\r\n    \r\n        const intervalMonths = 5 * 12;\r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 };\r\n    \r\n        const gridColor = '#d0d0d0';\r\n        const labelColor = '#505050';\r\n        const labelFont = '14px Open Sans';\r\n        const currentYear = new Date().getFullYear();\r\n        \r\n    \r\n        ctx.font = labelFont;\r\n        ctx.textAlign = 'right';\r\n    \r\n        function getY(value) {\r\n            return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n        }\r\n    \r\n        function getX(index) {\r\n            return padding.left + (index / months) * (width - padding.left - padding.right);\r\n        }\r\n        window.addEventListener('resize', () => {\r\n            drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData);\r\n        });\r\n        \r\n        // Draw horizontal grid lines only, avoiding the line at the bottom (y-axis line)\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.lineWidth = 1;\r\n        \r\n        const yLabelInterval = 100000;\r\n        for (let yValue = yLabelInterval; yValue < yAxisMax; yValue += yLabelInterval) {\r\n            const y = getY(yValue);\r\n            ctx.beginPath();\r\n            ctx.moveTo(padding.left, y);\r\n            ctx.lineTo(width - padding.right, y);\r\n            ctx.stroke();\r\n            \r\n            ctx.fillStyle = labelColor;\r\n            ctx.fillText(`$${(yValue / 1000).toFixed(0)}K`, padding.left - 10, y + 4);\r\n        }\r\n        \r\n        // Draw vertical grid lines only, avoiding the line on the left (x-axis line)\r\n        ctx.textAlign = 'center';\r\n        \r\n        for (let i = intervalMonths; i < months; i += intervalMonths) {\r\n            const x = getX(i);\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, padding.top);\r\n            ctx.lineTo(x, height - padding.bottom);\r\n            ctx.stroke();\r\n            \r\n            const yearLabel = currentYear + (i / 12 / 5) * 5;\r\n            ctx.fillStyle = labelColor;\r\n            ctx.fillText(yearLabel, x, height - 5);\r\n        }\r\n    \r\n        // Plot balance line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = '#175134';\r\n        ctx.lineWidth = 2;\r\n        ctx.moveTo(getX(0), getY(balanceData[0]));\r\n        for (let i = 1; i < months; i++) {\r\n            ctx.lineTo(getX(i), getY(balanceData[i]));\r\n        }\r\n        ctx.stroke();\r\n        \r\n        // Plot cumulative interest line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = '#3EB721';\r\n        ctx.lineWidth = 2.5;\r\n        ctx.moveTo(getX(0), getY(cumulativeInterestData[0]));\r\n        for (let i = 1; i < months; i++) {\r\n            ctx.lineTo(getX(i), getY(cumulativeInterestData[i]));\r\n        }\r\n        ctx.stroke();\r\n        \r\n        // Plot cumulative principal line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = '#91BBA6';\r\n        ctx.lineWidth = 2.5;\r\n        ctx.moveTo(getX(0), getY(cumulativePrincipalData[0]));\r\n        for (let i = 1; i < months; i++) {\r\n            ctx.lineTo(getX(i), getY(cumulativePrincipalData[i]));\r\n        }\r\n        ctx.stroke();\r\n    \r\n        // Draw border around the chart with 3px internal padding\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(padding.left - 3, padding.top - 3, width - padding.left - padding.right + 6, height - padding.top - padding.bottom + 6);\r\n    }\r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const ctx = amortizationChartCanvas.getContext('2d');\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n    \r\n        const padding = { top: 30, right: 20, bottom: 30, left: 70 }; // Match this with your chart's padding\r\n    \r\n        // Ensure x is within the horizontal bounds of the chart\r\n        if (x >= padding.left && x <= amortizationChartCanvas.width - padding.right) {\r\n            const chartWidth = amortizationChartCanvas.width - padding.left - padding.right;\r\n            const chartHeight = amortizationChartCanvas.height - padding.top - padding.bottom;\r\n    \r\n            const index = Math.round(\r\n                ((x - padding.left) / chartWidth) *\r\n                (lastAmortizationData.balanceData.length - 1)\r\n            );\r\n    \r\n            if (index >= 0 && index < lastAmortizationData.balanceData.length) {\r\n                // Clear the canvas and redraw the chart\r\n                drawAmortizationChart(\r\n                    lastAmortizationData.balanceData,\r\n                    lastAmortizationData.cumulativeInterestData,\r\n                    lastAmortizationData.cumulativePrincipalData\r\n                );\r\n    \r\n                // Draw the vertical line strictly within the chart area\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, padding.top + 1); // +1 to avoid touching the border\r\n                ctx.lineTo(x, padding.top + chartHeight - 1); // -1 to avoid touching the border\r\n                ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\r\n                ctx.lineWidth = 1;\r\n                ctx.stroke();\r\n    \r\n                // Update the labels with hover values\r\n                updateHoverValues(\r\n                    lastAmortizationData.balanceData[index],\r\n                    lastAmortizationData.cumulativeInterestData[index],\r\n                    lastAmortizationData.cumulativePrincipalData[index]\r\n                );\r\n            }\r\n        }\r\n    });\r\n    \r\n    \r\n    \r\n\r\n    amortizationChartCanvas.addEventListener('mouseout', () => {\r\n        // Clear the canvas and redraw the chart without the vertical line\r\n        drawAmortizationChart(lastAmortizationData.balanceData, lastAmortizationData.cumulativeInterestData, lastAmortizationData.cumulativePrincipalData);\r\n        revertValuesToTotals();\r\n    });\r\n\r\n    function updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n        const labels = [\r\n            { label: 'Total Interest Paid', value: totalInterestPaid, color: '#3EB721' },\r\n            { label: 'Total Principal Paid', value: totalPrincipalPaid, color: '#91BBA6' },\r\n            { label: 'Balance (Total Paid)', value: totalAmountPaid, color: '#175134' }\r\n        ];\r\n    \r\n        amortizationLabelsContainer.innerHTML = ''; // Clear previous labels\r\n    \r\n        labels.forEach(item => {\r\n            const labelElement = document.createElement('div');\r\n            labelElement.classList.add('label-item');\r\n            labelElement.style.fontFamily = \"'Open Sans', sans-serif\";\r\n            labelElement.style.fontWeight = '550';\r\n            labelElement.style.color = \"#101010\";\r\n            \r\n            const colorCircle = document.createElement('span');\r\n            colorCircle.classList.add('color-circle');\r\n            colorCircle.style.backgroundColor = item.color;\r\n    \r\n            const labelText = document.createElement('span');\r\n            labelText.classList.add('label-name');\r\n            labelText.textContent = item.label;\r\n    \r\n            const labelValue = document.createElement('span');\r\n            labelValue.classList.add('label-value');\r\n            labelValue.textContent = formatter.format(item.value).replace('$', '');\r\n    \r\n            labelElement.appendChild(colorCircle);\r\n            labelElement.appendChild(labelText);\r\n            labelElement.appendChild(labelValue);\r\n    \r\n            amortizationLabelsContainer.appendChild(labelElement);\r\n        });\r\n    }\r\n\r\n\r\n    calculateAndDisplayResults();\r\n    console.log(\"End of script reached\");\r\n    function syncResultsContainerSize() {\r\n        const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n        const resultsContainer = document.querySelector('.results-container');\r\n    \r\n        if (amortizationChartCanvas && resultsContainer) {\r\n            // Sync the results container dimensions with the chart\r\n            const chartStyles = window.getComputedStyle(amortizationChartCanvas);\r\n            resultsContainer.style.height = chartStyles.height;\r\n            resultsContainer.style.width = chartStyles.width;\r\n        }\r\n    }\r\n    \r\n   \r\n    \r\n    // Ensure initial alignment\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        calculateAndDisplayResults(); // If not already auto-triggered\r\n        syncResultsContainerSize();\r\n    });\r\n    \r\n\r\n});\r\n"],"names":["document","addEventListener","console","log","debounce","func","wait","timeout","_this","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","window","location","hostname","homePriceInput","getElementById","downPaymentAmountInput","downPaymentPercentageInput","loanTermInput","interestRateInput","propertyTaxInput","pmiExpenseInput","hoaExpenseInput","updateBtn","resetBtn","canvas","amortizationChartCanvas","labelsContainer","amortizationLabelsContainer","defaultValues","homePrice","downPaymentAmount","downPaymentPercentage","loanTerm","interestRate","propertyTax","pmiExpense","hoaExpense","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","inputsToRestrict","forEach","input","event","key","preventDefault","lastAmortizationData","parseFloat","value","Number","isInteger","toFixed","Math","ceil","calculateAndDisplayResults","resetInputs","tabPaymentBreakdown","tabAmortizationSchedule","paymentBreakdownContent","amortizationScheduleContent","showTab","tabName","style","display","classList","add","remove","_lastAmortizationData","monthlyPrincipalAndInterest","monthlyPropertyTax","monthlyPMI","monthlyHOA","updateHorizontalStackedBarChart","_lastAmortizationData2","balanceData","cumulativeInterestData","cumulativePrincipalData","totalInterestPaid","totalPrincipalPaid","totalAmountPaid","drawAmortizationChart","updateAmortizationLabels","resultsContainer","querySelector","resizeTimeout","previousWidth","previousHeight","syncResultsContainerSize","_amortizationChartCan","getBoundingClientRect","width","height","_amortizationChartCan2","concat","downPayment","isNaN","percentageValue","principal","parseInt","monthlyInterestRate","numberOfPayments","pow","totalMonthlyPayment","updateLabels","monthlyPaymentElement","innerText","format","fontFamily","fontWeight","color","amortizationData","calculateAmortizationSchedule","updateHoverValues","balance","interest","labelValues","querySelectorAll","textContent","revertValuesToTotals","_lastAmortizationData3","drawRoundedRect","ctx","x","y","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","principalAndInterest","pmi","hoa","getContext","parentWidth","parentElement","offsetWidth","clearRect","data","colors","chartHeight","chartWidth","total","reduce","a","b","maxTotal","max","xOffset","yOffset","borderRadius","gap","save","cumulativeWidth","index","barWidth","fillStyle","fillRect","restore","labels","label","innerHTML","item","labelElement","createElement","colorCircle","backgroundColor","labelText","labelValue","appendChild","cumulativeInterest","cumulativePrincipal","month","interestPayment","principalPayment","push","dpr","devicePixelRatio","innerWidth","scale","months","maxBalance","_toConsumableArray","maxCumulative","yAxisMax","intervalMonths","padding","top","right","bottom","left","gridColor","labelColor","labelFont","currentYear","Date","getFullYear","font","textAlign","getY","getX","strokeStyle","lineWidth","yLabelInterval","yValue","stroke","fillText","i","yearLabel","strokeRect","rect","clientX","round","replace","chartStyles","getComputedStyle"],"sourceRoot":""}