{"version":3,"file":"auto-loan-calculator.cd74d0399c957e2ce7b1.js","mappings":"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","sources":["webpack://monvvo-app/./public/js/auto-loan-calculator.js","webpack://monvvo-app/webpack/bootstrap","webpack://monvvo-app/webpack/runtime/chunk loaded","webpack://monvvo-app/webpack/runtime/hasOwnProperty shorthand","webpack://monvvo-app/webpack/runtime/jsonp chunk loading","webpack://monvvo-app/webpack/before-startup","webpack://monvvo-app/webpack/startup","webpack://monvvo-app/webpack/after-startup"],"sourcesContent":["import '../css/auto-loan-calculator.css';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    console.log(\"DOMContentLoaded event fired\");\r\n\r\n    // Inputs for Auto Loan Calculator\r\n    const loanAmountInput = document.getElementById('loan-price'); // Total price of the loan\r\n    const loanTermInput = document.getElementById('loan-term'); // Loan term in months\r\n    const interestRateInput = document.getElementById('interest-rate'); // Annual interest rate\r\n    const downPaymentInput = document.getElementById('down-payment'); // Down payment amount\r\n    const extraPaymentInput = document.getElementById('extra-payment'); // Extra Payment\r\n    const tradeInValueInput = document.getElementById('value-trade-in'); // Trade-in value\r\n    const salesTaxInput = document.getElementById('value-sales-tax'); // Sales tax percentage\r\n    const feesInput = document.getElementById('value-fees'); // Additional fees\r\n    const updateBtn = document.getElementById('update-btn');\r\n    const resetBtn = document.getElementById('reset-btn');\r\n    const autoChartCanvas = document.getElementById('autoChart');\r\n\r\n    // Default values\r\n    const defaultValues = {\r\n        loanAmount: 25000, // Default loan amount\r\n        loanTerm: 60, // Loan term in months\r\n        interestRate: 5.5, // Interest rate in percentage\r\n        downPayment: 3000, // Down payment amount\r\n        extraPayment: 0, // Extra payment amount\r\n        tradeInValue: 2000, // Trade-in value\r\n        salesTax: 7.5, // Sales tax percentage\r\n        fees: 500, // Additional fees\r\n    };\r\n    tradeInValueInput.value = defaultValues.tradeInValue;\r\n    salesTaxInput.value = defaultValues.salesTax;\r\n    feesInput.value = defaultValues.fees;\r\n    let lastAmortizationData = null;\r\n\r\n    // Helper: Format currency\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0,\r\n    });\r\n\r\n\r\n        // Function to calculate results\r\n        function calculateAndDisplayResults() {\r\n            // Extract main input values (only updated when the button is clicked)\r\n            const loanAmount = parseFloat(loanAmountInput.value) || defaultValues.loanAmount;\r\n            const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n            const interestRate = parseFloat(interestRateInput.value) / 100 || defaultValues.interestRate / 100;\r\n            const downPayment = parseFloat(downPaymentInput.value) || defaultValues.downPayment;\r\n            const extraPayment = parseFloat(extraPaymentInput.value) || defaultValues.extraPayment;\r\n        \r\n            // Extract dynamic inputs (trade-in value, sales tax, and fees update instantly)\r\n            const tradeInValue = parseFloat(tradeInValueInput.value) || defaultValues.tradeInValue;\r\n            const salesTax = parseFloat(salesTaxInput.value) / 100 || defaultValues.salesTax / 100;\r\n            const fees = parseFloat(feesInput.value) || defaultValues.fees;\r\n        \r\n            console.log(\"Calculation Triggered with Values:\", { \r\n                loanAmount, loanTerm, interestRate, downPayment, extraPayment, tradeInValue, salesTax, fees \r\n            });\r\n        \r\n            // ✅ Correctly calculate principal (loan balance)\r\n            let principal = loanAmount - downPayment - tradeInValue + fees + (loanAmount * salesTax);\r\n            if (principal <= 0) {\r\n                console.warn(\"Calculated principal is zero or negative. Adjusting to minimum of $1.\");\r\n                principal = 1; // Prevents invalid calculations\r\n            }\r\n        \r\n            console.log(\"Calculated Principal:\", principal);\r\n        \r\n            // ✅ Calculate Monthly Interest Rate\r\n            const monthlyInterestRate = interestRate / 12;\r\n            console.log(\"Monthly Interest Rate:\", monthlyInterestRate);\r\n        \r\n            // ✅ Fix Monthly Payment Calculation\r\n            let monthlyPayment = 0;\r\n            if (loanTerm > 0) {\r\n                if (monthlyInterestRate > 0) {\r\n                    // Standard formula for loans with interest\r\n                    monthlyPayment = (principal * monthlyInterestRate) / (1 - Math.pow(1 + monthlyInterestRate, -loanTerm));\r\n                } else {\r\n                    // Special case: If interest rate is 0%, use simple division\r\n                    monthlyPayment = principal / loanTerm;\r\n                }\r\n            }\r\n        \r\n            if (isNaN(monthlyPayment) || monthlyPayment <= 0) {\r\n                console.warn(\"Invalid monthly payment calculation. Adjusting to minimum of $1.\");\r\n                monthlyPayment = 1; // Prevents errors in chart\r\n            }\r\n        \r\n            console.log(\"Calculated Monthly Payment:\", monthlyPayment);\r\n        \r\n            // ✅ Total Monthly Payment Including Extra Payment\r\n            let totalMonthlyPayment = monthlyPayment + extraPayment;\r\n            console.log(\"Total Monthly Payment:\", totalMonthlyPayment);\r\n        \r\n            if (isNaN(totalMonthlyPayment) || totalMonthlyPayment <= 0) {\r\n                console.warn(\"Invalid total monthly payment. Adjusting to minimum of $1.\");\r\n                totalMonthlyPayment = 1;\r\n            }\r\n        \r\n            // ✅ Update Chart Labels\r\n            updateChartLabels(totalMonthlyPayment, monthlyPayment, extraPayment);\r\n        \r\n            // ✅ Update Payment Breakdown Chart\r\n            updateDoughnutChart(autoChartCanvas, totalMonthlyPayment, monthlyPayment, extraPayment);\r\n        \r\n            // ✅ Update Amortization Schedule\r\n            lastAmortizationData = calculateAmortizationSchedule();\r\n            if (!lastAmortizationData || !lastAmortizationData.schedule || lastAmortizationData.schedule.length === 0) {\r\n                console.error(\"No valid amortization schedule generated.\");\r\n                lastAmortizationData = {\r\n                    schedule: [],\r\n                    totalInterestPaid: 0,\r\n                    totalPrincipalPaid: 0,\r\n                    balanceData: [],\r\n                    cumulativeInterestData: [],\r\n                    cumulativePrincipalData: [],\r\n                };\r\n            \r\n            } else {\r\n                console.error(\"Failed to generate amortization schedule.\");\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        calculateAndDisplayResults();\r\n\r\n\r\n        function updateChartLabels(totalMonthlyPayment, monthlyPayment, extraPayment) {\r\n            const labelPrincipalInterest = document.getElementById('value-principal-interest');\r\n            const labelExtraPayment = document.getElementById('value-extra-payment');\r\n        \r\n            if (labelPrincipalInterest) {\r\n                labelPrincipalInterest.textContent = new Intl.NumberFormat('en-US', {\r\n                    style: 'currency',\r\n                    currency: 'USD',\r\n                    minimumFractionDigits: 0,\r\n                }).format(monthlyPayment);\r\n            }\r\n        \r\n            if (labelExtraPayment) {\r\n                labelExtraPayment.textContent = new Intl.NumberFormat('en-US', {\r\n                    style: 'currency',\r\n                    currency: 'USD',\r\n                    minimumFractionDigits: 0,\r\n                }).format(extraPayment);\r\n            }\r\n        \r\n            console.log(\"Chart labels updated:\", { monthlyPayment, extraPayment });\r\n        }\r\n        \r\n\r\n\r\n\r\n    \r\n// Doughnut Chart\r\nfunction updateDoughnutChart(autoChartCanvas, totalMonthlyPayment, monthlyPayment, extraPayment) {\r\n    if (!autoChartCanvas) {\r\n        console.error(\"Canvas element not found.\");\r\n        return;\r\n    }\r\n\r\n    const ctx = autoChartCanvas.getContext('2d');\r\n    const size = 400; // Canvas size\r\n\r\n    // Set canvas size\r\n    autoChartCanvas.width = size;\r\n    autoChartCanvas.height = size;\r\n\r\n    // Ensure the correct auto loan breakdown components\r\n    const principalAndInterest = isNaN(monthlyPayment) ? 0 : monthlyPayment;\r\n    const extraPaymentComponent = isNaN(extraPayment) ? 0 : extraPayment;\r\n\r\n    const data = [principalAndInterest, extraPaymentComponent];\r\n    console.log(\"Chart Data:\", data);\r\n\r\n    if (data.some(value => isNaN(value) || value < 0)) {\r\n        console.error(\"Invalid data for chart:\", data);\r\n        return;\r\n    }\r\n\r\n    const colors = ['#175134', '#3EB721']; // Colors for chart\r\n    const total = data.reduce((a, b) => a + b, 0);\r\n\r\n    if (total <= 0) {\r\n        console.error(\"Total value for chart is zero or negative.\");\r\n        return;\r\n    }\r\n\r\n    // Formatter to add commas to the total\r\n    const formattedTotal = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 0, // No decimals for simplicity\r\n    }).format(total);\r\n\r\n    // Clear the canvas\r\n    ctx.clearRect(0, 0, size, size);\r\n\r\n    const outerRadius = size / 2;\r\n    const innerRadius = outerRadius - 70;\r\n    const centerX = size / 2;\r\n    const centerY = size / 2;\r\n    const gapWidth = 5;\r\n\r\n    let startAngle = -Math.PI / 2;\r\n\r\n    data.forEach((value, index) => {\r\n        const segmentAngle = (value / total) * Math.PI * 2;\r\n        const endAngle = startAngle + segmentAngle;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, outerRadius, startAngle, endAngle);\r\n        ctx.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = colors[index];\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = 'white';\r\n        ctx.lineWidth = gapWidth;\r\n        ctx.stroke();\r\n\r\n        startAngle = endAngle;\r\n    });\r\n\r\n    // Responsive font size for the total amount in the center\r\n    const fontSize = size / 7;\r\n    ctx.font = `bold ${fontSize}px Roboto`;\r\n    ctx.fillStyle = '#232525';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    ctx.fillText(formattedTotal, centerX, centerY);\r\n\r\n    console.log(\"Doughnut chart updated successfully.\");\r\n}\r\n\r\n    // ShowTab Function\r\nfunction showTab(tabName) {\r\n    const paymentBreakdownContent = document.getElementById('payment-breakdown-content');\r\n    const amortizationScheduleContent = document.getElementById('amortization-schedule-content');\r\n\r\n    // Hide both sections first\r\n    paymentBreakdownContent.style.display = 'none';\r\n    amortizationScheduleContent.style.display = 'none';\r\n\r\n    if (tabName === 'payment-breakdown') {\r\n        console.log(\"Switching to Payment Breakdown tab\");\r\n        paymentBreakdownContent.style.display = 'block';\r\n        calculateAndDisplayResults(); // Ensure charts update immediately\r\n    } else if (tabName === 'amortization-schedule') {\r\n        console.log(\"Switching to Amortization Schedule tab\");\r\n\r\n        // Ensure amortization data is available\r\n        if (!lastAmortizationData || !lastAmortizationData.schedule || lastAmortizationData.schedule.length === 0) {\r\n            console.log(\"Amortization data missing. Recalculating...\");\r\n            calculateAndDisplayResults(); // Ensure it calculates automatically\r\n        }\r\n\r\n        // Ensure canvas is cleared before drawing new chart\r\n        const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n        if (amortizationChartCanvas) {\r\n            const ctx = amortizationChartCanvas.getContext('2d');\r\n            ctx.clearRect(0, 0, amortizationChartCanvas.width, amortizationChartCanvas.height);\r\n        }\r\n\r\n        // ✅ Force immediate chart update after the DOM updates\r\n        setTimeout(() => {\r\n            drawAmortizationChart(\r\n                lastAmortizationData.schedule.map(row => row.balance),\r\n                lastAmortizationData.schedule.map(row => row.interest),\r\n                lastAmortizationData.schedule.map(row => row.principal)\r\n            );\r\n\r\n            updateAmortizationLabels(\r\n                lastAmortizationData.totalInterestPaid || 0,\r\n                lastAmortizationData.totalPrincipalPaid || 0,\r\n                parseFloat(loanBalanceInput.value) || defaultValues.loanBalance\r\n            );\r\n\r\n            console.log(\"Amortization chart updated immediately after switching tabs.\");\r\n        }, 50); // Small delay allows the browser to render the canvas update\r\n\r\n        amortizationScheduleContent.style.display = 'block';\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    const paymentBreakdownTab = document.getElementById('tab-payment-breakdown');\r\n    const amortizationScheduleTab = document.getElementById('tab-amortization-schedule');\r\n\r\n    // Add event listeners for tab switches\r\n    paymentBreakdownTab.addEventListener('click', () => {\r\n        console.log(\"Switching to Payment Breakdown tab\");\r\n        calculateAndDisplayResults(); // Always recalculate\r\n        showTab('payment-breakdown'); // Show the Payment Breakdown tab\r\n    });\r\n\r\n    amortizationScheduleTab.addEventListener('click', () => {\r\n        console.log(\"Switching to Amortization Schedule tab\");\r\n        calculateAndDisplayResults(); // Always recalculate\r\n        showTab('amortization-schedule'); // Show the Amortization Schedule tab\r\n    });\r\n\r\n    showTab('payment-breakdown'); \r\n\r\n\r\n\r\n    // Amortization Chart\r\n    function drawAmortizationChart(balanceData, cumulativeInterestData, cumulativePrincipalData, hoverIndex = 0) {\r\n        const canvas = document.getElementById('amortizationChart');\r\n        if (!canvas) {\r\n            console.error(\"Amortization chart canvas not found.\");\r\n            return;\r\n        }\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        const dpr = window.devicePixelRatio || 1;\r\n\r\n        // Adjust canvas dimensions dynamically\r\n        const isSmallScreen = window.innerWidth < 700;\r\n        const canvasHeight = isSmallScreen ? 220 : 320;\r\n\r\n        // ✅ Use `clientWidth` to prevent excess padding affecting width\r\n        canvas.width = Math.floor(canvas.parentElement.clientWidth * dpr);\r\n        canvas.height = canvasHeight * dpr;\r\n        ctx.scale(dpr, dpr);\r\n\r\n        const width = canvas.width / dpr;\r\n        const height = canvas.height / dpr;\r\n\r\n        // ✅ Adjust padding to keep the right edge inside the chart\r\n        const padding = { top: 10, right: 15, bottom: 50, left: 55 }; // Reduced right padding to 10px\r\n\r\n        const gridColor = '#d0d0d0';\r\n        const labelColor = '#505050';\r\n\r\n        // Get max Y value for scaling (round up to nearest 10K)\r\n        const yAxisMax = Math.ceil(\r\n            Math.max(...balanceData, ...cumulativeInterestData, ...cumulativePrincipalData) / 10000\r\n        ) * 10000;\r\n\r\n        function getY(value) {\r\n            return height - padding.bottom - (value / yAxisMax) * (height - padding.top - padding.bottom);\r\n        }\r\n\r\n        // ✅ Ensure the last point aligns exactly with the right edge\r\n        function getX(index) {\r\n            return padding.left + (index / (balanceData.length - 1)) * (width - padding.left - padding.right);\r\n        }\r\n\r\n        // Clear canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw Y-axis grid lines and labels\r\n        ctx.font = '14px Roboto';\r\n        ctx.textAlign = 'right';\r\n        ctx.fillStyle = labelColor;\r\n        ctx.strokeStyle = gridColor;\r\n\r\n        for (let i = 0; i <= yAxisMax; i += 10000) {\r\n            const y = getY(i);\r\n\r\n            // Grid line\r\n            ctx.beginPath();\r\n            ctx.moveTo(padding.left, y);\r\n            ctx.lineTo(width - padding.right, y);\r\n            ctx.stroke();\r\n\r\n            // Y-axis labels\r\n            ctx.fillText(`$${(i / 1000).toFixed(0)}K`, padding.left - 10, y + 5);\r\n        }\r\n\r\n        // Draw X-axis grid lines (Years)\r\n        ctx.textAlign = 'center';\r\n        const months = balanceData.length;\r\n        const years = Math.floor(months / 12);\r\n\r\n        for (let i = 0; i <= years; i++) {\r\n            const monthIndex = i * 12;\r\n            let x = getX(monthIndex);\r\n\r\n            // ✅ Ensure the last year label aligns properly with the right border\r\n            if (i === years) x = width - padding.right - 2; // Shift it slightly left to prevent overflow\r\n\r\n            const yearLabel = new Date().getFullYear() + i;\r\n\r\n            // Grid line\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, padding.top);\r\n            ctx.lineTo(x, height - padding.bottom);\r\n            ctx.stroke();\r\n\r\n            // X-axis labels\r\n            ctx.fillText(yearLabel, x, height - 10);\r\n        }\r\n\r\n        // Draw amortization data lines\r\n        function drawLine(data, color) {\r\n            ctx.strokeStyle = color;\r\n            ctx.lineWidth = 3;\r\n            ctx.beginPath();\r\n            for (let i = 0; i < data.length; i++) {\r\n                const x = getX(i);\r\n                const y = getY(Math.max(0, data[i])); // Ensure no negative values\r\n                if (i === 0) ctx.moveTo(x, y);\r\n                else ctx.lineTo(x, y);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        drawLine(balanceData, '#175134'); // Balance\r\n        drawLine(cumulativePrincipalData, '#3EB721'); // Principal Paid\r\n        drawLine(cumulativeInterestData, '#91BBA6'); // Interest Paid\r\n\r\n        // Always draw the hover effect\r\n        const hoverX = getX(hoverIndex);\r\n        const balanceY = getY(balanceData[hoverIndex]);\r\n        const principalY = getY(cumulativePrincipalData[hoverIndex]);\r\n        const interestY = getY(cumulativeInterestData[hoverIndex]);\r\n\r\n        // Draw vertical hover line\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\r\n        ctx.lineWidth = 1.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(hoverX, padding.top);\r\n        ctx.lineTo(hoverX, height - padding.bottom);\r\n        ctx.stroke();\r\n\r\n        // Draw hover dots\r\n        const dotRadius = 6;\r\n\r\n        ctx.fillStyle = '#175134'; // Balance dot\r\n        ctx.beginPath();\r\n        ctx.arc(hoverX, balanceY, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = '#3EB721'; // Principal dot\r\n        ctx.beginPath();\r\n        ctx.arc(hoverX, principalY, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = '#91BBA6'; // Interest dot\r\n        ctx.beginPath();\r\n        ctx.arc(hoverX, interestY, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        console.log(\"Amortization chart updated successfully.\");\r\n    }\r\n\r\n    \r\n    \r\n    // Amortization Schedule\r\n    function calculateAmortizationSchedule() {\r\n        console.log(\"Calculating Amortization Schedule...\");\r\n    \r\n        // Extract input values or use defaults\r\n        const loanAmount = parseFloat(loanAmountInput.value) || defaultValues.loanAmount;\r\n        const loanTerm = parseInt(loanTermInput.value) || defaultValues.loanTerm;\r\n        const interestRate = (parseFloat(interestRateInput.value) || defaultValues.interestRate) / 100;\r\n        const downPayment = parseFloat(downPaymentInput.value) || defaultValues.downPayment;\r\n        const extraPayment = parseFloat(extraPaymentInput.value) || defaultValues.extraPayment;\r\n        const tradeInValue = parseFloat(tradeInValueInput.value) || defaultValues.tradeInValue;\r\n        const salesTax = (parseFloat(salesTaxInput.value) || defaultValues.salesTax) / 100;\r\n        const fees = parseFloat(feesInput.value) || defaultValues.fees;\r\n    \r\n        // Calculate loan principal\r\n        let principal = loanAmount - downPayment - tradeInValue + fees + (loanAmount * salesTax);\r\n        if (principal <= 0) {\r\n            console.warn(\"Calculated principal is zero or negative. Adjusting to minimum of $1.\");\r\n            principal = 1;\r\n        }\r\n    \r\n        const monthlyInterestRate = interestRate / 12;\r\n        let monthlyPayment = 0;\r\n    \r\n        if (loanTerm > 0) {\r\n            if (monthlyInterestRate > 0) {\r\n                monthlyPayment = (principal * monthlyInterestRate) / (1 - Math.pow(1 + monthlyInterestRate, -loanTerm));\r\n            } else {\r\n                monthlyPayment = principal / loanTerm;\r\n            }\r\n        }\r\n    \r\n        let schedule = [];\r\n        let totalInterestPaid = 0;\r\n        let totalPrincipalPaid = 0;\r\n        let balance = principal;\r\n        let balanceData = [];\r\n        let cumulativeInterestData = [];\r\n        let cumulativePrincipalData = [];\r\n    \r\n        for (let i = 0; i < loanTerm; i++) {\r\n            const interestPayment = balance * monthlyInterestRate;\r\n            const principalPayment = Math.min(monthlyPayment + extraPayment - interestPayment, balance);\r\n            balance -= principalPayment;\r\n    \r\n            totalInterestPaid += interestPayment;\r\n            totalPrincipalPaid += principalPayment;\r\n    \r\n            schedule.push({\r\n                month: i + 1,\r\n                principal: principalPayment,\r\n                interest: interestPayment,\r\n                balance: Math.max(balance, 0),\r\n            });\r\n    \r\n            balanceData.push(Math.max(0, balance));\r\n            cumulativeInterestData.push(totalInterestPaid);\r\n            cumulativePrincipalData.push(totalPrincipalPaid);\r\n    \r\n            if (balance <= 0) break; // Stop if loan is paid off early\r\n        }\r\n    \r\n        return {\r\n            schedule,\r\n            totalInterestPaid,\r\n            totalPrincipalPaid,\r\n            balanceData,\r\n            cumulativeInterestData,\r\n            cumulativePrincipalData\r\n        };\r\n    }\r\n    \r\n    // Populate Amortization Table\r\n    function populateAmortizationTable(amortizationData) {\r\n        const tableBody = document.getElementById('amortization-table-body');\r\n        if (!tableBody) {\r\n            console.error(\"Amortization table body element not found.\");\r\n            return;\r\n        }\r\n    \r\n        tableBody.innerHTML = ''; // Clear existing rows\r\n    \r\n        const startDate = new Date(); // Get current date\r\n        startDate.setMonth(startDate.getMonth() + 1); // Set first payment to next month\r\n    \r\n        amortizationData.schedule.forEach((row, index) => {\r\n            const tr = document.createElement('tr');\r\n    \r\n            // Format the date for each payment\r\n            const dateCell = document.createElement('td');\r\n            const paymentDate = new Date(startDate);\r\n            paymentDate.setMonth(paymentDate.getMonth() + index);\r\n            dateCell.textContent = paymentDate.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n            tr.appendChild(dateCell);\r\n    \r\n            // Principal Payment Cell\r\n            const principalCell = document.createElement('td');\r\n            principalCell.textContent = `$${formatter.format(row.principal)}`;\r\n            tr.appendChild(principalCell);\r\n    \r\n            // Interest Payment Cell\r\n            const interestCell = document.createElement('td');\r\n            interestCell.textContent = `$${formatter.format(row.interest)}`;\r\n            tr.appendChild(interestCell);\r\n    \r\n            // Remaining Balance Cell (Prevents negative values)\r\n            const balanceCell = document.createElement('td');\r\n            balanceCell.textContent = `$${formatter.format(Math.max(row.balance, 0))}`;\r\n            tr.appendChild(balanceCell);\r\n    \r\n            tableBody.appendChild(tr);\r\n        });\r\n    \r\n        // Display the amortization schedule container\r\n        document.getElementById('amortization-schedule').style.display = 'block';\r\n    \r\n        // Initialize expand/collapse logic\r\n        initializeExpandCollapseLogic(); // Reinitialize after populating table\r\n    }\r\n\r\n    // Initialize Expand Collapse Logic\r\n    function initializeExpandCollapseLogic() {\r\n        const expandBox = document.querySelector(\".expand-box\");\r\n        const expandText = document.querySelector(\".expand-text\");\r\n        const expandIcon = document.querySelector(\".expand-icon\");\r\n        const tableBody = document.getElementById(\"amortization-table-body\");\r\n        const scrollableTbody = document.querySelector(\".scrollable-tbody\");\r\n    \r\n        if (!expandBox || !expandText || !tableBody || !scrollableTbody) {\r\n            console.error(\"Expand/Collapse elements not found.\");\r\n            return;\r\n        }\r\n    \r\n        console.log(\"Initializing Expand/Collapse Logic\");\r\n    \r\n        const collapsedRows = 5; // Show only the first 5 rows when collapsed\r\n        let isExpanded = false;\r\n    \r\n        function updateTableView() {\r\n            if (isExpanded) {\r\n                scrollableTbody.classList.add(\"expanded\"); // Enable scrolling\r\n                expandText.textContent = \"Collapse\";\r\n                expandIcon.style.transform = \"rotate(180deg)\";\r\n            } else {\r\n                scrollableTbody.classList.remove(\"expanded\"); // Hide extra rows\r\n                expandText.textContent = \"Expand\";\r\n                expandIcon.style.transform = \"rotate(0deg)\";\r\n            }\r\n        }\r\n    \r\n        // Click event to toggle expand/collapse\r\n        expandBox.addEventListener(\"click\", function () {\r\n            isExpanded = !isExpanded;\r\n            updateTableView();\r\n        });\r\n    \r\n        // Ensure only the first `collapsedRows` are shown initially\r\n        updateTableView();\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n    const amortizationData = calculateAmortizationSchedule(); // Ensure data is generated\r\n    if (amortizationData) {\r\n        populateAmortizationTable(amortizationData);\r\n        initializeExpandCollapseLogic(); // Ensure it runs after the table is filled\r\n    } else {\r\n        console.error(\"Failed to generate amortization schedule.\");\r\n    }\r\n\r\n    \r\n    \r\n      const amortizationChartCanvas = document.getElementById('amortizationChart');\r\n\r\n      // Update Hover Values\r\n      function updateHoverValues(balance, interest, principal) {\r\n        const balanceLabel = document.getElementById('label-balance');\r\n        const interestLabel = document.getElementById('label-interest');\r\n        const principalLabel = document.getElementById('label-principal');\r\n    \r\n        if (balanceLabel) balanceLabel.textContent = `$${formatter.format(Math.ceil(balance))}`;\r\n        if (interestLabel) interestLabel.textContent = `$${formatter.format(Math.ceil(interest))}`;\r\n        if (principalLabel) principalLabel.textContent = `$${formatter.format(Math.ceil(principal))}`;\r\n    \r\n        console.log(\"Hover values updated with rounded values:\", {\r\n            balance: Math.ceil(balance),\r\n            interest: Math.ceil(interest),\r\n            principal: Math.ceil(principal),\r\n        });\r\n    }\r\n    \r\n        \r\n    let currentHoverIndex = 0; // Default to the first month\r\n\r\n    function calculateHoverIndex(x, chartWidth, padding, dataLength) {\r\n        const rawIndex = ((x - padding.left) / chartWidth) * (dataLength - 1);\r\n    \r\n        // Ensure rounding bias towards edges for better coverage\r\n        const adjustedIndex = Math.round(rawIndex);\r\n        if (adjustedIndex >= dataLength - 1) {\r\n            return dataLength - 1; // Snap to last index\r\n        }\r\n        return Math.min(Math.max(adjustedIndex, 0), dataLength - 1);\r\n    }\r\n \r\n    amortizationChartCanvas.addEventListener('mousemove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n    \r\n        const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n        const buffer = 10; // Extend sensitivity by 10px\r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n        if (x >= padding.left - buffer && x <= amortizationChartCanvas.offsetWidth - padding.right + buffer) {\r\n            const index = calculateHoverIndex(x, chartWidth, padding, lastAmortizationData.balanceData.length);\r\n            updateHoverEffects(index);\r\n        }\r\n    });\r\n    \r\n    amortizationChartCanvas.addEventListener('touchmove', (event) => {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0] || event.changedTouches[0];\r\n        const x = touch.clientX - rect.left;\r\n    \r\n        const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n        const buffer = 10; // Extend sensitivity by 10px\r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n        if (x >= padding.left - buffer && x <= amortizationChartCanvas.offsetWidth - padding.right + buffer) {\r\n            const index = calculateHoverIndex(x, chartWidth, padding, lastAmortizationData.balanceData.length);\r\n            updateHoverEffects(index);\r\n        }\r\n    });\r\n    \r\n\r\n    // Update Hover Effects\r\n    function updateHoverEffects(index) {\r\n        if (!lastAmortizationData || \r\n            !lastAmortizationData.balanceData || \r\n            !lastAmortizationData.cumulativeInterestData || \r\n            !lastAmortizationData.cumulativePrincipalData ||\r\n            lastAmortizationData.balanceData.length === 0) {\r\n            console.error(\"Amortization data is not available for hover effects.\");\r\n            return;\r\n        }\r\n\r\n        if (index < 0 || index >= lastAmortizationData.balanceData.length) {\r\n            console.warn(\"Invalid hover index:\", index);\r\n            return;\r\n        }\r\n\r\n        currentHoverIndex = index; // Save the current hover index\r\n        updateHoverValues(\r\n            lastAmortizationData.balanceData[index] || 0,\r\n            lastAmortizationData.cumulativeInterestData[index] || 0,\r\n            lastAmortizationData.cumulativePrincipalData[index] || 0\r\n        );\r\n\r\n        const startDate = new Date();\r\n        const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n        displayHoverDate(hoverDate);\r\n\r\n        drawAmortizationChart(\r\n            lastAmortizationData.balanceData,\r\n            lastAmortizationData.cumulativeInterestData,\r\n            lastAmortizationData.cumulativePrincipalData,\r\n            index\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    amortizationChartCanvas.addEventListener('touchmove', handleTouchEvent, { passive: true });\r\n    amortizationChartCanvas.addEventListener('touchstart', handleTouchEvent, { passive: true });\r\n\r\n\r\n\r\n    \r\n    function handleTouchEvent(event) {\r\n        const rect = amortizationChartCanvas.getBoundingClientRect();\r\n        const touch = event.touches[0] || event.changedTouches[0];\r\n        const x = touch.clientX - rect.left;\r\n        const padding = { top: 10, right: 35, bottom: 50, left: 50 };\r\n    \r\n        const chartWidth = amortizationChartCanvas.offsetWidth - padding.left - padding.right;\r\n    \r\n        // Calculate index with better coverage across the full chart\r\n        const rawIndex = ((x - padding.left) / chartWidth) * (lastAmortizationData.balanceData.length - 1);\r\n        const index = Math.min(Math.max(Math.round(rawIndex), 0), lastAmortizationData.balanceData.length - 1);\r\n    \r\n        if (x >= padding.left && x <= amortizationChartCanvas.offsetWidth - padding.right) {\r\n            currentHoverIndex = index; // Save the current hover index\r\n    \r\n            updateHoverValues(\r\n                lastAmortizationData.balanceData[index],\r\n                lastAmortizationData.cumulativeInterestData[index],\r\n                lastAmortizationData.cumulativePrincipalData[index]\r\n            );\r\n    \r\n            const startDate = new Date();\r\n            const hoverDate = new Date(startDate.setMonth(startDate.getMonth() + index));\r\n            displayHoverDate(hoverDate);\r\n    \r\n            drawAmortizationChart(\r\n                lastAmortizationData.balanceData,\r\n                lastAmortizationData.cumulativeInterestData,\r\n                lastAmortizationData.cumulativePrincipalData,\r\n                index\r\n            );\r\n        } else {\r\n            // Handle touch/mouse events outside the chart bounds if necessary\r\n            drawAmortizationChart(\r\n                lastAmortizationData.balanceData,\r\n                lastAmortizationData.cumulativeInterestData,\r\n                lastAmortizationData.cumulativePrincipalData,\r\n                currentHoverIndex // Retain the last valid hover index\r\n            );\r\n        }\r\n    \r\n        event.preventDefault(); // Prevent default scrolling\r\n    }\r\n    \r\n   \r\n   \r\n\r\n\r\n\r\n    function displayHoverDate(date) {\r\n        const hoverDateContainer = document.getElementById('amortizationHoverDate');\r\n        if (!hoverDateContainer) {\r\n            console.error(\"Hover date container not found.\");\r\n            return;\r\n        }\r\n    \r\n        const month = date.toLocaleString('default', { month: 'long' }); // Full month name\r\n        const year = date.getFullYear();\r\n        hoverDateContainer.textContent = `${month} ${year}`;\r\n    }\r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    function updateAmortizationLabels(totalInterestPaid, totalPrincipalPaid, totalAmountPaid) {\r\n        const labelsContainer = document.getElementById('amortizationLabels');\r\n        if (!labelsContainer) {\r\n            console.error(\"Amortization labels container not found.\");\r\n            return;\r\n        }\r\n    \r\n        // Use the first month's balance as the default remaining balance\r\n        const initialBalance = lastAmortizationData?.balanceData[0] || 0;\r\n    \r\n        // Use 0 as fallback if any value is NaN or undefined\r\n        totalInterestPaid = isNaN(totalInterestPaid) ? 0 : Math.ceil(totalInterestPaid);\r\n        totalPrincipalPaid = isNaN(totalPrincipalPaid) ? 0 : Math.ceil(totalPrincipalPaid);\r\n        totalAmountPaid = isNaN(totalAmountPaid) ? 0 : Math.ceil(totalAmountPaid);\r\n    \r\n        // Render the static labels\r\n        labelsContainer.innerHTML = `\r\n            <div class=\"label-item\">\r\n                <span class=\"color-circle\" style=\"background-color: #175134;\"></span>\r\n                <span class=\"label-name\">Remaining Balance</span>\r\n                <span class=\"label-value\" id=\"label-balance\">$${formatter.format(initialBalance)}</span>\r\n            </div>\r\n            <div class=\"label-item\">\r\n                <span class=\"color-circle\" style=\"background-color: #91BBA6;\"></span>\r\n                <span class=\"label-name\">Total Interest Paid</span>\r\n                <span class=\"label-value\" id=\"label-interest\">$${formatter.format(totalInterestPaid)}</span>\r\n            </div>\r\n            <div class=\"label-item\">\r\n                <span class=\"color-circle\" style=\"background-color: #3EB721;\"></span>\r\n                <span class=\"label-name\">Total Principal Paid</span>\r\n                <span class=\"label-value\" id=\"label-principal\">$${formatter.format(totalPrincipalPaid)}</span>\r\n            </div>\r\n        `;\r\n    \r\n        console.log(\"Amortization labels updated with initial balance and totals:\", {\r\n            initialBalance,\r\n            totalInterestPaid,\r\n            totalPrincipalPaid,\r\n            totalAmountPaid,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // Event listeners\r\n        updateBtn.addEventListener('click', function () {\r\n            // Track the Google Ads conversion event\r\n            // gtag('event', 'conversion', {\r\n            //     'send_to': 'AW-11495710624/WkaLCNPA6_kZEKC_yukq'\r\n            // });\r\n        \r\n            // Call the existing calculation function\r\n            calculateAndDisplayResults();\r\n        });\r\n        \r\n\r\n    resetBtn.addEventListener('click', resetInputs);\r\n\r\n\r\n    function resetInputs() {\r\n        // Reset fields to default values from the `defaultValues` object\r\n        loanAmountInput.value = defaultValues.loanAmount.toFixed(0);\r\n        loanTermInput.value = defaultValues.loanTerm.toString();\r\n        interestRateInput.value = defaultValues.interestRate.toFixed(2);\r\n        extraPaymentInput.value = defaultValues.extraPayment;\r\n        downPaymentInput.value = defaultValues.downPayment.toFixed(0);\r\n        tradeInValueInput.value = defaultValues.tradeInValue.toFixed(0);\r\n        salesTaxInput.value = defaultValues.salesTax.toFixed(1);\r\n        feesInput.value = defaultValues.fees.toFixed(0);\r\n    \r\n        // Recalculate results instead of clearing the chart\r\n        calculateAndDisplayResults();\r\n    \r\n        console.log(\"Inputs reset to default values and recalculated.\");\r\n    }\r\n     \r\n\r\n\r\n\r\n\r\n\r\n    });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t466: 0,\n\t669: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmonvvo_app\"] = self[\"webpackChunkmonvvo_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [669], () => (__webpack_require__(848)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["document","addEventListener","console","log","loanAmountInput","getElementById","loanTermInput","interestRateInput","downPaymentInput","extraPaymentInput","tradeInValueInput","salesTaxInput","feesInput","updateBtn","resetBtn","autoChartCanvas","defaultValues","loanAmount","loanTerm","interestRate","downPayment","extraPayment","tradeInValue","salesTax","fees","value","lastAmortizationData","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","calculateAndDisplayResults","parseFloat","parseInt","principal","warn","monthlyInterestRate","monthlyPayment","Math","pow","isNaN","totalMonthlyPayment","updateChartLabels","updateDoughnutChart","calculateAmortizationSchedule","schedule","length","error","totalInterestPaid","totalPrincipalPaid","balanceData","cumulativeInterestData","cumulativePrincipalData","labelPrincipalInterest","labelExtraPayment","textContent","style","currency","format","ctx","getContext","size","width","height","principalAndInterest","extraPaymentComponent","data","some","colors","total","reduce","a","b","formattedTotal","clearRect","outerRadius","innerRadius","centerX","centerY","gapWidth","startAngle","PI","forEach","index","segmentAngle","endAngle","beginPath","arc","closePath","fillStyle","fill","strokeStyle","lineWidth","stroke","fontSize","font","concat","textAlign","textBaseline","fillText","showTab","tabName","paymentBreakdownContent","amortizationScheduleContent","display","amortizationChartCanvas","setTimeout","drawAmortizationChart","map","row","balance","interest","updateAmortizationLabels","loanBalanceInput","loanBalance","paymentBreakdownTab","amortizationScheduleTab","hoverIndex","arguments","undefined","canvas","dpr","window","devicePixelRatio","isSmallScreen","innerWidth","canvasHeight","floor","parentElement","clientWidth","scale","padding","top","right","bottom","left","gridColor","labelColor","yAxisMax","ceil","max","apply","_toConsumableArray","getY","getX","i","y","moveTo","lineTo","toFixed","months","years","monthIndex","x","yearLabel","Date","getFullYear","drawLine","color","hoverX","balanceY","principalY","interestY","dotRadius","interestPayment","principalPayment","min","push","month","populateAmortizationTable","amortizationData","tableBody","innerHTML","startDate","setMonth","getMonth","tr","createElement","dateCell","paymentDate","toLocaleDateString","year","appendChild","principalCell","interestCell","balanceCell","initializeExpandCollapseLogic","expandBox","querySelector","expandText","expandIcon","scrollableTbody","collapsedRows","isExpanded","updateTableView","classList","add","transform","remove","updateHoverValues","balanceLabel","interestLabel","principalLabel","currentHoverIndex","calculateHoverIndex","chartWidth","dataLength","rawIndex","adjustedIndex","round","event","rect","getBoundingClientRect","clientX","buffer","offsetWidth","updateHoverEffects","touch","touches","changedTouches","hoverDate","displayHoverDate","handleTouchEvent","passive","preventDefault","date","hoverDateContainer","toLocaleString","totalAmountPaid","_lastAmortizationData","labelsContainer","initialBalance","resetInputs","toString"],"sourceRoot":""}